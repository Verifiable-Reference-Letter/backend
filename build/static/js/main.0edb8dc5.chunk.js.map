{"version":3,"sources":["services/CryptService.ts","nav/Nav.tsx","routes.tsx","home/Home.tsx","services/CacheService.ts","components/FileUpload/FileUpload.tsx","components/Profile/index.ts","components/Profile/Profile.tsx","components/FileView/FileView.tsx","components/Confirm/Confirm.tsx","components/FileHistory/index.ts","components/FileHistory/FileHistory.tsx","WriterLetterDisplay/WriterLetterDisplay.tsx","writer/Writer.tsx","components/Select/index.ts","components/Select/Select.tsx","components/Confirm/index.ts","RequestorLetterDisplay/RequestorLetterDisplay.tsx","requestor/Requestor.tsx","RecipientLetterDisplay/RecipientLetterDisplay.tsx","recipient/Recipient.tsx","login/Login.tsx","dashboard/Dashboard.tsx","App.tsx","index.tsx"],"names":["CryptService","publicKey","ethereum","this","window","enable","then","catch","e","file","publicAddress","createFileData","fileData","fileDataString","console","log","letterType","request","method","params","encryptedMessage","EthUtil","Buffer","from","JSON","stringify","SigUtil","data","Promise","resolve","reject","letterTitle","letterUrl","decryptedMessage","parse","reader","FileReader","undefined","readAsDataURL","onload","result","name","type","Nav","props","onConnect","bind","brandLink","loggedIn","Navbar","bg","variant","Brand","onClick","href","Toggle","Collapse","className","connectedTo","Button","Text","user","Dropdown","id","Menu","alignRight","to","style","textDecoration","Item","React","Component","headers","Headers","set","Home","state","CacheService","minutes","memCache","memoryCache","Cache","duration","key","value","put","get","FileUpload","File","displayMessage","buffering","onFormSubmit","onChange","setState","target","files","size","restrictPdf","setTimeout","onUpload","newDisplayMessage","Form","onSubmit","Group","onClose","Profile","Card","Image","src","Spinner","animation","FileView","profileIsOpen","selectedPublicAddress","fetchUrl","retrieveProfileFromServer","init","body","auth","jwtToken","fetch","process","response","json","length","selectedUserProfile","width","height","Modal","show","onHide","closeProfileModal","backdrop","scrollable","Header","closeButton","Title","Body","Confirm","confirmed","Col","Row","disabled","onConfirm","FileHistory","userProfiles","collapseIsOpen","i","history","push","Map","userProfile","historyList","letterRecipient","openProfileModal","in","sentAt","WriterLetterDisplay","uploadModal","createRef","viewModal","cryptService","cacheService","loadingHistory","historyIsOpen","uploadIsOpen","viewIsOpen","confirmIsOpen","letter","letterId","uploadedFile","uploadToServer","encrypt","encryptedFile","closeUploadModal","contents","status","current","changeDisplayMessage","encryptedLetter","retrieveLetterContentsFromServer","decrypt","openConfirmModal","retrieveHistoryFromServer","numRecipients","stopPropagation","letterRequestor","openUploadModal","closeViewModal","openViewModal","closeHistoryModal","openHistoryModal","aria-controls","aria-expanded","ref","openMessageModal","requestedAt","toString","uploadedAt","closeConfirmModal","onUploadSubmit","Writer","letters","loadingLetters","lettersList","map","l","k","Select","selectedRecipients","previouslySelectedRecipients","users","header","selectRecipients","InputGroup","multiple","labelKey","filterBy","options","paginate","selected","renderMenuItemChildren","option","slice","recipientsList","OverlayTrigger","overlay","Tooltip","placement","pointerEvents","RequestorLetterDisplay","loadingSelect","selectIsOpen","sendUpdatedLetterRecipientsToServer","retrieveRecipientsFromServer","letterWriter","closeSelectModal","openSelectModal","filter","onSelectSubmit","Requestor","writerTypeahead","messageIsOpen","selectedWriter","userInit","letterInit","sendNewLetterRequestToServer","customMessage","selectWriter","placeholder","RecipientLetterDisplay","Recipient","Login","inputName","loginMode","handleInputChange","onLoginClick","signMessage","authenticate","alert","signup","err","nonce","message","web3","utils","utf8ToHex","eth","personal","sign","signature","j","callback","event","loginDisplay","toggleMode","signupDisplay","FormControl","onSignupClick","accounts","web3Provider","Dashboard","App","numErcBeingTraded","contract","onLogin","methods","rate","call","BN","currentProvider","Web3","u","home","login","dashboard","requestor","writer","recipient","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0edb8dc5.chunk.js","sourcesContent":["import * as EthUtil from \"ethereumjs-util\";\r\nimport * as SigUtil from \"eth-sig-util\";\r\nimport FileData from \"../common/FileData.interface\";\r\n\r\nclass CryptService {\r\n  private publicKey: string = \"\";\r\n  private ethereum: any;\r\n\r\n  constructor() {\r\n    this.publicKey = \"\";\r\n    this.ethereum = (window as any).ethereum;\r\n    this.ethereum\r\n      .enable()\r\n      .then(() => {})\r\n      .catch((e: Error) => {});\r\n  }\r\n\r\n  async encrypt(file: File, publicAddress: string): Promise<string> {\r\n    try {\r\n      const fileData = await this.createFileData(file); // rejects on failure\r\n\r\n      let fileDataString: string | null = null;\r\n      console.log(publicAddress);\r\n      console.log(fileData.letterType);\r\n      return this.ethereum\r\n        .request({\r\n          method: \"eth_getEncryptionPublicKey\",\r\n          params: [publicAddress], // you must have access to the specified account\r\n        })\r\n        .then((publicKey: string) => {\r\n          console.log(publicKey);\r\n          this.publicKey = publicKey;\r\n  \r\n          const encryptedMessage = EthUtil.bufferToHex(\r\n            Buffer.from(\r\n              JSON.stringify(\r\n                SigUtil.encrypt(\r\n                  this.publicKey,\r\n                  { data: JSON.stringify(fileData) },\r\n                  \"x25519-xsalsa20-poly1305\"\r\n                )\r\n              ),\r\n              \"utf8\"\r\n            )\r\n          );\r\n          // console.log(encryptedMessage);\r\n          fileDataString = encryptedMessage;\r\n          return Promise.resolve(fileDataString);\r\n        })\r\n        .catch((e: Error) => {\r\n          console.log(e);\r\n          return Promise.resolve(fileDataString);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"error in file reader and/or encryption\");\r\n      return Promise.reject(\"error in file reader and/or encryption\");\r\n    }\r\n  }\r\n\r\n  async decrypt(file: string, publicAddress: string) : Promise<FileData> {\r\n    console.log(publicAddress);\r\n    console.log(file);\r\n    let fileData: FileData = {letterTitle: \"\", letterType: \"invalid\", letterUrl: \"\"};\r\n    return this.ethereum\r\n      .request({\r\n        method: \"eth_decrypt\",\r\n        params: [file, publicAddress],\r\n      })\r\n      .then((decryptedMessage: string) => {\r\n        // console.log(decryptedMessage);\r\n        fileData = JSON.parse(decryptedMessage);\r\n        console.log(\"parsed\");\r\n        return Promise.resolve(fileData);\r\n      })\r\n      .catch((e: Error) => {\r\n        console.log(e);\r\n        return Promise.reject(\"failure to decrypt\");\r\n      });\r\n  }\r\n\r\n  async createFileData(file: File) : Promise<FileData> {\r\n    let fileData: FileData = {\r\n      letterUrl: \"\",\r\n      letterTitle: \"\",\r\n      letterType: \"invalid\",\r\n    };\r\n    return new Promise((resolve, reject) => {\r\n      let reader = new FileReader();\r\n      if (file !== undefined) {\r\n        reader.readAsDataURL(file);\r\n        reader.onload = (e: any) => {\r\n          if (typeof reader.result === \"string\") {\r\n            console.log(\"letterUrl obtained\");\r\n            // console.log(reader.result);\r\n            fileData.letterTitle = file.name;\r\n            fileData.letterType = file.type;\r\n            fileData.letterUrl = reader.result;\r\n            resolve(fileData);\r\n            // console.log(fileData);\r\n            // { letterUrl: reader.result, letterTitle: file.name, letterType : file.type };\r\n          } else {\r\n            console.log(\"error with reader.result type\");\r\n            reject(\"failed to get reader.result type string\");\r\n          }\r\n        };\r\n      }\r\n    });\r\n  }\r\n}\r\nexport default CryptService;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./Nav.css\";\r\n\r\nimport * as ROUTES from \"../routes\";\r\nimport UserAuth from \"../common/UserAuth.interface\";\r\n\r\ntype NavProps = {\r\n  user: UserAuth;\r\n  connectedTo: boolean; // metamask\r\n  onConnect: () => void;\r\n  loggedIn: boolean; // app\r\n};\r\ntype NavState = {};\r\n\r\nclass Nav extends React.Component<NavProps, NavState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.onConnect = this.onConnect.bind(this);\r\n  }\r\n\r\n  onConnect() {\r\n    // callback\r\n    this.props.onConnect();\r\n  }\r\n\r\n  render() {\r\n    const brandLink = this.props.loggedIn ? \"/dashboard\" : \"/\";\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand\r\n          onClick={() => {\r\n            return false;\r\n          }}\r\n          href={brandLink}\r\n        >\r\n          ETC Reference Letter dApp\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle />\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n          {!this.props.connectedTo && (\r\n            <Button\r\n              className=\"connect\"\r\n              onClick={() => {\r\n                this.onConnect();\r\n              }}\r\n            >\r\n              Connect\r\n            </Button>\r\n          )}\r\n          {this.props.connectedTo && (\r\n            <Navbar.Text className=\"navText\">\r\n              Connected to Metamask: <span>{this.props.connectedTo ? this.props.user.publicAddress : \"--\"}</span>\r\n            </Navbar.Text>\r\n          )}\r\n        </Navbar.Collapse>\r\n        <Dropdown>\r\n          <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n            Menu\r\n          </Dropdown.Toggle>\r\n          {this.props.loggedIn && (\r\n            <Dropdown.Menu alignRight={true}>\r\n              <Link to={ROUTES.HOME} style={{ textDecoration: \"none\" }}>\r\n                <li>\r\n                  <Dropdown.Item href=\"#/action-0\">Home</Dropdown.Item>\r\n                </li>\r\n              </Link>\r\n              {/* <Link to={ROUTES.LOGIN} style={{ textDecoration: \"none\" }}>\r\n              <li>\r\n                <Dropdown.Item href=\"#/action-1\">Login</Dropdown.Item>\r\n              </li>\r\n            </Link> */}\r\n              <Link to={ROUTES.DASHBOARD} style={{ textDecoration: \"none\" }}>\r\n                <li>\r\n                  <Dropdown.Item href=\"#/action-2\">Dashboard</Dropdown.Item>\r\n                </li>\r\n              </Link>\r\n              <Link to={ROUTES.REQUESTOR} style={{ textDecoration: \"none\" }}>\r\n                <li>\r\n                  <Dropdown.Item href=\"#/action-3\">Requestor</Dropdown.Item>\r\n                </li>\r\n              </Link>\r\n              <Link to={ROUTES.WRITER} style={{ textDecoration: \"none\" }}>\r\n                <li>\r\n                  <Dropdown.Item href=\"#/action-4\">Writer</Dropdown.Item>\r\n                </li>\r\n              </Link>\r\n              <Link to={ROUTES.RECIPIENT} style={{ textDecoration: \"none\" }}>\r\n                <li>\r\n                  <Dropdown.Item href=\"#/action-5\">Recipient</Dropdown.Item>\r\n                </li>\r\n              </Link>\r\n            </Dropdown.Menu>\r\n          )}\r\n          {!this.props.loggedIn && (\r\n            <Dropdown.Menu alignRight={true}>\r\n              <Link to={ROUTES.HOME} style={{ textDecoration: \"none\" }}>\r\n                <li>\r\n                  <Dropdown.Item href=\"#/action-0\">Home</Dropdown.Item>\r\n                </li>\r\n              </Link>\r\n              <Link to={ROUTES.LOGIN} style={{ textDecoration: \"none\" }}>\r\n                <li>\r\n                  <Dropdown.Item href=\"#/action-1\">Login</Dropdown.Item>\r\n                </li>\r\n              </Link>\r\n            </Dropdown.Menu>\r\n          )}\r\n        </Dropdown>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\nexport default Nav;\r\n","export const HOME = '/';\r\nexport const LOGIN = '/login';\r\nexport const DASHBOARD = \"/dashboard\";\r\nexport const RECIPIENT = '/recipient';\r\nexport const REQUESTOR = '/requestor';\r\nexport const WRITER = '/writer';\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport User from \"../common/UserAuth.interface\";\r\nimport * as ROUTES from \"../routes\";\r\nimport \"./Home.css\";\r\n\r\nconst headers = new Headers();\r\nheaders.set(\"Access-Control-Allow-Origin\", \"*\");\r\nheaders.set(\"Content-Type\", \"application/json\");\r\n\r\ninterface HomeProps {\r\n  user: User;\r\n}\r\ninterface HomeState {}\r\n\r\nclass Home extends React.Component<HomeProps, HomeState> {\r\n  constructor(props: HomeProps) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home\">\r\n        <Redirect to={ROUTES.LOGIN} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Home;\r\n","import memoryCache, { CacheClass } from 'memory-cache';\r\n\r\nclass CacheService<K, V> {\r\n  private memCache: CacheClass<K, V> = new memoryCache.Cache();\r\n  private duration: number; // in milliseconds\r\n  constructor(minutes: number) {\r\n    this.duration = 1000 * minutes * 60;\r\n  }\r\n  put(key: K, value: V) {\r\n    console.log(\"put\", key, value);\r\n    this.memCache.put(key, value, this.duration);\r\n  }\r\n  get(key: K) {\r\n    console.log(\"get\", key);\r\n    return this.memCache.get(key);\r\n  }\r\n} export default CacheService;","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nimport User from \"../../common/UserAuth.interface\";\r\nimport \"./FileUpload.css\";\r\nimport { DropdownDivider } from \"react-bootstrap/Dropdown\";\r\n\r\ninterface FileUploadProps {\r\n  user: User;\r\n  restrictPdf?: boolean;\r\n  onUpload: (file: File) => void;\r\n  onClose: () => void;\r\n}\r\ninterface FileUploadState {\r\n  file: File;\r\n  displayMessage: string;\r\n  buffering: boolean;\r\n}\r\n\r\nclass FileUpload extends React.Component<FileUploadProps, FileUploadState> {\r\n  constructor(props: FileUploadProps) {\r\n    super(props);\r\n    this.state = {\r\n      file: new File([], \"\"),\r\n      displayMessage: \"\",\r\n      buffering: false,\r\n    };\r\n    this.onFormSubmit = this.onFormSubmit.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  onChange(e: any) {\r\n    console.log(\"file changed\");\r\n    this.setState({ file: e.target.files[0] });\r\n  }\r\n\r\n  onFormSubmit() {\r\n    const file = this.state.file;\r\n    console.log(file);\r\n    if (file && file.size === 0) {\r\n      console.log(\"no file uploaded\");\r\n      this.setState({ displayMessage: \"No File Uploaded.\" });\r\n    } else if (this.props.restrictPdf && file.type !== \"application/pdf\") {\r\n      console.log(\"not a pdf\");\r\n      this.setState({ displayMessage: \"Please Upload a PDF.\" });\r\n    } else {\r\n      console.log(\"checking if upload to server\");\r\n      this.setState({ buffering: true });\r\n      setTimeout(() => {\r\n        this.props.onUpload(file);\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  /*encryptFile(file: File) {\r\n    console.log(\"pretending to encrypt file\");\r\n    this.fileUploadToServer(file);\r\n  }\r\n\r\n  fileUploadToServer(file: File) {\r\n    console.log(\"sending file to server\");\r\n\r\n    // let fileForm: string = this.encryptFile(file);\r\n    \r\n    // REMOVE:\r\n    let fileForm: FormData = new FormData();\r\n    fileForm.append(\"file\", file);\r\n    // END REMOVE\r\n\r\n    this.setState({displayMessage: \"Uploading File.\"});\r\n\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL}` + this.props.fetchUrl, {\r\n      body: fileForm,\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"mutlipart/form-data\",\r\n        jwtToken: this.props.user.jwtToken,\r\n      },\r\n      method: \"POST\",\r\n    })\r\n      .then((response: any) => {\r\n        console.log(\"body\", response.json);\r\n        console.log(\"status\", response.status);\r\n        if (response.status === 200) {\r\n          this.props.onUpload(this.state.file);\r\n        } else {\r\n          this.changeDisplayMessage(\"Upload Failed. Try Again Later.\");\r\n          this.props.onUpload(this.state.file); // DELETE: here for testing purposes\r\n        }\r\n      })\r\n      .catch((e: Error) => {\r\n        console.log(e);\r\n      });\r\n  }*/\r\n\r\n  changeDisplayMessage(newDisplayMessage: string) {\r\n    this.setState({ displayMessage: newDisplayMessage });\r\n  }\r\n\r\n  render() {\r\n    const { displayMessage, buffering } = this.state;\r\n    return (\r\n      <Form onSubmit={this.onFormSubmit.bind(this)}>\r\n        <Form.Group>\r\n          <Form.File id=\"fileUpload\" onChange={this.onChange} />\r\n          <div className=\"d-flex border-radius button-blur mb-2\">\r\n            <div className=\"text-warning mt-3 flex-fill \">\r\n              {displayMessage}\r\n            </div>\r\n            {/* {buffering && (\r\n              <div className=\"d-flex justify-content-end\">\r\n                <Spinner\r\n                  className=\"mt-4 mr-3\"\r\n                  animation=\"border\"\r\n                  variant=\"secondary\"\r\n                />\r\n              </div>\r\n            )} */}\r\n            <Button\r\n              className=\"mt-3 mr-3 flex-shrink-1 float-right\"\r\n              variant=\"outline-light\"\r\n              onClick={this.onFormSubmit}\r\n            >\r\n              Upload\r\n            </Button>\r\n            <Button\r\n              className=\"mt-3 flex-shrink-1 float-right\"\r\n              variant=\"outline-light\"\r\n              onClick={(e: any) => {\r\n                this.props.onClose();\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n          </div>\r\n        </Form.Group>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileUpload;\r\n","import Profile from \"./Profile\";\r\nexport default Profile;","import React from \"react\";\r\nimport { Button, Image, Card, Spinner } from \"react-bootstrap\";\r\nimport UserProfile from \"../../common/UserProfile.interface\";\r\nimport \"./Profile.css\";\r\n\r\ninterface ProfileProps {\r\n  user?: UserProfile;\r\n  onClose: () => void;\r\n}\r\ninterface ProfileState {}\r\n\r\nclass Profile extends React.Component<ProfileProps, ProfileState> {\r\n  componentWillMount() {\r\n    // make query for all other user information\r\n  }\r\n\r\n  constructor(props: ProfileProps) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n    return (\r\n      <div>\r\n        {user && (\r\n          <div className=\"d-flex mb-2\">\r\n            <Card className=\"flex-fill\">\r\n              <div className=\"m-2\">\r\n                <div className=\"\">Name: {user.name}</div>\r\n                <div className=\"text-break\">ID: {user.publicAddress}</div>\r\n              </div>\r\n            </Card>\r\n            <div className=\"ml-4 flex-shrink-1 float-right image-card\">\r\n              <Image\r\n                className=\"profile-image\"\r\n                src=\"https://engineering.lehigh.edu/sites/engineering.lehigh.edu/files/styles/faculty_photo/public/korth.jpg?itok=GfxQ6zFl\"\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {!user && (\r\n          <div className=\"d-flex justify-content-center\">\r\n            <Spinner\r\n              className=\"float-right mt-4 mr-3\"\r\n              animation=\"border\"\r\n              variant=\"secondary\"\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        <Button\r\n          className=\"mt-3 float-right\"\r\n          onClick={(e: any) => {\r\n            this.props.onClose();\r\n          }}\r\n        >\r\n          Close\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { Modal, Button, Spinner } from \"react-bootstrap\";\r\nimport LetterDetails from \"../../common/LetterDetails.interface\";\r\nimport UserProfile from \"../../common/UserProfile.interface\";\r\nimport FileData from \"../../common/FileData.interface\";\r\nimport Profile from \"../../components/Profile\";\r\nimport RequestBody from \"../../common/RequestBody.interface\";\r\nimport ResponseBody from \"../../common/ResponseBody.interface\";\r\nimport \"./FileView.css\";\r\nimport UserAuth from \"../../common/UserAuth.interface\";\r\n\r\ninterface FileViewProps {\r\n  user: UserAuth;\r\n  fileData?: FileData;\r\n  onClose: () => void;\r\n}\r\ninterface FileViewState {\r\n  profileIsOpen: boolean;\r\n  selectedPublicAddress: string;\r\n  selectedUserProfile?: UserProfile;\r\n}\r\n\r\nclass FileView extends React.Component<FileViewProps, FileViewState> {\r\n  constructor(props: FileViewProps) {\r\n    super(props);\r\n    this.state = {\r\n      profileIsOpen: false,\r\n      selectedPublicAddress: \"\",\r\n    };\r\n  }\r\n\r\n  openProfileModal(selectedPublicAddress: string) {\r\n    console.log(\"opening view modal\");\r\n    const fetchUrl = `/api/v1/users/${selectedPublicAddress}/profile`;\r\n    this.retrieveProfileFromServer(fetchUrl);\r\n  }\r\n\r\n  retrieveProfileFromServer(fetchUrl: string) {\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n\r\n    // get user profile from server\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`, init)\r\n      .then((response) => {\r\n        response\r\n          .json()\r\n          .then((body: ResponseBody) => {\r\n            const data: UserProfile[] = body.data;\r\n            console.log(response);\r\n            if (data && data.length !== 0) {\r\n              this.setState({\r\n                selectedUserProfile: data[0],\r\n                profileIsOpen: true,\r\n              });\r\n            }\r\n          })\r\n          .catch((e: Error) => {\r\n            console.log(e);\r\n          });\r\n      })\r\n      .catch((e: Error) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  closeProfileModal() {\r\n    console.log(\"closing view modal\");\r\n    this.setState({ profileIsOpen: false });\r\n  }\r\n  render() {\r\n    const { fileData } = this.props;\r\n    const { profileIsOpen } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"mb-3\">\r\n          {fileData && (\r\n            <embed\r\n              type={fileData.letterType}\r\n              src={fileData.letterUrl}\r\n              width=\"100%\"\r\n              height=\"500px\"\r\n            />\r\n          )}\r\n          {!fileData && (\r\n            <div className=\"d-flex justify-content-center\">\r\n              <Spinner\r\n                className=\"mb-3 .absolute-center\"\r\n                animation=\"border\"\r\n                variant=\"secondary\"\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <Button\r\n          className=\"mt-3 float-right\"\r\n          onClick={(e: any) => {\r\n            this.props.onClose();\r\n          }}\r\n        >\r\n          Close\r\n        </Button>\r\n\r\n        <Modal\r\n          id=\"profile-modal\"\r\n          show={profileIsOpen}\r\n          onHide={this.closeProfileModal.bind(this)}\r\n          backdrop=\"static\"\r\n          animation={false}\r\n          className=\"modal\"\r\n          scrollable={false}\r\n          size=\"sm\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>User Profile</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            {this.state.selectedUserProfile && (\r\n              <Profile\r\n                user={this.state.selectedUserProfile}\r\n                onClose={this.closeProfileModal.bind(this)}\r\n              />\r\n            )}\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileView;\r\n","import React from \"react\";\r\nimport { Button, Row, Col, Spinner } from \"react-bootstrap\";\r\nimport UserAuth from \"../../common/User.interface\";\r\nimport \"./Confirm.css\";\r\n\r\ninterface ConfirmProps {\r\n  user: UserAuth;\r\n  onConfirm: () => void;\r\n  onClose: () => void;\r\n}\r\ninterface ConfirmState {\r\n  confirmed: boolean;\r\n}\r\n\r\nclass Confirm extends React.Component<ConfirmProps, ConfirmState> {\r\n  constructor(props: ConfirmProps) {\r\n    super(props);\r\n    this.state = {\r\n      confirmed: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { confirmed } = this.state;\r\n    return (\r\n      <Col>\r\n        <Row>Submit Your Request?</Row>\r\n        <Row className=\"d-flex justify-content-end\">\r\n          <div className=\"mt-3 mr-3\">\r\n            {confirmed && <Spinner animation=\"border\" variant=\"secondary\" />}\r\n          </div>\r\n          <Button\r\n            disabled={confirmed}\r\n            className=\"mt-3 mr-3 flex-shrink-1\"\r\n            onClick={(e: any) => {\r\n              this.setState({ confirmed: true });\r\n              this.props.onConfirm();\r\n            }}\r\n          >\r\n            Confirm\r\n          </Button>\r\n          <Button\r\n            className=\"mt-3 flex-shrink-1\"\r\n            onClick={(e: any) => {\r\n              this.props.onClose();\r\n            }}\r\n          >\r\n            Back\r\n          </Button>\r\n        </Row>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Confirm;\r\n","import FileHistory from \"./FileHistory\";\r\nexport default FileHistory;","import React from \"react\";\r\nimport { Card, Collapse, Col, Row, Button, Modal } from \"react-bootstrap\";\r\nimport \"./FileHistory.css\";\r\nimport LetterHistory from \"../../common/LetterHistory.interface\";\r\nimport UserProfile from \"../../common/UserProfile.interface\";\r\nimport Profile from \"../../components/Profile\";\r\nimport RequestBody from \"../../common/RequestBody.interface\";\r\nimport ResponseBody from \"../../common/ResponseBody.interface\";\r\nimport User from \"../../common/User.interface\";\r\nimport UserAuth from \"../../common/UserAuth.interface\";\r\n\r\ninterface FileHistoryProps {\r\n  user: UserAuth;\r\n  history: LetterHistory[];\r\n  onClose: () => void;\r\n}\r\ninterface FileHistoryState {\r\n  collapseIsOpen: boolean[];\r\n  profileIsOpen: boolean;\r\n  selectedUserProfile?: UserProfile;\r\n}\r\n\r\nclass FileHistory extends React.Component<FileHistoryProps, FileHistoryState> {\r\n  private userProfiles: Map<string, UserProfile>;\r\n\r\n  constructor(props: FileHistoryProps) {\r\n    super(props);\r\n\r\n    let collapseIsOpen = [];\r\n    for (let i = 0; i < this.props.history.length; i++) {\r\n      collapseIsOpen.push(false);\r\n    }\r\n\r\n    this.state = {\r\n      collapseIsOpen: collapseIsOpen,\r\n      profileIsOpen: false,\r\n    };\r\n\r\n    this.userProfiles = new Map<string, UserProfile>();\r\n  }\r\n\r\n  async closeProfileModal() {\r\n    console.log(\"closing profile modal\");\r\n    this.setState({ profileIsOpen: false });\r\n  }\r\n\r\n  async openProfileModal(publicAddress: string) {\r\n    console.log(\"opening profile modal\");\r\n    const userProfile = this.userProfiles.get(publicAddress);\r\n    console.log(userProfile);\r\n    if (userProfile === undefined) {\r\n      const fetchUrl = `/api/v1/users/${publicAddress}/profile`;\r\n      this.retrieveProfileFromServer(fetchUrl);\r\n    } else {\r\n      this.setState({ selectedUserProfile: userProfile, profileIsOpen: true });\r\n    }\r\n  }\r\n\r\n  async retrieveProfileFromServer(fetchUrl: string) {\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n\r\n    // get user profile from server\r\n    try {\r\n      let response = await fetch(\r\n        `${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`,\r\n        init\r\n      );\r\n      let body = await response.json();\r\n\r\n      const data: UserProfile[] = body.data;\r\n      console.log(response);\r\n      console.log(data);\r\n      if (data && data.length !== 0) {\r\n        this.userProfiles.set(data[0].publicAddress, data[0]);\r\n        this.setState({\r\n          profileIsOpen: true,\r\n          selectedUserProfile: data[0],\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { history } = this.props;\r\n    const { profileIsOpen } = this.state;\r\n\r\n    let historyList = [];\r\n    for (let i = 0; i < history.length; i += 2) {\r\n      historyList.push(\r\n        <Row>\r\n          <Col>\r\n            <Card className=\"full-width opacity-0 mt-3\">\r\n              <div className=\"d-flex justify-content-between\">\r\n                <Card.Header\r\n                  className=\"flex-fill history-entry\"\r\n                  onClick={() => {\r\n                    let collapseIsOpen = [...this.state.collapseIsOpen];\r\n                    collapseIsOpen[i] = !collapseIsOpen[i];\r\n                    this.setState({ collapseIsOpen: collapseIsOpen });\r\n                  }}\r\n                >\r\n                  {history[i].letterRecipient.name}\r\n                </Card.Header>\r\n                <Card.Header\r\n                  className=\"flex-shrink-1 history-collapse-button\"\r\n                  onClick={() => {\r\n                    this.openProfileModal(\r\n                      history[i].letterRecipient.publicAddress\r\n                    );\r\n                  }}\r\n                ></Card.Header>\r\n              </div>\r\n            </Card>\r\n            <Collapse in={this.state.collapseIsOpen[i]}>\r\n              <div className=\"body-text text-white-50\">\r\n                Sent At: {history[i].sentAt}\r\n              </div>\r\n            </Collapse>\r\n          </Col>\r\n          {i + 1 < history.length && (\r\n            <Col>\r\n              <Card className=\"full-width opacity-0 mt-3\">\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <Card.Header\r\n                    className=\"flex-fill history-entry\"\r\n                    onClick={() => {\r\n                      this.openProfileModal(\r\n                        history[i + 1].letterRecipient.publicAddress\r\n                      );\r\n                    }}\r\n                  >\r\n                    {history[i + 1].letterRecipient.name}\r\n                  </Card.Header>\r\n                  <Card.Header\r\n                    className=\"flex-shrink-1 history-collapse-button\"\r\n                    onClick={() => {\r\n                      let collapseIsOpen = [...this.state.collapseIsOpen];\r\n                      collapseIsOpen[i + 1] = !collapseIsOpen[i + 1];\r\n                      this.setState({ collapseIsOpen: collapseIsOpen });\r\n                    }}\r\n                  ></Card.Header>\r\n                </div>\r\n              </Card>\r\n              <Collapse in={this.state.collapseIsOpen[i + 1]}>\r\n                <div className=\"body-text text-white-50\">\r\n                  Sent At: {history[i + 1].sentAt}\r\n                </div>\r\n              </Collapse>\r\n            </Col>\r\n          )}\r\n\r\n          {i + 1 >= history.length && (\r\n            <Col>\r\n              <Card className=\"full-width opacity-0 mt-3\"></Card>\r\n              <Card.Header className=\"d-flex justify-content-between history-placeholder\"></Card.Header>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"button-blur\">\r\n        {history.length === 0 && (\r\n          <Col>\r\n            <Row>\r\n              <h5 className=\"w-100 text-center\">No History</h5>\r\n            </Row>\r\n          </Col>\r\n        )}\r\n        {history.length !== 0 && (\r\n          <>\r\n            <Col>\r\n              <Row>\r\n                <h5>History</h5>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"history-display\">{historyList}</Col>\r\n              </Row>\r\n              <Row className=\"justify-content-end mb-2\">\r\n                <Button\r\n                  className=\"mt-3 float-right\"\r\n                  variant=\"outline-light\"\r\n                  onClick={(e: any) => {\r\n                    this.props.onClose();\r\n                  }}\r\n                >\r\n                  Close\r\n                </Button>\r\n              </Row>\r\n            </Col>\r\n\r\n            <Modal\r\n              id=\"profile-modal\"\r\n              show={profileIsOpen}\r\n              onHide={this.closeProfileModal.bind(this)}\r\n              // backdrop=\"static\"\r\n              animation={false}\r\n              className=\"modal\"\r\n              scrollable={false}\r\n              // size=\"sm\"\r\n            >\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>\r\n                  {this.state.selectedUserProfile?.name}\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n\r\n              <Modal.Body>\r\n                {this.state.selectedUserProfile && (\r\n                  <Profile\r\n                    user={this.state.selectedUserProfile}\r\n                    onClose={this.closeProfileModal.bind(this)}\r\n                  />\r\n                )}\r\n              </Modal.Body>\r\n            </Modal>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileHistory;\r\n","import React from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Spinner,\r\n  Modal,\r\n  Collapse,\r\n  Col,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport UserProfile from \"../common/UserProfile.interface\";\r\nimport UserAuth from \"../common/UserAuth.interface\";\r\nimport LetterHistory from \"../common/LetterHistory.interface\";\r\nimport RequestBody from \"../common/RequestBody.interface\";\r\nimport ResponseBody from \"../common/ResponseBody.interface\";\r\nimport \"./WriterLetterDisplay.css\";\r\nimport LetterDetails from \"../common/LetterDetails.interface\";\r\n\r\nimport FileData from \"../common/FileData.interface\";\r\nimport CryptService from \"../services/CryptService\";\r\nimport CacheService from \"../services/CacheService\";\r\n\r\nimport FileUpload from \"../components/FileUpload/FileUpload\";\r\nimport FileView from \"../components/FileView/FileView\";\r\nimport Confirm from \"../components/Confirm/Confirm\";\r\nimport FileHistory from \"../components/FileHistory\";\r\nimport Profile from \"../components/Profile\";\r\n\r\ninterface WriterLetterDisplayProps {\r\n  user: UserAuth;\r\n  letter: LetterDetails;\r\n  numRecipients: Number;\r\n}\r\ninterface WriterLetterDisplayState {\r\n  history: LetterHistory[];\r\n  loadingHistory: boolean;\r\n  profileIsOpen: boolean;\r\n  historyIsOpen: boolean;\r\n  uploadIsOpen: boolean;\r\n  viewIsOpen: boolean;\r\n  confirmIsOpen: boolean;\r\n  collapseIsOpen: boolean;\r\n  selectedUserProfile?: UserProfile;\r\n  uploadedFile?: File;\r\n  fileData?: FileData;\r\n}\r\n\r\nclass WriterLetterDisplay extends React.Component<\r\n  WriterLetterDisplayProps,\r\n  WriterLetterDisplayState\r\n> {\r\n  private uploadModal = React.createRef<FileUpload>();\r\n  private viewModal = React.createRef<FileView>();\r\n  private userProfiles: Map<string, UserProfile>;\r\n  private cryptService: CryptService;\r\n  private cacheService: CacheService<string, string>;\r\n\r\n  constructor(props: WriterLetterDisplayProps) {\r\n    super(props);\r\n    this.state = {\r\n      history: [],\r\n      loadingHistory: false,\r\n      profileIsOpen: false,\r\n      historyIsOpen: false,\r\n      uploadIsOpen: false,\r\n      viewIsOpen: false,\r\n      confirmIsOpen: false,\r\n      collapseIsOpen: false,\r\n    };\r\n\r\n    this.userProfiles = new Map<string, UserProfile>();\r\n    this.cryptService = new CryptService();\r\n    this.cacheService = new CacheService(1);\r\n  }\r\n\r\n  openUploadModal() {\r\n    console.log(\"opening upload modal\");\r\n    this.setState({\r\n      uploadIsOpen: true,\r\n      collapseIsOpen: true,\r\n    });\r\n  }\r\n\r\n  onUploadSubmit() {\r\n    const fetchUrl = `/api/v1/letters/${this.props.letter.letterId}/content`;\r\n    if (this.state.uploadedFile !== undefined) {\r\n      this.uploadToServer(this.state.uploadedFile, fetchUrl);\r\n    }\r\n  }\r\n\r\n  closeUploadModal() {\r\n    console.log(\"closing upload modal\");\r\n    this.setState({\r\n      uploadIsOpen: false,\r\n      collapseIsOpen: this.state.historyIsOpen,\r\n    });\r\n  }\r\n\r\n  async uploadToServer(file: File, fetchUrl: string) {\r\n    console.log(\"uploading to server\");\r\n    console.log(file);\r\n\r\n    // encrypt file\r\n    let encryptedFile = await this.cryptService.encrypt(\r\n      file,\r\n      this.props.user.publicAddress\r\n    );\r\n    console.log(encryptedFile);\r\n\r\n    if (!encryptedFile) {\r\n      console.log(\"encryption failed\");\r\n      this.closeUploadModal();\r\n      return;\r\n    }\r\n\r\n    // cache encrypted file\r\n    this.cacheService.put(this.props.letter.letterId, encryptedFile);\r\n    console.log(\"put encryptedFile into memcache\");\r\n\r\n    // post encrypted file to server\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`, {\r\n      body: JSON.stringify({\r\n        auth: {\r\n          publicAddress: this.props.user.publicAddress,\r\n          jwtToken: this.props.user.jwtToken,\r\n        },\r\n        data: { contents: encryptedFile },\r\n      }),\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      method: \"POST\",\r\n    })\r\n      .then((response: any) => {\r\n        console.log(response.status);\r\n        if (response.status === 200) {\r\n          this.closeUploadModal();\r\n        } else {\r\n          this.uploadModal.current!.changeDisplayMessage(\r\n            \"Upload Failed. Try Again Later.\"\r\n          );\r\n        }\r\n      })\r\n      .catch((e: Error) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  async openViewModal() {\r\n    console.log(\"opening view modal\");\r\n    this.setState({ viewIsOpen: true });\r\n    const letterId = this.props.letter.letterId;\r\n    const fetchUrl = `/api/v1/letters/${letterId}/contents`;\r\n    console.log(letterId);\r\n    let encryptedLetter = this.cacheService.get(letterId);\r\n    if (encryptedLetter === null) {\r\n      this.retrieveLetterContentsFromServer(fetchUrl);\r\n    } else {\r\n      try {\r\n        let fileData = await this.cryptService.decrypt(\r\n          encryptedLetter,\r\n          this.props.user.publicAddress\r\n        );\r\n\r\n        console.log(fileData.letterType);\r\n        this.setState({\r\n          fileData: fileData,\r\n        });\r\n      } catch (error) {\r\n        console.log(\"error with decryption\");\r\n      }\r\n    }\r\n  }\r\n\r\n  closeViewModal() {\r\n    console.log(\"closing view modal\");\r\n    this.setState({ viewIsOpen: false, fileData: undefined });\r\n  }\r\n\r\n  retrieveLetterContentsFromServer(fetchUrl: string) {\r\n    console.log(\"retrieving from server\");\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n    const letterId = this.props.letter.letterId;\r\n    // get letter from server\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`, init)\r\n      .then((response) => {\r\n        console.log(\"logging response\");\r\n        console.log(response);\r\n        return response.json();\r\n      })\r\n      .then((encryptedLetter) => {\r\n        // decrypt letter\r\n        this.cryptService\r\n          .decrypt(encryptedLetter, this.props.user.publicAddress)\r\n          .then((fileData) => {\r\n            if (fileData) {\r\n              this.setState({\r\n                viewIsOpen: true,\r\n                fileData: fileData,\r\n              });\r\n            }\r\n          });\r\n      })\r\n      .catch((e: Error) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  async openMessageModal(file: File) {\r\n    this.setState({ uploadedFile: file });\r\n    this.openConfirmModal();\r\n  }\r\n\r\n  async closeMessageModal() {}\r\n\r\n  async closeProfileModal() {\r\n    console.log(\"closing profile modal\");\r\n    this.setState({ profileIsOpen: false, selectedUserProfile: undefined });\r\n  }\r\n\r\n  async openProfileModal(publicAddress: string) {\r\n    console.log(\"opening profile modal\");\r\n    const userProfile = this.userProfiles.get(publicAddress);\r\n    console.log(userProfile);\r\n    if (userProfile === undefined) {\r\n      this.setState({ profileIsOpen: true });\r\n      const fetchUrl = `/api/v1/users/${publicAddress}/profile`;\r\n      this.retrieveProfileFromServer(fetchUrl);\r\n    } else {\r\n      this.setState({ selectedUserProfile: userProfile, profileIsOpen: true });\r\n    }\r\n  }\r\n\r\n  async retrieveProfileFromServer(fetchUrl: string) {\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n\r\n    try {\r\n      let response = await fetch(\r\n        `${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`,\r\n        init\r\n      );\r\n\r\n      if (response.status === 400) {\r\n        console.log(response.status);\r\n        // this.setState({\r\n        //   profileIsOpen: false,\r\n        // });\r\n      } else {\r\n        let body = await response.json();\r\n        const data: UserProfile[] = body.data;\r\n        console.log(response);\r\n        console.log(data);\r\n        if (data && data.length !== 0) {\r\n          this.userProfiles.set(data[0].publicAddress, data[0]);\r\n          this.setState({\r\n            selectedUserProfile: data[0],\r\n          });\r\n        } else {\r\n          // this.setState({\r\n          //   profileIsOpen: false,\r\n          // });\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      // this.setState({\r\n      //   profileIsOpen: false,\r\n      // });\r\n    }\r\n  }\r\n\r\n  async closeHistoryModal() {\r\n    console.log(\"closing history modal\");\r\n    this.setState({\r\n      historyIsOpen: false,\r\n      loadingHistory: false,\r\n      collapseIsOpen: this.state.viewIsOpen,\r\n    });\r\n  }\r\n\r\n  async openHistoryModal() {\r\n    console.log(\"opening history modal\");\r\n\r\n    if (this.state.history.length === 0) {\r\n      this.setState({\r\n        loadingHistory: true,\r\n        historyIsOpen: true,\r\n        collapseIsOpen: true,\r\n      });\r\n      const letterId = this.props.letter.letterId;\r\n      const fetchUrl = `/api/v1/letters/${letterId}/history`;\r\n      this.retrieveHistoryFromServer(fetchUrl);\r\n    } else {\r\n      this.setState({\r\n        historyIsOpen: true,\r\n        collapseIsOpen: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  async retrieveHistoryFromServer(fetchUrl: string) {\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`,\r\n        init\r\n      );\r\n      if (response.status === 400) {\r\n        console.log(response.status);\r\n        this.setState({\r\n          // historyIsOpen: false,\r\n          loadingHistory: false,\r\n          // collapseIsOpen: this.state.selectIsOpen,\r\n        });\r\n      } else {\r\n        const body = await response.json();\r\n\r\n        const data: LetterHistory[] = body.data;\r\n        console.log(response);\r\n        console.log(data);\r\n        if (data) {\r\n          this.setState({\r\n            history: data,\r\n            loadingHistory: false,\r\n          });\r\n        } else {\r\n          console.log(\"fetch for letterHistory failed\");\r\n          this.setState({\r\n            // historyIsOpen: false,\r\n            loadingHistory: false,\r\n            // collapseIsOpen: this.state.selectIsOpen,\r\n          });\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      this.setState({\r\n        // historyIsOpen: false,\r\n        loadingHistory: false,\r\n        // collapseIsOpen: this.state.selectIsOpen,\r\n      });\r\n    }\r\n  }\r\n\r\n  async openConfirmModal() {\r\n    console.log(\"open confirm modal\");\r\n    this.setState({ confirmIsOpen: true });\r\n  }\r\n\r\n  async closeConfirmModal() {\r\n    console.log(\"close confirm modal\");\r\n    this.setState({ confirmIsOpen: false });\r\n  }\r\n\r\n  render() {\r\n    const { user, letter, numRecipients } = this.props;\r\n    const {\r\n      history,\r\n      loadingHistory,\r\n      profileIsOpen,\r\n      historyIsOpen,\r\n      uploadIsOpen,\r\n      viewIsOpen,\r\n      confirmIsOpen,\r\n      collapseIsOpen,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Card className=\"full-width opacity-0\">\r\n          <Card.Header\r\n            className=\"d-flex justify-content-between button-blur letter-entry\"\r\n            onClick={() => this.setState({ collapseIsOpen: !collapseIsOpen })}\r\n          >\r\n            <div className=\"flex-fill\">\r\n              <span className=\"mr-3\">For:</span>\r\n              <Button\r\n                variant=\"outline-light\"\r\n                onClick={(e: any) => {\r\n                  e.stopPropagation();\r\n                  this.openProfileModal(letter.letterRequestor.publicAddress);\r\n                }}\r\n              >\r\n                {letter.letterRequestor?.name}\r\n              </Button>\r\n            </div>\r\n            <Button\r\n              // TODO: add Tooltip\r\n              variant=\"outline-light\"\r\n              className=\"flex-shrink-1 float-right ml-3\"\r\n              onClick={(e: any) => {\r\n                e.stopPropagation();\r\n                if (uploadIsOpen) {\r\n                  this.closeUploadModal();\r\n                } else {\r\n                  this.openUploadModal();\r\n                }\r\n              }}\r\n            >\r\n              Upload\r\n            </Button>\r\n            <Button\r\n              // TODO: add Tooltip\r\n              variant=\"outline-light\"\r\n              className=\"flex-shrink-1 float-right ml-3\"\r\n              onClick={(e: any) => {\r\n                e.stopPropagation();\r\n                if (viewIsOpen) {\r\n                  this.closeViewModal();\r\n                } else {\r\n                  this.openViewModal();\r\n                }\r\n              }}\r\n            >\r\n              View\r\n            </Button>\r\n            <Button\r\n              disabled={numRecipients === 0}\r\n              variant=\"outline-light\"\r\n              className=\"flex-shrink-1 float-right ml-3\"\r\n              onClick={(e: any) => {\r\n                e.stopPropagation();\r\n                if (historyIsOpen) {\r\n                  this.closeHistoryModal();\r\n                } else {\r\n                  this.openHistoryModal();\r\n                }\r\n              }}\r\n            >\r\n              History\r\n            </Button>\r\n            <Button\r\n              variant=\"outline-light\"\r\n              className=\"flex-shrink-1 float-right ml-3\"\r\n              onClick={(e: any) => {\r\n                e.stopPropagation();\r\n                this.setState({ collapseIsOpen: !collapseIsOpen });\r\n              }}\r\n              aria-controls=\"example-collapse-text\"\r\n              aria-expanded={collapseIsOpen}\r\n            >\r\n              *\r\n            </Button>\r\n          </Card.Header>\r\n        </Card>\r\n        <Collapse in={collapseIsOpen}>\r\n          <div className=\"collapse-body-select\">\r\n            {uploadIsOpen && (\r\n              <div>\r\n                <FileUpload\r\n                  ref={this.uploadModal}\r\n                  user={this.props.user}\r\n                  restrictPdf={true}\r\n                  onUpload={this.openMessageModal.bind(this)}\r\n                  onClose={this.closeUploadModal.bind(this)}\r\n                ></FileUpload>\r\n              </div>\r\n            )}\r\n            {loadingHistory && (\r\n              <div className=\"d-flex justify-content-center\">\r\n                <Spinner\r\n                  className=\"mb-3\"\r\n                  animation=\"border\"\r\n                  variant=\"secondary\"\r\n                />\r\n              </div>\r\n            )}\r\n            {!loadingHistory && historyIsOpen && (\r\n              <div className=\"\">\r\n                <FileHistory\r\n                  user={user}\r\n                  history={history}\r\n                  onClose={this.closeHistoryModal.bind(this)}\r\n                ></FileHistory>\r\n              </div>\r\n            )}\r\n            {(loadingHistory || historyIsOpen) && <div className=\"mb-5\"></div>}\r\n            {!uploadIsOpen && !historyIsOpen && (\r\n              <div className=\"display-text d-flex text-white-50\">\r\n                <div className=\"flex-fill\">\r\n                  Requested: {letter.requestedAt?.toString()}\r\n                </div>\r\n                {letter.uploadedAt && (\r\n                  <div className=\" flex-shrink-1 float-right\">\r\n                    Uploaded: {letter.uploadedAt?.toString()}\r\n                  </div>\r\n                )}\r\n                {!letter.uploadedAt && (\r\n                  <div className=\" flex-shrink-1 float-right\">Not Uploaded</div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Collapse>\r\n\r\n        <Modal\r\n          id=\"profile-modal\"\r\n          show={profileIsOpen}\r\n          onHide={this.closeProfileModal.bind(this)}\r\n          // backdrop=\"static\"\r\n          animation={false}\r\n          className=\"modal\"\r\n          scrollable={false}\r\n          // size=\"sm\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{this.state.selectedUserProfile?.name}</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Profile\r\n              user={this.state.selectedUserProfile}\r\n              onClose={this.closeProfileModal.bind(this)}\r\n            />\r\n          </Modal.Body>\r\n        </Modal>\r\n\r\n        <Modal\r\n          id=\"confirm-modal\"\r\n          show={confirmIsOpen}\r\n          onHide={this.closeConfirmModal.bind(this)}\r\n          // backdrop=\"static\"\r\n          animation={false}\r\n          className=\"modal\"\r\n          scrollable={false}\r\n          // size=\"sm\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Please Confirm</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Confirm\r\n              user={this.props.user}\r\n              onConfirm={this.onUploadSubmit.bind(this)}\r\n              onClose={this.closeConfirmModal.bind(this)}\r\n            />\r\n          </Modal.Body>\r\n        </Modal>\r\n\r\n        <Modal\r\n          id=\"view-modal\"\r\n          show={viewIsOpen}\r\n          onHide={this.closeViewModal.bind(this)}\r\n          backdrop=\"static\"\r\n          animation={false}\r\n          className=\"modal view-modal\"\r\n          scrollable={false}\r\n          size=\"xl\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>For: {letter.letterRequestor?.name}</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <FileView\r\n              fileData={this.state.fileData}\r\n              ref={this.viewModal}\r\n              user={this.props.user}\r\n              onClose={this.closeViewModal.bind(this)}\r\n            ></FileView>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WriterLetterDisplay;\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nimport UserAuth from \"../common/UserAuth.interface\";\r\nimport LetterDetails from \"../common/LetterDetails.interface\";\r\nimport RequestBody from \"../common/RequestBody.interface\";\r\nimport ResponseBody from \"../common/ResponseBody.interface\";\r\n\r\nimport WriterLetterDisplay from \"../WriterLetterDisplay/WriterLetterDisplay\";\r\n\r\nimport \"./Writer.css\";\r\n\r\ninterface WriterProps {\r\n  user: UserAuth;\r\n}\r\n\r\ninterface WriterState {\r\n  letters: LetterDetails[];\r\n  numRecipients: Number[];\r\n  loadingLetters: boolean;\r\n}\r\n\r\nclass Writer extends React.Component<WriterProps, WriterState> {\r\n  constructor(props: WriterProps) {\r\n    super(props);\r\n    this.state = {\r\n      letters: [],\r\n      numRecipients: [],\r\n      loadingLetters: true,\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    // api call to get letters\r\n    const letterFetchUrl = `/api/v1/letters/written`;\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n\r\n    // get letters from server\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL}${letterFetchUrl}`, init)\r\n      .then((response) => {\r\n        response\r\n          .json()\r\n          .then((body: ResponseBody) => {\r\n            const data: { letters: LetterDetails[]; numRecipients: Number[] } =\r\n              body.data;\r\n\r\n            console.log(response);\r\n            if (data) {\r\n              this.setState({\r\n                letters: data.letters,\r\n                numRecipients: data.numRecipients,\r\n                loadingLetters: false,\r\n              });\r\n            } else {\r\n              console.log(\"problem with response data for writer\");\r\n            }\r\n          })\r\n          .catch((e: Error) => {\r\n            console.log(e);\r\n          });\r\n      })\r\n      .catch((e: Error) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n    const {\r\n      letters,\r\n      numRecipients,\r\n      loadingLetters,\r\n    } = this.state;\r\n\r\n    const lettersList = letters.map((l, k) => (\r\n      <WriterLetterDisplay\r\n        user={user}\r\n        letter={l}\r\n        numRecipients={numRecipients[k]}\r\n      />\r\n    ));\r\n\r\n    return (\r\n      <>\r\n        {!loadingLetters && (\r\n          <div id=\"writer\" className=\"writer\">\r\n            <div className=\"writer-header mb-3\">\r\n              <h3> Letters </h3>\r\n            </div>\r\n\r\n            <div className=\"writer-letters\">\r\n              <div>{lettersList}</div>\r\n            </div>\r\n\r\n            <div className=\"writer-footer\">\r\n              <span> Product of Team Gas</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {loadingLetters && (\r\n          <div className=\"d-flex justify-content-center absolute-center\">\r\n            <Spinner className=\"\" animation=\"border\" variant=\"secondary\" />\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Writer;\r\n","import Select from \"./Select\";\r\nexport default Select;","import React from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  InputGroup,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n  Modal,\r\n  Col,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport { Typeahead } from \"react-bootstrap-typeahead\";\r\n// import LetterDetails from \"../../common/LetterDetails.interface\";\r\n// import FileData from \"../../common/FileData.interface\";\r\nimport UserProfile from \"../../common/UserProfile.interface\";\r\nimport Profile from \"../Profile\";\r\nimport RequestBody from \"../../common/RequestBody.interface\";\r\nimport ResponseBody from \"../../common/ResponseBody.interface\";\r\nimport User from \"../../common/User.interface\";\r\nimport \"./Select.css\";\r\nimport UserAuth from \"../../common/UserAuth.interface\";\r\n\r\ninterface SelectProps {\r\n  user: UserAuth;\r\n  users: User[];\r\n  previouslySelectedRecipients: User[];\r\n  header: string;\r\n  onSubmit: (selectedRecipients: User[]) => void;\r\n  onClose: () => void;\r\n}\r\ninterface SelectState {\r\n  selectedRecipients: User[];\r\n  profileIsOpen: boolean;\r\n  selectedUserProfile?: UserProfile;\r\n}\r\n\r\nclass Select extends React.Component<SelectProps, SelectState> {\r\n  private userProfiles: Map<string, UserProfile>;\r\n  constructor(props: SelectProps) {\r\n    super(props);\r\n    this.state = {\r\n      selectedRecipients: this.props.previouslySelectedRecipients,\r\n      profileIsOpen: false,\r\n    };\r\n\r\n    this.userProfiles = new Map<string, UserProfile>();\r\n  }\r\n\r\n  async closeProfileModal() {\r\n    console.log(\"closing profile modal\");\r\n    this.setState({ profileIsOpen: false });\r\n  }\r\n\r\n  async openProfileModal(publicAddress: string) {\r\n    console.log(\"opening profile modal\");\r\n    const userProfile = this.userProfiles.get(publicAddress);\r\n    console.log(userProfile);\r\n    if (userProfile === undefined) {\r\n      const fetchUrl = `/api/v1/users/${publicAddress}/profile`;\r\n      this.retrieveProfileFromServer(fetchUrl);\r\n    } else {\r\n      this.setState({ selectedUserProfile: userProfile, profileIsOpen: true });\r\n    }\r\n  }\r\n\r\n  async retrieveProfileFromServer(fetchUrl: string) {\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n\r\n    // get user profile from server\r\n    try {\r\n      let response = await fetch(\r\n        `${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`,\r\n        init\r\n      );\r\n      let body = await response.json();\r\n\r\n      const data: UserProfile[] = body.data;\r\n      console.log(response);\r\n      console.log(data);\r\n      if (data && data.length !== 0) {\r\n        this.userProfiles.set(data[0].publicAddress, data[0]);\r\n        this.setState({\r\n          profileIsOpen: true,\r\n          selectedUserProfile: data[0],\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  onSelectSubmit() {\r\n    console.log(\"select submit\");\r\n    this.props.onSubmit(this.state.selectedRecipients);\r\n  }\r\n\r\n  render() {\r\n    const { users, header } = this.props;\r\n    const { profileIsOpen, selectedRecipients } = this.state;\r\n\r\n    const selectRecipients = (\r\n      <Fragment>\r\n        <InputGroup className=\"border-radius mb-0\">\r\n          <div className=\"multiple-typeahead recipient-typeahead\">\r\n            <Typeahead\r\n              id=\"select-recipients-typeahead\"\r\n              // minLength={2}\r\n              multiple\r\n              labelKey=\"name\"\r\n              filterBy={[\"name\", \"publicAddress\"]}\r\n              options={users}\r\n              // placeholder=\"Select Recipients\" // can't change color to white\r\n              paginate={true}\r\n              selected={selectedRecipients}\r\n              onChange={(selected) => {\r\n                console.log(selected);\r\n                this.setState({\r\n                  selectedRecipients: selected,\r\n                });\r\n              }}\r\n              renderMenuItemChildren={\r\n                (option) =>\r\n                  `${option.name} (${option.publicAddress.slice(0, 6)} . . . )` // TODO: add padding with service\r\n              }\r\n            />\r\n          </div>\r\n        </InputGroup>\r\n      </Fragment>\r\n    );\r\n\r\n    let recipientsList = [];\r\n    for (let i = 0; i < selectedRecipients.length; i += 3) {\r\n      recipientsList.push(\r\n        <Row>\r\n          <Col>\r\n            <div className=\"d-flex justify-content-between recipient-entry\">\r\n              <div\r\n                className=\"flex-fill body-text\"\r\n                onClick={() =>\r\n                  this.openProfileModal(selectedRecipients[i].publicAddress)\r\n                }\r\n              >\r\n                {selectedRecipients[i].name}\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          {i + 1 < selectedRecipients.length && (\r\n            <Col>\r\n              <div className=\"d-flex justify-content-between recipient-entry\">\r\n                <div\r\n                  className=\"flex-fill body-text\"\r\n                  onClick={() =>\r\n                    this.openProfileModal(\r\n                      selectedRecipients[i + 1].publicAddress\r\n                    )\r\n                  }\r\n                >\r\n                  {selectedRecipients[i + 1].name}\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          )}\r\n\r\n          {i + 1 >= selectedRecipients.length && (\r\n            <Col>\r\n              <Card.Header className=\"d-flex justify-content-between recipient-placeholder\"></Card.Header>\r\n            </Col>\r\n          )}\r\n\r\n          {i + 2 < selectedRecipients.length && (\r\n            <Col>\r\n              <div className=\"d-flex justify-content-between recipient-entry\">\r\n                <div\r\n                  className=\"flex-fill body-text\"\r\n                  onClick={() =>\r\n                    this.openProfileModal(\r\n                      selectedRecipients[i + 2].publicAddress\r\n                    )\r\n                  }\r\n                >\r\n                  {selectedRecipients[i + 2].name}\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          )}\r\n\r\n          {i + 2 >= selectedRecipients.length && (\r\n            <Col>\r\n              <Card.Header className=\"d-flex justify-content-between recipient-placeholder\"></Card.Header>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <h5>{header}</h5>\r\n        </Row>\r\n        <div className=\"mb-3\">{selectRecipients}</div>\r\n        {selectedRecipients.length !== 0 && (\r\n          <Col className=\"recipient-display mb-3\">{recipientsList}</Col>\r\n        )}\r\n\r\n        <div className=\"d-flex border-radius button-blur mb-2\">\r\n          <div className=\"flex-fill\"></div>\r\n          {selectedRecipients.length !== 0 && (\r\n            <Button\r\n              variant=\"outline-light\"\r\n              className=\"flex-shrink-1 float-right\"\r\n              onClick={() => {\r\n                this.props.onSubmit(selectedRecipients);\r\n              }}\r\n            >\r\n              Select\r\n            </Button>\r\n          )}\r\n          {selectedRecipients.length === 0 && (\r\n            <OverlayTrigger\r\n              overlay={\r\n                <Tooltip id=\"tooltip-disabled\" placement=\"right\">\r\n                  No Recipients Selected\r\n                </Tooltip>\r\n              }\r\n            >\r\n              <span className=\"d-inline-block\">\r\n                <Button\r\n                  variant=\"outline-light\"\r\n                  className=\"flex-shrink-1 float-right\"\r\n                  disabled\r\n                  style={{ pointerEvents: \"none\" }}\r\n                  onClick={() => {\r\n                    this.props.onSubmit(selectedRecipients);\r\n                  }}\r\n                >\r\n                  Select\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger>\r\n          )}\r\n          <Button\r\n            variant=\"outline-light\"\r\n            className=\"flex-shrink-1 ml-3\"\r\n            onClick={() => {\r\n              this.setState({\r\n                selectedRecipients: this.props.previouslySelectedRecipients,\r\n              });\r\n            }}\r\n          >\r\n            Reset\r\n          </Button>\r\n\r\n          <Button\r\n            variant=\"outline-light\"\r\n            className=\"flex-shrink-1 float-right ml-3\"\r\n            onClick={() => {\r\n              this.props.onClose();\r\n            }}\r\n          >\r\n            Close\r\n          </Button>\r\n        </div>\r\n\r\n        <Modal\r\n          id=\"profile-modal\"\r\n          show={profileIsOpen}\r\n          onHide={this.closeProfileModal.bind(this)}\r\n          // backdrop=\"static\"\r\n          animation={false}\r\n          className=\"modal\"\r\n          scrollable={false}\r\n          // size=\"sm\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{this.state.selectedUserProfile?.name}</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            {this.state.selectedUserProfile && (\r\n              <Profile\r\n                user={this.state.selectedUserProfile}\r\n                onClose={this.closeProfileModal.bind(this)}\r\n              />\r\n            )}\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Select;\r\n","import Confirm from \"./Confirm\";\r\nexport default Confirm;","import React from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Spinner,\r\n  Modal,\r\n  Collapse,\r\n  Col,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport { Typeahead } from \"react-bootstrap-typeahead\";\r\nimport UserProfile from \"../common/UserProfile.interface\";\r\nimport UserAuth from \"../common/UserAuth.interface\";\r\nimport LetterHistory from \"../common/LetterHistory.interface\";\r\nimport RequestBody from \"../common/RequestBody.interface\";\r\nimport ResponseBody from \"../common/ResponseBody.interface\";\r\nimport User from \"../common/User.interface\";\r\nimport \"./RequestorLetterDisplay.css\";\r\nimport LetterDetails from \"../common/LetterDetails.interface\";\r\n\r\nimport Confirm from \"../components/Confirm\";\r\nimport FileView from \"../components/FileView\";\r\nimport FileHistory from \"../components/FileHistory\";\r\nimport Profile from \"../components/Profile\";\r\nimport Select from \"../components/Select\";\r\n\r\ninterface RequestorLetterDisplayProps {\r\n  user: UserAuth;\r\n  letter: LetterDetails;\r\n  numRecipients: Number;\r\n  users: User[];\r\n}\r\ninterface RequestorLetterDisplayState {\r\n  history: LetterHistory[];\r\n  loadingSelect: boolean;\r\n  loadingHistory: boolean;\r\n  selectIsOpen: boolean;\r\n  profileIsOpen: boolean;\r\n  historyIsOpen: boolean;\r\n  uploadIsOpen: boolean;\r\n  confirmIsOpen: boolean;\r\n  collapseIsOpen: boolean;\r\n  previouslySelectedRecipients: User[];\r\n  selectedRecipients: User[];\r\n  selectedPublicAddress?: string;\r\n  selectedUserProfile?: UserProfile;\r\n}\r\n\r\nclass RequestorLetterDisplay extends React.Component<\r\n  RequestorLetterDisplayProps,\r\n  RequestorLetterDisplayState\r\n> {\r\n  private userProfiles: Map<string, UserProfile>;\r\n\r\n  constructor(props: RequestorLetterDisplayProps) {\r\n    super(props);\r\n    this.state = {\r\n      history: [],\r\n      loadingHistory: false,\r\n      loadingSelect: false,\r\n      selectIsOpen: false,\r\n      profileIsOpen: false,\r\n      historyIsOpen: false,\r\n      uploadIsOpen: false,\r\n      confirmIsOpen: false,\r\n      collapseIsOpen: false,\r\n      previouslySelectedRecipients: [],\r\n      selectedRecipients: [],\r\n    };\r\n\r\n    this.userProfiles = new Map<string, UserProfile>();\r\n  }\r\n\r\n  async onSelectSubmit() {\r\n    console.log(\"on select submit\");\r\n    // this.setState({ confirmIsOpen: false });\r\n    const fetchUrl = `/api/v1/letters/${this.props.letter.letterId}/updateRecipients`;\r\n    this.sendUpdatedLetterRecipientsToServer(fetchUrl);\r\n  }\r\n\r\n  async sendUpdatedLetterRecipientsToServer(fetchUrl: string) {\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: this.state.selectedRecipients,\r\n      }),\r\n    };\r\n\r\n    try {\r\n      let response = await fetch(\r\n        `${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`,\r\n        init\r\n      );\r\n      if (response.status === 400) {\r\n        console.log(response.status);\r\n      } else {\r\n        let body = await response.json();\r\n\r\n        const data: User[] = body.data;\r\n        console.log(response);\r\n        console.log(data);\r\n        if (data && data.length !== 0) {\r\n          this.setState({\r\n            selectIsOpen: false,\r\n            confirmIsOpen: false,\r\n            collapseIsOpen: this.state.historyIsOpen,\r\n            previouslySelectedRecipients: data,\r\n          });\r\n        } else {\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  async closeSelectModal() {\r\n    console.log(\"closing select modal\");\r\n    this.setState({\r\n      selectIsOpen: false,\r\n      loadingSelect: false,\r\n      collapseIsOpen: this.state.historyIsOpen,\r\n    });\r\n  }\r\n\r\n  async openSelectModal() {\r\n    console.log(\"on send click\");\r\n    // fetch backend to get recipients list (who the letter has not been sent to)\r\n    const fetchUrl = `/api/v1/letters/${this.props.letter.letterId}/unsentRecipients`;\r\n\r\n    if (this.state.previouslySelectedRecipients.length === 0) {\r\n      this.setState({\r\n        loadingSelect: true,\r\n        collapseIsOpen: true,\r\n        selectIsOpen: true,\r\n      });\r\n      this.retrieveRecipientsFromServer(fetchUrl);\r\n    } else {\r\n      this.setState({\r\n        selectIsOpen: true,\r\n        collapseIsOpen: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  async retrieveRecipientsFromServer(fetchUrl: string) {\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n\r\n    try {\r\n      let response = await fetch(\r\n        `${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`,\r\n        init\r\n      );\r\n      if (response.status === 400) {\r\n        console.log(response.status);\r\n        this.setState({\r\n          loadingSelect: false,\r\n          // selectIsOpen: false,\r\n          // collapseIsOpen: this.state.historyIsOpen,\r\n        });\r\n      } else {\r\n        let body = await response.json();\r\n\r\n        const data: User[] = body.data;\r\n        console.log(response);\r\n        console.log(data);\r\n        this.setState({\r\n          previouslySelectedRecipients: data,\r\n          loadingSelect: false,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      this.setState({\r\n        loadingSelect: false,\r\n        // selectIsOpen: false,\r\n        // collapseIsOpen: this.state.historyIsOpen,\r\n      });\r\n    }\r\n  }\r\n\r\n  async openMessageModal(selectedRecipients: User[]) {\r\n    this.setState({ selectedRecipients: selectedRecipients });\r\n    this.openConfirmModal();\r\n  }\r\n\r\n  async closeMessageModal() {}\r\n\r\n  async closeProfileModal() {\r\n    console.log(\"closing profile modal\");\r\n    this.setState({ profileIsOpen: false, selectedUserProfile: undefined });\r\n  }\r\n\r\n  async openProfileModal(publicAddress: string) {\r\n    console.log(\"opening profile modal\");\r\n    const userProfile = this.userProfiles.get(publicAddress);\r\n    console.log(userProfile);\r\n    if (userProfile === undefined) {\r\n      this.setState({ profileIsOpen: true });\r\n      const fetchUrl = `/api/v1/users/${publicAddress}/profile`;\r\n      this.retrieveProfileFromServer(fetchUrl);\r\n    } else {\r\n      this.setState({ selectedUserProfile: userProfile, profileIsOpen: true });\r\n    }\r\n  }\r\n\r\n  async retrieveProfileFromServer(fetchUrl: string) {\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n\r\n    try {\r\n      let response = await fetch(\r\n        `${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`,\r\n        init\r\n      );\r\n\r\n      if (response.status === 400) {\r\n        console.log(response.status);\r\n        // this.setState({\r\n        //   profileIsOpen: false,\r\n        // });\r\n      } else {\r\n        let body = await response.json();\r\n        const data: UserProfile[] = body.data;\r\n        console.log(response);\r\n        console.log(data);\r\n        if (data && data.length !== 0) {\r\n          this.userProfiles.set(data[0].publicAddress, data[0]);\r\n          this.setState({\r\n            selectedUserProfile: data[0],\r\n          });\r\n        } else {\r\n          // this.setState({\r\n          //   profileIsOpen: false,\r\n          // });\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      // this.setState({\r\n      //   profileIsOpen: false,\r\n      // });\r\n    }\r\n  }\r\n\r\n  async closeHistoryModal() {\r\n    console.log(\"closing history modal\");\r\n    this.setState({\r\n      historyIsOpen: false,\r\n      loadingHistory: false,\r\n      collapseIsOpen: this.state.selectIsOpen,\r\n    });\r\n  }\r\n\r\n  async openHistoryModal() {\r\n    console.log(\"opening history modal\");\r\n\r\n    if (this.state.history.length === 0) {\r\n      this.setState({\r\n        loadingHistory: true,\r\n        historyIsOpen: true,\r\n        collapseIsOpen: true,\r\n      });\r\n      const letterId = this.props.letter.letterId;\r\n      const fetchUrl = `/api/v1/letters/${letterId}/history`;\r\n      this.retrieveHistoryFromServer(fetchUrl);\r\n    } else {\r\n      this.setState({\r\n        historyIsOpen: true,\r\n        collapseIsOpen: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  async retrieveHistoryFromServer(fetchUrl: string) {\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`,\r\n        init\r\n      );\r\n      if (response.status === 400) {\r\n        console.log(response.status);\r\n        this.setState({\r\n          // historyIsOpen: false,\r\n          loadingHistory: false,\r\n          // collapseIsOpen: this.state.selectIsOpen,\r\n        });\r\n      } else {\r\n        const body = await response.json();\r\n\r\n        const data: LetterHistory[] = body.data;\r\n        console.log(response);\r\n        console.log(data);\r\n        if (data) {\r\n          this.setState({\r\n            history: data,\r\n            loadingHistory: false,\r\n          });\r\n        } else {\r\n          console.log(\"fetch for letterHistory failed\");\r\n          this.setState({\r\n            // historyIsOpen: false,\r\n            loadingHistory: false,\r\n            // collapseIsOpen: this.state.selectIsOpen,\r\n          });\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      this.setState({\r\n        // historyIsOpen: false,\r\n        loadingHistory: false,\r\n        // collapseIsOpen: this.state.selectIsOpen,\r\n      });\r\n    }\r\n  }\r\n\r\n  async openConfirmModal() {\r\n    console.log(\"open confirm modal\");\r\n    this.setState({ confirmIsOpen: true });\r\n  }\r\n\r\n  async closeConfirmModal() {\r\n    console.log(\"close confirm modal\");\r\n    this.setState({ confirmIsOpen: false });\r\n  }\r\n\r\n  render() {\r\n    const { user, letter, numRecipients, users } = this.props;\r\n    const {\r\n      history,\r\n      loadingSelect,\r\n      loadingHistory,\r\n      selectIsOpen,\r\n      profileIsOpen,\r\n      historyIsOpen,\r\n      uploadIsOpen,\r\n      confirmIsOpen,\r\n      collapseIsOpen,\r\n      previouslySelectedRecipients,\r\n      selectedRecipients,\r\n      selectedPublicAddress,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Card className=\"full-width opacity-0\">\r\n          <Card.Header\r\n            className=\"d-flex justify-content-between button-blur letter-entry\"\r\n            onClick={() => this.setState({ collapseIsOpen: !collapseIsOpen })}\r\n          >\r\n            <div className=\"flex-fill\">\r\n              <span className=\"mr-3\">From:</span>\r\n              <Button\r\n                variant=\"outline-light\"\r\n                onClick={(e: any) => {\r\n                  e.stopPropagation();\r\n                  this.openProfileModal(letter.letterWriter.publicAddress);\r\n                }}\r\n              >\r\n                {letter.letterWriter?.name}\r\n              </Button>\r\n            </div>\r\n            <Button\r\n              // TODO: add Tooltip\r\n              variant=\"outline-light\"\r\n              className=\"flex-shrink-1 float-right ml-3\"\r\n              onClick={(e: any) => {\r\n                e.stopPropagation();\r\n                if (selectIsOpen) {\r\n                  this.closeSelectModal();\r\n                } else {\r\n                  this.openSelectModal();\r\n                }\r\n              }}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              disabled={numRecipients === 0}\r\n              variant=\"outline-light\"\r\n              className=\"flex-shrink-1 float-right ml-3\"\r\n              onClick={(e: any) => {\r\n                e.stopPropagation();\r\n                if (historyIsOpen) {\r\n                  this.closeHistoryModal();\r\n                } else {\r\n                  this.openHistoryModal();\r\n                }\r\n              }}\r\n            >\r\n              History\r\n            </Button>\r\n            <Button\r\n              variant=\"outline-light\"\r\n              className=\"flex-shrink-1 float-right ml-3\"\r\n              onClick={(e: any) => {\r\n                e.stopPropagation();\r\n                this.setState({ collapseIsOpen: !collapseIsOpen });\r\n              }}\r\n              aria-controls=\"example-collapse-text\"\r\n              aria-expanded={collapseIsOpen}\r\n            >\r\n              *\r\n            </Button>\r\n          </Card.Header>\r\n        </Card>\r\n        <Collapse in={collapseIsOpen}>\r\n          <div className=\"collapse-body-select\">\r\n            {loadingSelect && (\r\n              <div className=\"d-flex justify-content-center\">\r\n                <Spinner\r\n                  className=\"mb-3\"\r\n                  animation=\"border\"\r\n                  variant=\"secondary\"\r\n                />\r\n              </div>\r\n            )}\r\n            {!loadingSelect && selectIsOpen && (\r\n              <div>\r\n                <Select\r\n                  user={user}\r\n                  previouslySelectedRecipients={\r\n                    this.state.previouslySelectedRecipients\r\n                  }\r\n                  header=\"Edit Recipients\"\r\n                  onClose={this.closeSelectModal.bind(this)}\r\n                  onSubmit={this.openMessageModal.bind(this)}\r\n                  users={users.filter(\r\n                    (user: User) =>\r\n                      user.publicAddress !== letter.letterWriter.publicAddress\r\n                  )}\r\n                ></Select>\r\n              </div>\r\n            )}\r\n            {loadingHistory && (\r\n              <div className=\"d-flex justify-content-center\">\r\n                <Spinner\r\n                  className=\"mb-3\"\r\n                  animation=\"border\"\r\n                  variant=\"secondary\"\r\n                />\r\n              </div>\r\n            )}\r\n            {!loadingHistory && historyIsOpen && (\r\n              <div className=\"\">\r\n                <FileHistory\r\n                  user={user}\r\n                  history={history}\r\n                  onClose={this.closeHistoryModal.bind(this)}\r\n                ></FileHistory>\r\n              </div>\r\n            )}\r\n            {(loadingHistory || historyIsOpen) && <div className=\"mb-5\"></div>}\r\n            {!selectIsOpen && !historyIsOpen && (\r\n              <div className=\"display-text d-flex text-white-50\">\r\n                <div className=\"flex-fill\">\r\n                  Requested: {letter.requestedAt?.toString()}\r\n                </div>\r\n                {letter.uploadedAt && (\r\n                  <div className=\" flex-shrink-1 float-right\">\r\n                    Uploaded: {letter.uploadedAt?.toString()}\r\n                  </div>\r\n                )}\r\n                {!letter.uploadedAt && (\r\n                  <div className=\" flex-shrink-1 float-right\">Not Uploaded</div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Collapse>\r\n\r\n        <Modal\r\n          id=\"profile-modal\"\r\n          show={profileIsOpen}\r\n          onHide={this.closeProfileModal.bind(this)}\r\n          // backdrop=\"static\"\r\n          animation={false}\r\n          className=\"modal\"\r\n          scrollable={false}\r\n          // size=\"sm\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{this.state.selectedUserProfile?.name}</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Profile\r\n              user={this.state.selectedUserProfile}\r\n              onClose={this.closeProfileModal.bind(this)}\r\n            />\r\n          </Modal.Body>\r\n        </Modal>\r\n\r\n        <Modal\r\n          id=\"confirm-modal\"\r\n          show={confirmIsOpen}\r\n          onHide={this.closeConfirmModal.bind(this)}\r\n          // backdrop=\"static\"\r\n          animation={false}\r\n          className=\"modal\"\r\n          scrollable={false}\r\n          // size=\"sm\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Please Confirm</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Confirm\r\n              user={this.props.user}\r\n              onConfirm={this.onSelectSubmit.bind(this)}\r\n              onClose={this.closeConfirmModal.bind(this)}\r\n            />\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RequestorLetterDisplay;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  InputGroup,\r\n  Card,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n  Spinner,\r\n  Row,\r\n  Col,\r\n  Container,\r\n} from \"react-bootstrap\";\r\nimport { Typeahead } from \"react-bootstrap-typeahead\";\r\nimport { Fragment } from \"react\";\r\n\r\nimport User from \"../common/User.interface\";\r\nimport UserAuth from \"../common/UserAuth.interface\";\r\nimport LetterDetails from \"../common/LetterDetails.interface\";\r\nimport ResponseBody from \"../common/ResponseBody.interface\";\r\nimport Select from \"../components/Select\";\r\nimport RequestorLetterDisplay from \"../RequestorLetterDisplay/RequestorLetterDisplay\";\r\nimport Confirm from \"../components/Confirm\";\r\nimport \"./Requestor.css\";\r\nimport CacheService from \"../services/CacheService\";\r\n\r\ninterface RequestorProps {\r\n  user: UserAuth;\r\n}\r\n\r\ninterface RequestorState {\r\n  users: User[];\r\n  letters: LetterDetails[];\r\n  numRecipients: Number[];\r\n  loadingLetters: boolean;\r\n  loadingSelect: boolean;\r\n  selectIsOpen: boolean;\r\n  messageIsOpen: boolean;\r\n  confirmIsOpen: boolean;\r\n  selectedWriter: User[];\r\n  selectedRecipients: User[];\r\n}\r\n\r\nclass Requestor extends React.Component<RequestorProps, RequestorState> {\r\n  private writerTypeahead = React.createRef<Typeahead<User>>();\r\n\r\n  constructor(props: RequestorProps) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      letters: [],\r\n      numRecipients: [],\r\n      loadingLetters: true,\r\n      loadingSelect: false,\r\n      selectIsOpen: false,\r\n      messageIsOpen: false,\r\n      confirmIsOpen: false,\r\n      selectedWriter: [],\r\n      selectedRecipients: [],\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    // api call to get users and letters\r\n    // TODO: move users fetch to parent component\r\n    const userFetchUrl = `/api/v1/users`;\r\n    const userInit: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n\r\n    // get user profile from server\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL}${userFetchUrl}`, userInit)\r\n      .then((response) => {\r\n        response\r\n          .json()\r\n          .then((body: ResponseBody) => {\r\n            const data: User[] = body.data;\r\n            console.log(response);\r\n            console.log(body.data);\r\n            if (data) {\r\n              this.setState({\r\n                users: data,\r\n              });\r\n            } else {\r\n              console.log(\"problem with response data for requestor\");\r\n            }\r\n          })\r\n          .catch((e: Error) => {\r\n            console.log(e);\r\n          });\r\n      })\r\n      .catch((e: Error) => {\r\n        console.log(e);\r\n      });\r\n\r\n    const letterFetchUrl = `/api/v1/letters/requested`;\r\n    const letterInit: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n\r\n    // get letters from server\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL}${letterFetchUrl}`, letterInit)\r\n      .then((response) => {\r\n        response\r\n          .json()\r\n          .then((body: ResponseBody) => {\r\n            const data: { letters: LetterDetails[]; numRecipients: Number[] } =\r\n              body.data;\r\n            console.log(response);\r\n            console.log(body.data);\r\n            if (data) {\r\n              this.setState({\r\n                letters: data.letters,\r\n                numRecipients: data.numRecipients,\r\n                loadingLetters: false,\r\n              });\r\n            } else {\r\n              console.log(\"problem with response data for requestor\");\r\n            }\r\n          })\r\n          .catch((e: Error) => {\r\n            console.log(e);\r\n          });\r\n      })\r\n      .catch((e: Error) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  async closeSelectModal() {\r\n    console.log(\"closing select modal\");\r\n    this.setState({ selectIsOpen: false });\r\n  }\r\n\r\n  async openSelectModal() {\r\n    console.log(\"opening select modal\");\r\n    if (this.state.selectedWriter.length !== 0) {\r\n      this.setState({\r\n        selectIsOpen: true,\r\n        selectedRecipients: [],\r\n      });\r\n    }\r\n  }\r\n\r\n  async onSelectSubmit() {\r\n    console.log(\"on select submit\");\r\n\r\n    // TODO: necessary checks before fetching backend to create new request with letter details and indicated list of recipients\r\n    const fetchUrl = `/api/v1/letters/create`;\r\n    this.sendNewLetterRequestToServer(fetchUrl);\r\n  }\r\n\r\n  async sendNewLetterRequestToServer(fetchUrl: string) {\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {\r\n          selectedRecipients: this.state.selectedRecipients,\r\n          letterWriter: this.state.selectedWriter[0].publicAddress,\r\n          customMessage: \"\",\r\n        },\r\n      }),\r\n    };\r\n\r\n    try {\r\n      let response = await fetch(\r\n        `${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`,\r\n        init\r\n      );\r\n      if (response.status === 400) {\r\n        console.log(response.status);\r\n      } else {\r\n        let body = await response.json();\r\n        const data: { letters: LetterDetails[], numRecipients: Number[] } = body.data;\r\n        console.log(response);\r\n        console.log(data);\r\n        if (data) {\r\n          // let l = this.state.letters;\r\n          // l.push(data.letter);\r\n\r\n          // let n = this.state.numRecipients;\r\n          // n.push(data.numRecipient);\r\n\r\n          this.setState({\r\n            confirmIsOpen: false,\r\n            letters: data.letters,\r\n            numRecipients: data.numRecipients,\r\n            selectIsOpen: false\r\n          });\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  async openMessageModal(selectedRecipients: User[]) {\r\n    this.setState({ selectedRecipients: selectedRecipients });\r\n    this.openConfirmModal();\r\n  }\r\n\r\n  async closeMessageModal() {}\r\n\r\n  async openConfirmModal() {\r\n    console.log(\"open confirm modal\");\r\n    this.setState({ confirmIsOpen: true });\r\n  }\r\n\r\n  async closeConfirmModal() {\r\n    console.log(\"close confirm modal\");\r\n    this.setState({ confirmIsOpen: false });\r\n  }\r\n\r\n  render() {\r\n    const user = this.props.user;\r\n    const {\r\n      users,\r\n      letters,\r\n      numRecipients,\r\n      loadingLetters,\r\n      selectIsOpen,\r\n      messageIsOpen,\r\n      confirmIsOpen,\r\n      selectedWriter,\r\n    } = this.state;\r\n\r\n    // const options = range(0, 1000).map((o) => `Item ${o}`);\r\n    const options = this.state.users;\r\n\r\n    const selectWriter = (\r\n      <Fragment>\r\n        <InputGroup className=\"d-flex justify-content-between border-radius button-blur mb-0\">\r\n          <div\r\n            className=\"flex-fill mr-4 single-typeahead\"\r\n            onClick={() => {\r\n              this.setState({ selectedWriter: [] });\r\n            }}\r\n          >\r\n            <Typeahead\r\n              id=\"select-writer-typeahead\"\r\n              // minLength={2}\r\n              labelKey=\"name\"\r\n              filterBy={[\"name\", \"publicAddress\"]}\r\n              options={options}\r\n              placeholder=\"Select a Writer\"\r\n              paginate={true}\r\n              selected={this.state.selectedWriter}\r\n              onChange={(selected) => {\r\n                console.log(\"selected\", selected);\r\n                this.setState({\r\n                  selectedWriter: selected,\r\n                });\r\n              }}\r\n              renderMenuItemChildren={\r\n                (option) =>\r\n                  `${option.name} (${option.publicAddress.slice(0, 6)} . . . )` // TODO: add padding with service\r\n              }\r\n              ref={this.writerTypeahead}\r\n            />\r\n          </div>\r\n\r\n          {selectedWriter.length !== 0 && (\r\n            <Button\r\n              variant=\"outline-light\"\r\n              className=\"flex-shrink-1\"\r\n              onClick={() => {\r\n                if (selectIsOpen) {\r\n                  this.closeSelectModal();\r\n                } else {\r\n                  this.openSelectModal();\r\n                }\r\n              }}\r\n            >\r\n              Select\r\n            </Button>\r\n          )}\r\n          {selectedWriter.length === 0 && (\r\n            <OverlayTrigger\r\n              overlay={\r\n                <Tooltip id=\"tooltip-disabled\" placement=\"left\">\r\n                  Select An User\r\n                </Tooltip>\r\n              }\r\n            >\r\n              <span className=\"d-inline-block\">\r\n                <Button\r\n                  variant=\"outline-light\"\r\n                  className=\"flex-shrink-1\"\r\n                  disabled\r\n                  style={{ pointerEvents: \"none\" }}\r\n                  onClick={() => {\r\n                    if (selectIsOpen) {\r\n                      this.closeSelectModal();\r\n                    } else {\r\n                      this.openSelectModal();\r\n                    }\r\n                  }}\r\n                >\r\n                  Select\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger>\r\n          )}\r\n        </InputGroup>\r\n      </Fragment>\r\n    );\r\n\r\n    const lettersList = letters.map((l, k) => (\r\n      <RequestorLetterDisplay\r\n        user={user}\r\n        letter={l}\r\n        numRecipients={numRecipients[k]}\r\n        users={users}\r\n      />\r\n    ));\r\n\r\n    return (\r\n      <>\r\n        {!loadingLetters && (\r\n          <div className=\"requestor\">\r\n            <div className=\"requestor-header\">\r\n              <h3 className=\"mb-3\">New Request</h3>\r\n            </div>\r\n\r\n            <div className=\"requestor-select\">\r\n              <Card.Header className=\"requestor-select-writer\">\r\n                <div>{selectWriter}</div>\r\n              </Card.Header>\r\n              {selectIsOpen && selectedWriter.length === 1 && (\r\n                <div className=\"collapse-body-select\">\r\n                  <Select\r\n                    user={this.props.user}\r\n                    previouslySelectedRecipients={[]}\r\n                    header=\"Select Recipients\"\r\n                    onClose={this.closeSelectModal.bind(this)}\r\n                    onSubmit={this.openMessageModal.bind(this)}\r\n                    users={this.state.users.filter(\r\n                      (user: User) =>\r\n                        user.publicAddress !== selectedWriter[0].publicAddress\r\n                    )}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"requestor-letters\">\r\n              <div>\r\n                <h3> Requests </h3>\r\n                {lettersList}\r\n              </div>\r\n            </div>\r\n            <div className=\"requestor-footer\">\r\n              <span> Product of Team Gas</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {loadingLetters && (\r\n          <div className=\"d-flex justify-content-center absolute-center\">\r\n            <Spinner className=\"\" animation=\"border\" variant=\"secondary\" />\r\n          </div>\r\n        )}\r\n        <Modal\r\n          id=\"confirm-modal\"\r\n          show={confirmIsOpen}\r\n          onHide={this.closeConfirmModal.bind(this)}\r\n          // backdrop=\"static\"\r\n          animation={false}\r\n          className=\"modal\"\r\n          scrollable={false}\r\n          // size=\"sm\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Please Confirm</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Confirm\r\n              user={this.props.user}\r\n              onConfirm={this.onSelectSubmit.bind(this)}\r\n              onClose={this.closeConfirmModal.bind(this)}\r\n            />\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Requestor;\r\n","import React from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Spinner,\r\n  Modal,\r\n  Collapse,\r\n  Col,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport UserProfile from \"../common/UserProfile.interface\";\r\nimport UserAuth from \"../common/UserAuth.interface\";\r\nimport LetterHistory from \"../common/LetterHistory.interface\";\r\nimport RequestBody from \"../common/RequestBody.interface\";\r\nimport ResponseBody from \"../common/ResponseBody.interface\";\r\nimport \"./RecipientLetterDisplay.css\";\r\nimport LetterDetails from \"../common/LetterDetails.interface\";\r\n\r\nimport FileData from \"../common/FileData.interface\";\r\nimport CryptService from \"../services/CryptService\";\r\nimport CacheService from \"../services/CacheService\";\r\n\r\nimport FileUpload from \"../components/FileUpload/FileUpload\";\r\nimport FileView from \"../components/FileView/FileView\";\r\nimport Confirm from \"../components/Confirm/Confirm\";\r\nimport FileHistory from \"../components/FileHistory\";\r\nimport Profile from \"../components/Profile\";\r\n\r\ninterface RecipientLetterDisplayProps {\r\n  user: UserAuth;\r\n  letter: LetterDetails;\r\n  numRecipients: Number;\r\n}\r\ninterface RecipientLetterDisplayState {\r\n  history: LetterHistory[];\r\n  loadingHistory: boolean;\r\n  profileIsOpen: boolean;\r\n  historyIsOpen: boolean;\r\n  uploadIsOpen: boolean;\r\n  viewIsOpen: boolean;\r\n  confirmIsOpen: boolean;\r\n  collapseIsOpen: boolean;\r\n  selectedUserProfile?: UserProfile;\r\n  uploadedFile?: File;\r\n  fileData?: FileData;\r\n}\r\n\r\nclass RecipientLetterDisplay extends React.Component<\r\n  RecipientLetterDisplayProps,\r\n  RecipientLetterDisplayState\r\n> {\r\n  private uploadModal = React.createRef<FileUpload>();\r\n  private viewModal = React.createRef<FileView>();\r\n  private userProfiles: Map<string, UserProfile>;\r\n  private cryptService: CryptService;\r\n  private cacheService: CacheService<string, string>;\r\n\r\n  constructor(props: RecipientLetterDisplayProps) {\r\n    super(props);\r\n    this.state = {\r\n      history: [],\r\n      loadingHistory: false,\r\n      profileIsOpen: false,\r\n      historyIsOpen: false,\r\n      uploadIsOpen: false,\r\n      viewIsOpen: false,\r\n      confirmIsOpen: false,\r\n      collapseIsOpen: false,\r\n    };\r\n\r\n    this.userProfiles = new Map<string, UserProfile>();\r\n    this.cryptService = new CryptService();\r\n    this.cacheService = new CacheService(1);\r\n  }\r\n\r\n  async openViewModal() {\r\n    console.log(\"opening view modal\");\r\n    this.setState({ viewIsOpen: true });\r\n    const letterId = this.props.letter.letterId;\r\n    const fetchUrl = `/api/v1/letters/${letterId}/contents`;\r\n    console.log(letterId);\r\n    let encryptedLetter = this.cacheService.get(letterId);\r\n    if (encryptedLetter === null) {\r\n      this.retrieveLetterContentsFromServer(fetchUrl);\r\n    } else {\r\n      try {\r\n        let fileData = await this.cryptService.decrypt(\r\n          encryptedLetter,\r\n          this.props.user.publicAddress\r\n        );\r\n\r\n        console.log(fileData.letterType);\r\n        this.setState({\r\n          fileData: fileData,\r\n        });\r\n      } catch (error) {\r\n        console.log(\"error with decryption\");\r\n      }\r\n    }\r\n  }\r\n\r\n  closeViewModal() {\r\n    console.log(\"closing view modal\");\r\n    this.setState({ viewIsOpen: false, fileData: undefined });\r\n  }\r\n\r\n  retrieveLetterContentsFromServer(fetchUrl: string) {\r\n    console.log(\"retrieving from server\");\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n    const letterId = this.props.letter.letterId;\r\n    // get letter from server\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`, init)\r\n      .then((response) => {\r\n        console.log(\"logging response\");\r\n        console.log(response);\r\n        return response.json();\r\n      })\r\n      .then((encryptedLetter) => {\r\n        // decrypt letter\r\n        this.cryptService\r\n          .decrypt(encryptedLetter, this.props.user.publicAddress)\r\n          .then((fileData) => {\r\n            if (fileData) {\r\n              this.setState({\r\n                viewIsOpen: true,\r\n                fileData: fileData,\r\n              });\r\n            }\r\n          });\r\n      })\r\n      .catch((e: Error) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  async openMessageModal(file: File) {\r\n    this.setState({ uploadedFile: file });\r\n    this.openConfirmModal();\r\n  }\r\n\r\n  async closeMessageModal() {}\r\n\r\n  async closeProfileModal() {\r\n    console.log(\"closing profile modal\");\r\n    this.setState({ profileIsOpen: false, selectedUserProfile: undefined });\r\n  }\r\n\r\n  async openProfileModal(publicAddress: string) {\r\n    console.log(\"opening profile modal\");\r\n    const userProfile = this.userProfiles.get(publicAddress);\r\n    console.log(userProfile);\r\n    if (userProfile === undefined) {\r\n      this.setState({ profileIsOpen: true });\r\n      const fetchUrl = `/api/v1/users/${publicAddress}/profile`;\r\n      this.retrieveProfileFromServer(fetchUrl);\r\n    } else {\r\n      this.setState({ selectedUserProfile: userProfile, profileIsOpen: true });\r\n    }\r\n  }\r\n\r\n  async retrieveProfileFromServer(fetchUrl: string) {\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n\r\n    try {\r\n      let response = await fetch(\r\n        `${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`,\r\n        init\r\n      );\r\n\r\n      if (response.status === 400) {\r\n        console.log(response.status);\r\n        // this.setState({\r\n        //   profileIsOpen: false,\r\n        // });\r\n      } else {\r\n        let body = await response.json();\r\n        const data: UserProfile[] = body.data;\r\n        console.log(response);\r\n        console.log(data);\r\n        if (data && data.length !== 0) {\r\n          this.userProfiles.set(data[0].publicAddress, data[0]);\r\n          this.setState({\r\n            selectedUserProfile: data[0],\r\n          });\r\n        } else {\r\n          // this.setState({\r\n          //   profileIsOpen: false,\r\n          // });\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      // this.setState({\r\n      //   profileIsOpen: false,\r\n      // });\r\n    }\r\n  }\r\n\r\n  async closeHistoryModal() {\r\n    console.log(\"closing history modal\");\r\n    this.setState({\r\n      historyIsOpen: false,\r\n      loadingHistory: false,\r\n      collapseIsOpen: this.state.viewIsOpen,\r\n    });\r\n  }\r\n\r\n  async openHistoryModal() {\r\n    console.log(\"opening history modal\");\r\n\r\n    if (this.state.history.length === 0) {\r\n      this.setState({\r\n        loadingHistory: true,\r\n        historyIsOpen: true,\r\n        collapseIsOpen: true,\r\n      });\r\n      const letterId = this.props.letter.letterId;\r\n      const fetchUrl = `/api/v1/letters/${letterId}/history`;\r\n      this.retrieveHistoryFromServer(fetchUrl);\r\n    } else {\r\n      this.setState({\r\n        historyIsOpen: true,\r\n        collapseIsOpen: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  async retrieveHistoryFromServer(fetchUrl: string) {\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`,\r\n        init\r\n      );\r\n      if (response.status === 400) {\r\n        console.log(response.status);\r\n        this.setState({\r\n          // historyIsOpen: false,\r\n          loadingHistory: false,\r\n          // collapseIsOpen: this.state.selectIsOpen,\r\n        });\r\n      } else {\r\n        const body = await response.json();\r\n\r\n        const data: LetterHistory[] = body.data;\r\n        console.log(response);\r\n        console.log(data);\r\n        if (data) {\r\n          this.setState({\r\n            history: data,\r\n            loadingHistory: false,\r\n          });\r\n        } else {\r\n          console.log(\"fetch for letterHistory failed\");\r\n          this.setState({\r\n            // historyIsOpen: false,\r\n            loadingHistory: false,\r\n            // collapseIsOpen: this.state.selectIsOpen,\r\n          });\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      this.setState({\r\n        // historyIsOpen: false,\r\n        loadingHistory: false,\r\n        // collapseIsOpen: this.state.selectIsOpen,\r\n      });\r\n    }\r\n  }\r\n\r\n  async openConfirmModal() {\r\n    console.log(\"open confirm modal\");\r\n    this.setState({ confirmIsOpen: true });\r\n  }\r\n\r\n  async closeConfirmModal() {\r\n    console.log(\"close confirm modal\");\r\n    this.setState({ confirmIsOpen: false });\r\n  }\r\n\r\n  render() {\r\n    const { user, letter, numRecipients } = this.props;\r\n    const {\r\n      history,\r\n      loadingHistory,\r\n      profileIsOpen,\r\n      historyIsOpen,\r\n      uploadIsOpen,\r\n      viewIsOpen,\r\n      confirmIsOpen,\r\n      collapseIsOpen,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Card className=\"full-width opacity-0\">\r\n          <Card.Header\r\n            className=\"d-flex justify-content-between button-blur letter-entry\"\r\n            onClick={() => this.setState({ collapseIsOpen: !collapseIsOpen })}\r\n          >\r\n            <div className=\"flex-fill\">\r\n              <span className=\"mr-3\">From:</span>\r\n              <Button\r\n                variant=\"outline-light\"\r\n                onClick={(e: any) => {\r\n                  e.stopPropagation();\r\n                  this.openProfileModal(letter.letterWriter.publicAddress);\r\n                }}\r\n              >\r\n                {letter.letterWriter?.name}\r\n              </Button>\r\n            </div>\r\n            {/* <Button\r\n              // TODO: add Tooltip\r\n              variant=\"outline-light\"\r\n              className=\"flex-shrink-1 float-right ml-3\"\r\n              onClick={(e: any) => {\r\n                e.stopPropagation();\r\n                if (uploadIsOpen) {\r\n                  this.closeUploadModal();\r\n                } else {\r\n                  this.openUploadModal();\r\n                }\r\n              }}\r\n            >\r\n              Upload\r\n            </Button> */}\r\n              <div className=\"flex-shrink-1 float-right\">\r\n              <span className=\"mr-3\">For:</span>\r\n              <Button\r\n                variant=\"outline-light\"\r\n                onClick={(e: any) => {\r\n                  e.stopPropagation();\r\n                  this.openProfileModal(letter.letterRequestor.publicAddress);\r\n                }}\r\n              >\r\n                {letter.letterRequestor?.name}\r\n              </Button>\r\n            </div>\r\n            <Button\r\n              // TODO: add Tooltip\r\n              variant=\"outline-light\"\r\n              className=\"flex-shrink-1 float-right ml-3\"\r\n              onClick={(e: any) => {\r\n                e.stopPropagation();\r\n                if (viewIsOpen) {\r\n                  this.closeViewModal();\r\n                } else {\r\n                  this.openViewModal();\r\n                }\r\n              }}\r\n            >\r\n              View\r\n            </Button>\r\n            {/* <Button\r\n              disabled={numRecipients === 0}\r\n              variant=\"outline-light\"\r\n              className=\"flex-shrink-1 float-right ml-3\"\r\n              onClick={(e: any) => {\r\n                e.stopPropagation();\r\n                if (historyIsOpen) {\r\n                  this.closeHistoryModal();\r\n                } else {\r\n                  this.openHistoryModal();\r\n                }\r\n              }}\r\n            >\r\n              History\r\n            </Button> */}\r\n            <Button\r\n              variant=\"outline-light\"\r\n              className=\"flex-shrink-1 float-right ml-3\"\r\n              onClick={(e: any) => {\r\n                e.stopPropagation();\r\n                this.setState({ collapseIsOpen: !collapseIsOpen });\r\n              }}\r\n              aria-controls=\"example-collapse-text\"\r\n              aria-expanded={collapseIsOpen}\r\n            >\r\n              *\r\n            </Button>\r\n          </Card.Header>\r\n        </Card>\r\n        <Collapse in={collapseIsOpen}>\r\n          <div className=\"collapse-body-select\">\r\n            {/* {uploadIsOpen && (\r\n              <div>\r\n                <FileUpload\r\n                  ref={this.uploadModal}\r\n                  user={this.props.user}\r\n                  restrictPdf={true}\r\n                  onUpload={this.openMessageModal.bind(this)}\r\n                  onClose={this.closeUploadModal.bind(this)}\r\n                ></FileUpload>\r\n              </div>\r\n            )}\r\n            {loadingHistory && (\r\n              <div className=\"d-flex justify-content-center\">\r\n                <Spinner\r\n                  className=\"mb-3\"\r\n                  animation=\"border\"\r\n                  variant=\"secondary\"\r\n                />\r\n              </div>\r\n            )}\r\n            {!loadingHistory && historyIsOpen && (\r\n              <div className=\"\">\r\n                <FileHistory\r\n                  user={user}\r\n                  history={history}\r\n                  onClose={this.closeHistoryModal.bind(this)}\r\n                ></FileHistory>\r\n              </div>\r\n            )}\r\n            {(loadingHistory || historyIsOpen) && <div className=\"mb-5\"></div>}*/}\r\n            {!uploadIsOpen && !historyIsOpen && (\r\n              <div className=\"display-text d-flex text-white-50\">\r\n                <div className=\"flex-fill\">\r\n                  Requested: {letter.requestedAt?.toString()}\r\n                </div>\r\n                {letter.uploadedAt && (\r\n                  <div className=\" flex-shrink-1 float-right\">\r\n                    Uploaded: {letter.uploadedAt?.toString()}\r\n                  </div>\r\n                )}\r\n                {!letter.uploadedAt && (\r\n                  <div className=\" flex-shrink-1 float-right\">Not Uploaded</div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Collapse>\r\n\r\n        <Modal\r\n          id=\"profile-modal\"\r\n          show={profileIsOpen}\r\n          onHide={this.closeProfileModal.bind(this)}\r\n          // backdrop=\"static\"\r\n          animation={false}\r\n          className=\"modal\"\r\n          scrollable={false}\r\n          // size=\"sm\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{this.state.selectedUserProfile?.name}</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Profile\r\n              user={this.state.selectedUserProfile}\r\n              onClose={this.closeProfileModal.bind(this)}\r\n            />\r\n          </Modal.Body>\r\n        </Modal>\r\n\r\n        {/* <Modal\r\n          id=\"confirm-modal\"\r\n          show={confirmIsOpen}\r\n          onHide={this.closeConfirmModal.bind(this)}\r\n          // backdrop=\"static\"\r\n          animation={false}\r\n          className=\"modal\"\r\n          scrollable={false}\r\n          // size=\"sm\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Please Confirm</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Confirm\r\n              user={this.props.user}\r\n              onConfirm={this.closeConfirmModal.bind(this)}\r\n              onClose={this.closeConfirmModal.bind(this)}\r\n            />\r\n          </Modal.Body>\r\n        </Modal> */}\r\n\r\n        <Modal\r\n          id=\"view-modal\"\r\n          show={viewIsOpen}\r\n          onHide={this.closeViewModal.bind(this)}\r\n          backdrop=\"static\"\r\n          animation={false}\r\n          className=\"modal view-modal\"\r\n          scrollable={false}\r\n          size=\"xl\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>For: {letter.letterRequestor?.name}</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <FileView\r\n              fileData={this.state.fileData}\r\n              ref={this.viewModal}\r\n              user={this.props.user}\r\n              onClose={this.closeViewModal.bind(this)}\r\n            ></FileView>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecipientLetterDisplay;\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nimport UserAuth from \"../common/UserAuth.interface\";\r\nimport LetterDetails from \"../common/LetterDetails.interface\";\r\nimport RequestBody from \"../common/RequestBody.interface\";\r\nimport ResponseBody from \"../common/ResponseBody.interface\";\r\n\r\nimport RecipientLetterDisplay from \"../RecipientLetterDisplay/RecipientLetterDisplay\";\r\n\r\nimport \"./Recipient.css\";\r\nimport LetterHistory from \"../common/LetterHistory.interface\";\r\n\r\ninterface RecipientProps {\r\n  user: UserAuth;\r\n}\r\n\r\ninterface RecipientState {\r\n  letters: LetterHistory[];\r\n  numRecipients: Number[];\r\n  loadingLetters: boolean;\r\n}\r\n\r\nclass Recipient extends React.Component<RecipientProps, RecipientState> {\r\n  constructor(props: RecipientProps) {\r\n    super(props);\r\n    this.state = {\r\n      letters: [],\r\n      numRecipients: [],\r\n      loadingLetters: true,\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    // api call to get letters\r\n    const letterFetchUrl = `/api/v1/letters/received`;\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n\r\n    // get letters from server\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL}${letterFetchUrl}`, init)\r\n      .then((response) => {\r\n        response\r\n          .json()\r\n          .then((body: ResponseBody) => {\r\n            const data: LetterHistory[] = body.data;\r\n\r\n            console.log(response);\r\n            if (data) {\r\n              this.setState({\r\n                letters: data,\r\n                loadingLetters: false,\r\n              });\r\n            } else {\r\n              console.log(\"problem with response data for recipient\");\r\n            }\r\n          })\r\n          .catch((e: Error) => {\r\n            console.log(e);\r\n          });\r\n      })\r\n      .catch((e: Error) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n    const { letters, numRecipients, loadingLetters } = this.state;\r\n\r\n    const lettersList = letters.map((l, k) => (\r\n      <RecipientLetterDisplay\r\n        user={user}\r\n        letter={l}\r\n        numRecipients={numRecipients[k]}\r\n      />\r\n    ));\r\n\r\n    return (\r\n      <>\r\n        {!loadingLetters && (\r\n          <div id=\"recipient\" className=\"recipient\">\r\n            <div className=\"recipient-header mb-3\">\r\n              <h3> Letters </h3>\r\n            </div>\r\n\r\n            <div className=\"recipient-letters\">\r\n              <div>{lettersList}</div>\r\n            </div>\r\n\r\n            <div className=\"recipient-footer\">\r\n              <span> Product of Team Gas</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {loadingLetters && (\r\n          <div className=\"d-flex justify-content-center absolute-center\">\r\n            <Spinner className=\"\" animation=\"border\" variant=\"secondary\" />\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Recipient;\r\n","import React from \"react\";\r\nimport { Button, InputGroup, FormControl } from \"react-bootstrap\";\r\nimport UserAuth from \"../common/UserAuth.interface\";\r\nimport \"./Login.css\";\r\nimport RequestBody from \"../common/RequestBody.interface\";\r\nimport ResponseBody from \"../common/ResponseBody.interface\";\r\n\r\nimport { web3 } from \"../App\";\r\n\r\ninterface LoginProps {\r\n  user: UserAuth;\r\n  callback: (u: UserAuth) => void;\r\n}\r\ninterface LoginState {\r\n  inputName: string;\r\n  // displayMessage: string;\r\n  loginMode: boolean;\r\n}\r\n\r\nclass Login extends React.Component<LoginProps, LoginState> {\r\n  constructor(props: LoginProps) {\r\n    super(props);\r\n    this.state = {\r\n      inputName: \"\",\r\n      // displayMessage: \"\",\r\n      loginMode: true,\r\n    };\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.onLoginClick = this.onLoginClick.bind(this);\r\n    this.signMessage = this.signMessage.bind(this);\r\n    this.authenticate = this.authenticate.bind(this);\r\n  }\r\n\r\n  onSignupClick(/*event: React.MouseEvent<HTMLInputElement, MouseEvent>*/) {\r\n    const publicAddress = this.props.user.publicAddress;\r\n\r\n    // delete after implement router in which login will not be displayed unless connected to metamask\r\n    if (publicAddress === \"\") {\r\n      // comment out conditional for testing signup\r\n      console.log(\"Invalid public address. Connect to Metamask.\");\r\n      // this.setState({ displayMessage: \"Connect to Metamask.\" });\r\n      alert(\"Connect to Metamask\");\r\n      return;\r\n    }\r\n\r\n    if (this.state.inputName.length <= 1) {\r\n      console.log(this.state.inputName);\r\n      console.log(\"Enter a name.\");\r\n      alert(\"Please Enter Your Name\");\r\n      // this.setState({ displayMessage: \"Enter Your Name.\" });\r\n      return;\r\n    }\r\n\r\n    this.signup({\r\n      publicAddress: publicAddress,\r\n      inputName: this.state.inputName,\r\n    })\r\n      // metamask popup to sign\r\n      .then(this.signMessage)\r\n      // send signature to backend\r\n      .then(this.authenticate)\r\n      //.then(this.doStuffWithToken) // after receiving the token\r\n      .catch((err: Error) => {\r\n        console.log(err);\r\n        // this.setState({ displayMessage: \"Error. Please Try Again Later.\" });\r\n        alert(\"Error. Please Try Again Later.\");\r\n      });\r\n\r\n    return;\r\n  }\r\n\r\n  onLoginClick(/*event: React.MouseEvent<HTMLInputElement, MouseEvent>*/) {\r\n    console.log(\"login clicked.\");\r\n    // event.preventDefault();\r\n\r\n    const publicAddress = this.props.user.publicAddress; // comment out for testing signup\r\n    // const publicAddress = \"newAddress\"; // uncomment for testing signup\r\n\r\n    // delete after implement router in which login will not be displayed unless connected to metamask\r\n    if (publicAddress === \"\") {\r\n      // comment out conditional for testing signup\r\n      console.log(\"Invalid public address. Connect to Metamask.\");\r\n      alert(\"Please Connect to Metamask\");\r\n      // this.setState({ displayMessage: \"Please Connect to Metamask.\" });\r\n      return;\r\n    }\r\n\r\n    console.log(\"public address:\", publicAddress);\r\n\r\n    const init: RequestInit = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    fetch(\r\n      `${process.env.REACT_APP_BACKEND_URL}/auth/users/${publicAddress}`,\r\n      init\r\n    )\r\n      .then((response) => {\r\n        console.log(\"logging nonce fetch response\");\r\n        console.log(response);\r\n        return response.json();\r\n      })\r\n      .then((users) => {\r\n        console.log(users);\r\n\r\n        if (users[0] == null) {\r\n          console.log(\"need to signup.\");\r\n          // this.setState({\r\n          //   displayMessage: \"No Existing Account. Sign Up Instead.\",\r\n          // });\r\n          alert(\"No Existing Account. Sign Up Instead.\");\r\n          return Promise.reject(\"no existing account\");\r\n        }\r\n        return users[0];\r\n      })\r\n      // metamask popup to sign\r\n      .then(this.signMessage)\r\n      // send signature to backend\r\n      .then(this.authenticate)\r\n      //.then(this.doStuffWithToken) // after receiving the token\r\n      .catch((err: Error) => {\r\n        console.log(err);\r\n        // this.setState({ displayMessage: \"Login Failed. Try Again Later.\" });\r\n        alert(\"Login Failed.\");\r\n      });\r\n\r\n    return;\r\n  }\r\n\r\n  async signup({\r\n    publicAddress,\r\n    inputName,\r\n  }: {\r\n    publicAddress: string;\r\n    inputName: string;\r\n  }) {\r\n    console.log(\"publicAddress:\", publicAddress, \"name:\", inputName);\r\n    // this.setState({ displayMessage: \"Signing You Up . . .\" });\r\n    return await fetch(\r\n      `${process.env.REACT_APP_BACKEND_URL}/auth/users/create`,\r\n      {\r\n        body: JSON.stringify({\r\n          publicAddress: publicAddress,\r\n          name: inputName,\r\n        }),\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        method: \"POST\",\r\n      }\r\n    )\r\n      .then((response) => {\r\n        console.log(\"logging signup response\");\r\n        console.log(response);\r\n        return response.json();\r\n      })\r\n      .then((users) => {\r\n        console.log(users);\r\n        console.log(\"signup finish\");\r\n        return users[0];\r\n      });\r\n    // .then((response) => response.json()) // needs to handle response in which user has existing account\r\n    // .catch((err: Error) => console.log(err));\r\n  }\r\n\r\n  async signMessage({\r\n    publicAddress,\r\n    nonce,\r\n  }: {\r\n    publicAddress: string;\r\n    nonce: string;\r\n  }): Promise<{ publicAddress: string; signature: string }> {\r\n    // this.setState({displayMessage: \"Sign the Message to Confirm Public Address.\"})\r\n    console.log(\"signing the nonce\");\r\n    console.log(nonce);\r\n    // const prefix = '\\x19Ethereum Signed Message:\\n' + String.fromCharCode(nonce.length);\r\n    // const message = web3.utils.keccak256(prefix + nonce);\r\n    const message = nonce;\r\n    // const message = web3.utils.keccak256(nonce);\r\n    console.log(message);\r\n    console.log(web3.utils.utf8ToHex(`${message}`));\r\n    console.log(publicAddress);\r\n    return new Promise((resolve, reject) => {\r\n      // web3.eth.sign doesn't seem to work (never finishes)\r\n      web3.eth.personal\r\n        .sign(\r\n          message,\r\n          // web3.utils.utf8ToHex(`${message}`),\r\n          publicAddress,\r\n          \"\",\r\n          (err, signature) => {\r\n            //console.log(web3.eth.accounts.recover(web3.utils.keccak256(nonce), signature));\r\n            //web3.eth.personal.ecRecover(message, signature).then((v) => console.log(v));\r\n            if (err) {\r\n              console.log(\"error when signing\");\r\n              return reject(err);\r\n            }\r\n            console.log(\"message signed\");\r\n            return resolve({ publicAddress, signature });\r\n          }\r\n        )\r\n        .then(console.log)\r\n        .catch((err: Error) => {\r\n          console.log();\r\n        });\r\n    });\r\n  }\r\n\r\n  async authenticate({\r\n    publicAddress,\r\n    signature,\r\n  }: {\r\n    publicAddress: string;\r\n    signature: string;\r\n  }) {\r\n    console.log(\"authenticating\");\r\n    // this.setState({\r\n    //   displayMessage: this.state.loginMode\r\n    //     ? \"Logging You In . . .\"\r\n    //     : \"Signing You Up . . .\",\r\n    // });\r\n    return fetch(`${process.env.REACT_APP_BACKEND_URL}/auth`, {\r\n      body: JSON.stringify({ publicAddress, signature }),\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"POST\",\r\n    })\r\n      .then((response) => {\r\n        console.log(\"received response\");\r\n        console.log(response);\r\n\r\n        response\r\n          .json()\r\n          .then((body: ResponseBody) => {\r\n            console.log(body);\r\n            const data = body.data;\r\n            const j = data.jwtToken;\r\n            console.log(\"jwtToken\", j);\r\n            let jwtToken = j ? j : undefined;\r\n            if (jwtToken) {\r\n              console.log(jwtToken);\r\n              this.props.callback({\r\n                publicAddress: this.props.user.publicAddress,\r\n                name: this.props.user.name,\r\n                jwtToken: jwtToken,\r\n              });\r\n            } else {\r\n              console.log(\"error with jwtToken\");\r\n            }\r\n          })\r\n          .catch((err: Error) => {\r\n            console.log(err);\r\n          });\r\n      })\r\n      .catch((err: Error) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  handleInputChange(event: any) {\r\n    this.setState({ inputName: event.target.value });\r\n  }\r\n\r\n  toggleMode() {\r\n    this.setState({\r\n      loginMode: !this.state.loginMode,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const loginDisplay = (\r\n      <div className=\"button-blur\">\r\n        <Button\r\n          variant=\"outline-light\"\r\n          className=\"mr-3\"\r\n          onClick={() => {\r\n            this.toggleMode();\r\n          }}\r\n        >\r\n          Sign Up\r\n        </Button>\r\n        <Button\r\n          variant=\"outline-light\"\r\n          onClick={() => {\r\n            this.onLoginClick();\r\n          }}\r\n        >\r\n          Login\r\n        </Button>\r\n      </div>\r\n    );\r\n\r\n    const signupDisplay = (\r\n      <form className=\"justify-content-between\">\r\n        <InputGroup className=\"label-top border-radius d-flex\">\r\n          {/* <InputGroup.Prepend className=\"m-2 flex-shrink-1\">\r\n              Sign Up\r\n            </InputGroup.Prepend> */}\r\n          <FormControl\r\n            type=\"text\"\r\n            className=\"flex-fill\"\r\n            placeholder=\"Name\"\r\n            value={this.state.inputName}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </InputGroup>\r\n        <div className=\"d-flex button-blur\">\r\n          <Button\r\n            variant=\"outline-light\"\r\n            className=\"float-right flex-fill\"\r\n            onClick={() => {\r\n              this.onSignupClick();\r\n            }}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Button\r\n            variant=\"outline-light\"\r\n            className=\"float-right flex-fill ml-3\"\r\n            onClick={() => {\r\n              this.toggleMode();\r\n              this.setState({ inputName: \"\" });\r\n            }}\r\n          >\r\n            Back\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    );\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"login-form\">\r\n          <div>{this.state.loginMode ? loginDisplay : signupDisplay}</div>\r\n          {/* <div className=\"alert\"> {this.state.displayMessage}</div> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Login;\r\n","import React from \"react\";\r\nimport UserAuth from \"../common/UserAuth.interface\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport \"./Dashboard.css\";\r\n\r\nconst headers = new Headers();\r\nheaders.set(\"Access-Control-Allow-Origin\", \"*\");\r\nheaders.set(\"Content-Type\", \"application/json\");\r\n\r\ninterface DashboardProps {\r\n  user: UserAuth;\r\n}\r\ninterface DashboardState {}\r\n\r\nclass Dashboard extends React.Component<DashboardProps, DashboardState> {\r\n  constructor(props: DashboardProps) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"dashboard\">\r\n        <div className=\"dashboard-header\">\r\n          <h1> Dashboard </h1>\r\n        </div>\r\n        {/* <hr></hr> */}\r\n        <Card.Header>\r\n          Notifications\r\n        </Card.Header>\r\n        {/* <hr></hr> */}\r\n        <Card.Header>\r\n          Pending\r\n        </Card.Header>\r\n        {/* <hr></hr> */}\r\n        <div className=\"dashboard-footer\">\r\n          <p> Product of Team Gas</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Dashboard;\r\n","import { TutorialToken } from \"./contract-types/TutorialToken\"; // import is correct\r\nimport React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport TutorialTokenContractData from \"./contract-data/TutorialToken.json\";\r\nimport BN from \"bn.js\";\r\n\r\nimport Nav from \"./nav/Nav\";\r\nimport HomePage from \"./home/Home\";\r\nimport WriterPage from \"./writer/Writer\";\r\nimport RequestorPage from \"./requestor/Requestor\";\r\nimport RecipientPage from \"./recipient/Recipient\";\r\nimport LoginPage from \"./login/Login\";\r\nimport DashboardPage from \"./dashboard/Dashboard\";\r\n\r\nimport UserAuth from \"./common/UserAuth.interface\";\r\nimport \"./App.css\";\r\nimport * as ROUTES from \"./routes\";\r\n\r\nimport Web3 from \"web3\";\r\nexport let web3: Web3;\r\nexport let ethereum: any;\r\n\r\nexport const GAS_LIMIT_STANDARD = 6000000;\r\nexport let accounts: string[];\r\nlet web3Provider;\r\n\r\nlet contract: any;\r\nconst ERC20_NETWORK = \"https://services.jade.builders/core-geth/kotti/1.11.2\";\r\nexport async function deployContract<T>(\r\n  contractName: string,\r\n  abi: any,\r\n  code: any,\r\n  ...args: any[]\r\n): Promise<T> {\r\n  const Contract = new web3.eth.Contract(abi);\r\n  const contractResult = await Contract.deploy({ data: code }).send({\r\n    from: accounts[0],\r\n  });\r\n  return contractResult as any;\r\n}\r\n\r\nexport async function deployTutorialToken(): Promise<TutorialToken> {\r\n  console.log(\"Deploying Contract from innner deploy tutorial token method: \");\r\n  var contract = await deployContract<TutorialToken>(\r\n    \"TutorialToken\",\r\n    TutorialTokenContractData.abi,\r\n    TutorialTokenContractData.bytecode,\r\n    0\r\n  );\r\n  console.log(\"Contract from innner deploy tutorial token method: \" + contract);\r\n  return contract;\r\n}\r\n\r\ntype MyProps = {};\r\ntype MyState = {\r\n  numErcBeingTraded: number;\r\n  contract: TutorialToken;\r\n  connectedTo: boolean; // metamask\r\n  loggedIn: boolean; // our app\r\n  user: UserAuth;\r\n};\r\n\r\nclass App extends React.Component<MyProps, MyState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      numErcBeingTraded: 0,\r\n      contract: {} as TutorialToken,\r\n      connectedTo: false,\r\n      loggedIn: false,\r\n      user: { publicAddress: \"\", name: \"\", jwtToken: \"\" },\r\n    };\r\n    this.onConnect = this.onConnect.bind(this);\r\n    this.onLogin = this.onLogin.bind(this);\r\n    //this.handleErcInputChange = this.handleErcInputChange.bind(this);\r\n  }\r\n\r\n  handleErcInputChange(event: any) {\r\n    this.setState({\r\n      numErcBeingTraded: event.target.value,\r\n    });\r\n    console.log(\"Num of ERC wanted to trade: \" + this.state.numErcBeingTraded);\r\n    var rate = this.state.contract.methods.rate().call();\r\n    var numErc = new BN(this.state.numErcBeingTraded);\r\n    //var numTokens = rate.mul(numErc);\r\n    //console.log(\"Num of Tutorial Tokens you can receive: \" + numTokens.toString());\r\n  }\r\n\r\n  async onConnect() {\r\n    const ethereum = (window as any).ethereum;\r\n    await ethereum.enable();\r\n    web3Provider = (window as any).web3.currentProvider;\r\n    // NOTE you might need this\r\n    //await ethereum.send('eth_requestAccounts')\r\n\r\n    web3 = new Web3(web3Provider);\r\n    accounts = await ethereum.request({ method: \"eth_accounts\" });\r\n    // contract = await deployTutorialToken(); // temporary disable\r\n    console.log(accounts);\r\n    // ethereum\r\n    //       .request({\r\n    //         method: \"eth_getEncryptionPublicKey\",\r\n    //         params: [accounts[0]], // you must have access to the specified account\r\n    //       })\r\n    //       .then((publicKey: string) => {\r\n    //         console.log(publicKey);\r\n    //       });\r\n\r\n    this.setState({\r\n      contract,\r\n      connectedTo: true,\r\n      user: { publicAddress: accounts[0], name: \"\", jwtToken: \"\" },\r\n      // loggedIn: true, // testing purposes only\r\n    });\r\n  }\r\n\r\n  onLogin(u: UserAuth) {\r\n    console.log(\"login complete\");\r\n    this.setState({ user: u, loggedIn: true });\r\n  }\r\n\r\n  render() {\r\n    const home = <HomePage user={this.state.user} />;\r\n    const login = (\r\n      <LoginPage callback={this.onLogin.bind(this)} user={this.state.user} />\r\n    );\r\n    const dashboard = <DashboardPage user={this.state.user} />;\r\n    const requestor = <RequestorPage user={this.state.user} />;\r\n    const writer = <WriterPage user={this.state.user} />;\r\n    const recipient = <RecipientPage user={this.state.user} />;\r\n\r\n    return (\r\n      <div>\r\n        <Nav\r\n          user={this.state.user}\r\n          connectedTo={this.state.connectedTo}\r\n          onConnect={this.onConnect}\r\n          loggedIn={this.state.loggedIn}\r\n        />\r\n        {this.state.loggedIn ? <Redirect to={ROUTES.REQUESTOR} /> : null}\r\n        <div className=\"application-body\">\r\n          <Route exact path={ROUTES.HOME} render={() => home} />\r\n          <Route exact path={ROUTES.LOGIN} render={() => login} />\r\n          <Route exact path={ROUTES.DASHBOARD} render={() => dashboard} />\r\n          <Route exact path={ROUTES.REQUESTOR} render={() => requestor} />\r\n          <Route exact path={ROUTES.WRITER} render={() => writer} />\r\n          <Route exact path={ROUTES.RECIPIENT} render={() => recipient} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./assets/styles/app.scss\";\r\n// import { BigNumber } from \"bignumber.js\";\r\n//import * as TruffleContracts from \".\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\n// const Web3 = require('web3');\r\n\r\n// let web3: typeof Web3\r\n// let web3Provider;\r\n//web3 = new Web3(new Web3.providers.HttpProvider('http://127.0.0.1:9545')); // was 9545 before\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}