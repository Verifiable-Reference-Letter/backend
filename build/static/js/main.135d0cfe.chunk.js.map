{"version":3,"sources":["App.tsx","components/file-upload/FileUpload.tsx","components/writer/Writer.tsx","components/requestor/Requestor.tsx","components/recipient/Recipient.tsx","index.tsx"],"names":["web3","accounts","web3Provider","contract","FileUpload","props","state","file","FormData","undefined","onFormSubmit","bind","onChange","e","preventDefault","this","callback","setState","target","files","onSubmit","type","React","Component","Writer","require","letters","sentLetters","modalIsOpen","letterKey","Modal","setAppElement","letter_id","writer","user_id","name","public_key","requester","letter_uploaded","recipient","event","key","openUploadModal","closeUploadModal","console","log","lettersList","map","l","style","marginLeft","float","onClick","onViewClick","onUploadClick","sentLettersList","id","className","isOpen","onRequestClose","contentLabel","onUploadSubmit","Requestor","placeholder","Recipient","deployContract","contractName","abi","code","a","Contract","eth","deploy","data","send","from","contractResult","deployTutorialToken","TutorialTokenContractData","bytecode","App","numErcBeingTraded","is_login","user","login","value","methods","rate","call","BN","ethereum","window","enable","currentProvider","Web3","request","method","prevState","Container","fluid","Navbar","bg","variant","Brand","href","Toggle","Collapse","Text","Row","noGutters","Col","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.135d0cfe.chunk.js","sourcesContent":["import { BigNumber } from \"bignumber.js\";\r\nimport { TutorialToken } from \"./contract-types/TutorialToken\"; // import is correct\r\nimport React from \"react\";\r\nimport TutorialTokenContractData from \"./contract-data/TutorialToken.json\";\r\nimport BN from \"bn.js\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\n\r\nimport Writer from \"./components/writer/Writer\";\r\nimport Requestor from \"./components/requestor/Requestor\";\r\nimport Recipient from \"./components/recipient/Recipient\";\r\n\r\nimport Web3 from \"web3\";\r\nexport let web3: Web3;\r\n\r\nexport const GAS_LIMIT_STANDARD = 6000000;\r\nexport let accounts: string[];\r\nlet web3Provider;\r\n\r\nlet contract: any;\r\nconst ERC20_NETWORK = \"https://services.jade.builders/core-geth/kotti/1.11.2\";\r\nexport async function deployContract<T>(\r\n  contractName: string,\r\n  abi: any,\r\n  code: any,\r\n  ...args: any[]\r\n): Promise<T> {\r\n  const Contract = new web3.eth.Contract(abi);\r\n  const contractResult = await Contract.deploy({ data: code }).send({\r\n    from: accounts[0]\r\n  });\r\n  return contractResult as any;\r\n}\r\n\r\nexport async function deployTutorialToken(): Promise<TutorialToken> {\r\n  console.log(\"Deploying Contract from innner deploy tutorial token method: \");\r\n  var contract = await deployContract<TutorialToken>(\r\n    \"TutorialToken\",\r\n    TutorialTokenContractData.abi,\r\n    TutorialTokenContractData.bytecode,\r\n    0\r\n  );\r\n  console.log(\"Contract from innner deploy tutorial token method: \" + contract);\r\n  return contract;\r\n}\r\n\r\ntype MyProps = {};\r\ntype MyState = {\r\n  numErcBeingTraded: number;\r\n  contract: TutorialToken;\r\n  is_login: boolean;\r\n  user: string\r\n};\r\nclass App extends React.Component<MyProps, MyState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      numErcBeingTraded: 0,\r\n      contract: {} as TutorialToken,\r\n      is_login: false,\r\n      user: \"\"\r\n    };\r\n    this.login = this.login.bind(this);\r\n    //this.handleErcInputChange = this.handleErcInputChange.bind(this);\r\n  }\r\n\r\n  handleErcInputChange(event: any) {\r\n    this.setState({\r\n      numErcBeingTraded: event.target.value\r\n    });\r\n    console.log(\"Num of ERC wanted to trade: \" + this.state.numErcBeingTraded);\r\n    var rate = this.state.contract.methods.rate().call();\r\n    var numErc = new BN(this.state.numErcBeingTraded);\r\n    //var numTokens = rate.mul(numErc);\r\n    //console.log(\"Num of Tutorial Tokens you can receive: \" + numTokens.toString());\r\n  }\r\n\r\n  async login() {\r\n    const ethereum = (window as any).ethereum;\r\n    await ethereum.enable()\r\n    web3Provider = (window as any).web3.currentProvider;\r\n    // NOTE you might need this\r\n    //await ethereum.send('eth_requestAccounts')\r\n\r\n    web3 = new Web3(web3Provider);\r\n    accounts = await ethereum.request({ method: 'eth_accounts' })\r\n    contract = await deployTutorialToken();\r\n\r\n    this.setState(prevState => ({ \r\n    \tcontract, \r\n    \tis_login: true,\r\n    \tuser: accounts[0]\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container fluid>\r\n          <Navbar bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand href=\"#home\">ETC Reference Letter dApp</Navbar.Brand>\r\n            <Navbar.Toggle />\r\n            <Navbar.Collapse className=\"justify-content-end\">\r\n              {!this.state.is_login && <button className=\"Login\" onClick={this.login}>Login</button> }\r\n              <Navbar.Text>\r\n                Signed in as: <a href=\"#login\">{this.state.is_login ? this.state.user : '--'}</a>\r\n              </Navbar.Text>\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n          {/* <Row noGutters>\r\n            <h1><b><i>Send ETC for Tutorial Token</i></b></h1>\r\n            <p>Amount ETC <input value={this.state.numErcBeingTraded} onChange={e => this.handleErcInputChange(e) }/></p>\r\n\t  \t\t    <button>Purchase</button>\r\n          </Row> */}\r\n          <Row noGutters>\r\n            <Col>\r\n              <Requestor\r\n                user_id={102}\r\n                name=\"Simba\"\r\n                public_key=\"0xabcdefghijklmnop\"\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <Writer\r\n                user_id={101}\r\n                name=\"Mary Poppins\"\r\n                public_key=\"0x314159265358979323\"\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <Recipient\r\n                user_id={103}\r\n                name=\"Curious George\"\r\n                public_key=\"0x142857142857142857\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\ninterface FileUploadProps {\r\n  callback: (file: FormData) => void\r\n}\r\ninterface FileUploadState {\r\n  file: FormData\r\n}\r\n\r\nclass FileUpload extends React.Component<FileUploadProps, FileUploadState> {\r\n\r\n  constructor(props: FileUploadProps) {\r\n    super(props);\r\n    this.state = {\r\n      file: new FormData(undefined)\r\n    };\r\n    this.onFormSubmit = this.onFormSubmit.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    // this.fileUpload = this.fileUpload.bind(this);\r\n  }\r\n  \r\n  onFormSubmit(e: React.FormEvent) {\r\n    e.preventDefault(); // Stop form submit\r\n    this.props.callback(this.state.file);\r\n    // this.fileUpload(this.state.file).then((response) => {\r\n    //   console.log(response.data);\r\n    // });\r\n  }\r\n\r\n  onChange(e: any) {\r\n    this.setState({ file: e.target.files[0] });\r\n  }\r\n\r\n  // fileUpload(file) {\r\n  //   const url = \"http://example.com/file-upload\";\r\n  //   const formData = new FormData();\r\n  //   formData.append(\"file\", file);\r\n  //   const config = {\r\n  //     headers: {\r\n  //       \"content-type\": \"multipart/form-data\",\r\n  //     },\r\n  //   };\r\n  //   return post(url, formData, config);\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onFormSubmit}>\r\n        <h1>File Upload</h1>\r\n        <input type=\"file\" onChange={this.onChange} />\r\n        <button type=\"submit\">Upload</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileUpload;\r\n","//import { BigNumber } from \"bignumber.js\";\r\n// import { TutorialToken } from \"./contract-types/TutorialToken\"; // import is correct\r\nimport React from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport \"./Writer.css\";\r\nimport User from \"../../interfaces/User.interface\";\r\nimport Letter from \"../../interfaces/Letter.interface\";\r\nimport SentLetter from \"../../interfaces/SentLetter.interface\";\r\nimport FileUpload from \"../file-upload/FileUpload\";\r\n\r\nconst Web3 = require(\"web3\");\r\nexport let web3: typeof Web3;\r\n\r\n// need to fix\r\ninterface Dictionary<Letter> {\r\n  [key: number]: Letter;\r\n}\r\n\r\ninterface WriterState {\r\n  // need to change into dictionary\r\n  letters: Letter[]; // letter table\r\n  sentLetters: SentLetter[]; // letter-recipient table\r\n  modalIsOpen: boolean;\r\n  letterKey: number;\r\n}\r\n\r\nclass Writer extends React.Component<User, WriterState> {\r\n  componentWillMount() {\r\n    // api call to get letters\r\n    Modal.setAppElement(\"body\");\r\n    this.setState({\r\n      letters: [\r\n        {\r\n          letter_id: 1,\r\n          writer: {\r\n            user_id: 101,\r\n            name: \"Mary Poppins\",\r\n            public_key: \"0x314159265358979323\",\r\n          },\r\n          requester: {\r\n            user_id: 102,\r\n            name: \"Simba\",\r\n            public_key: \"0xabcdefghijklmnop\",\r\n          },\r\n          letter_uploaded: false,\r\n        },\r\n        {\r\n          letter_id: 2,\r\n          writer: {\r\n            user_id: 101,\r\n            name: \"Mary Poppins\",\r\n            public_key: \"0x314159265358979323\",\r\n          },\r\n          requester: {\r\n            user_id: 103,\r\n            name: \"Curious George\",\r\n            public_key: \"0x142857142857142857\",\r\n          },\r\n          letter_uploaded: false,\r\n        },\r\n      ],\r\n      sentLetters: [\r\n        {\r\n          letter_id: 2,\r\n          writer: {\r\n            user_id: 101,\r\n            name: \"Mary Poppins\",\r\n            public_key: \"0x314159265358979323\",\r\n          },\r\n          requester: {\r\n            user_id: 102,\r\n            name: \"Simba\",\r\n            public_key: \"0xabcdefghijklmnop\",\r\n          },\r\n          recipient: {\r\n            user_id: 104,\r\n            name: \"Elton John\",\r\n            public_key: \"0x101100101001101110100\",\r\n          },\r\n        },\r\n        {\r\n          letter_id: 2,\r\n          writer: {\r\n            user_id: 101,\r\n            name: \"Mary Poppins\",\r\n            public_key: \"0x314159265358979323\",\r\n          },\r\n          requester: {\r\n            user_id: 102,\r\n            name: \"Simba\",\r\n            public_key: \"0xabcdefghijklmnop\",\r\n          },\r\n          recipient: {\r\n            user_id: 103,\r\n            name: \"Curious George\",\r\n            public_key: \"0x142857142857142857\",\r\n          },\r\n        },\r\n      ],\r\n    });\r\n  }\r\n\r\n  constructor(props: User) {\r\n    super(props);\r\n    this.state = {\r\n      letters: [],\r\n      sentLetters: [],\r\n      modalIsOpen: false,\r\n      letterKey: -1,\r\n    };\r\n  }\r\n\r\n  onUploadClick(\r\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\r\n    key: number\r\n  ) {\r\n    this.openUploadModal(key);\r\n  }\r\n\r\n  onViewClick(\r\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\r\n    key: number\r\n  ) {}\r\n\r\n  openUploadModal(key: number) {\r\n    this.setState({ modalIsOpen: true, letterKey: key });\r\n  }\r\n\r\n  closeUploadModal() {\r\n    this.setState({ modalIsOpen: false });\r\n  }\r\n\r\n  onUploadSubmit(file: FormData) {\r\n    this.closeUploadModal();\r\n    console.log(this.state.letterKey);\r\n    console.log(file);\r\n    // send letter to backend\r\n  }\r\n\r\n  // letterView() {\r\n  //   if (this.state.letters.) {\r\n  //     return <UserGreeting />;\r\n  //   }\r\n  //   return <GuestGreeting />;\r\n  // }\r\n\r\n  render() {\r\n    const { name, public_key, user_id } = this.props;\r\n    const { letters, sentLetters, modalIsOpen, letterKey } = this.state;\r\n\r\n    const lettersList = letters.map((l, key) => (\r\n      <div key={l.letter_id}>\r\n        <p>\r\n          <span>({l.letter_id})&nbsp;</span>\r\n          <span>For: {l.requester.name} </span>\r\n\r\n          <button\r\n            style={{ marginLeft: \"10px\", float: \"right\" }}\r\n            onClick={(e) => {\r\n              this.onViewClick(e, l.letter_id);\r\n            }}\r\n          >\r\n            view\r\n          </button>\r\n\r\n          <button\r\n            style={{ marginLeft: \"10px\", float: \"right\" }}\r\n            onClick={(e) => {\r\n              this.onUploadClick(e, l.letter_id);\r\n            }}\r\n          >\r\n            upload\r\n          </button>\r\n\r\n        </p>\r\n      </div>\r\n    ));\r\n\r\n    const sentLettersList = sentLetters.map((l, key) => (\r\n      <div key={l.letter_id + \"x\" + l.recipient.user_id}>\r\n        <p>\r\n          <span>({l.letter_id})&nbsp;</span>\r\n          <span>For: {l.requester.name}</span>\r\n\r\n          <button\r\n            style={{ marginLeft: \"10px\", float: \"right\" }}\r\n            onClick={(e) => {\r\n              this.onViewClick(e, l.letter_id);\r\n            }}\r\n          >\r\n            view\r\n          </button>\r\n          <span style={{ float: \"right\" }}>To: {l.recipient.name}</span>\r\n        </p>\r\n      </div>\r\n    ));\r\n\r\n    return (\r\n      <div id=\"writer\" className=\"writer\">\r\n        <div className=\"writer-header\">\r\n          <h1> Writer Page </h1>\r\n          <p>\r\n            <em>{name}</em>\r\n          </p>\r\n          <hr></hr>\r\n        </div>\r\n\r\n        <Modal\r\n          isOpen={modalIsOpen}\r\n          onRequestClose={this.closeUploadModal.bind(this)}\r\n          contentLabel=\"Upload Modal\"\r\n        >\r\n          <FileUpload callback={this.onUploadSubmit.bind(this)}></FileUpload>\r\n        </Modal>\r\n\r\n        <div className=\"letters\">\r\n          <h3> Letters </h3>\r\n          <div>{lettersList}</div>\r\n          <hr></hr>\r\n        </div>\r\n\r\n        <div className=\"sentLetters\">\r\n          <h3> History </h3>\r\n          <div>{sentLettersList}</div>\r\n          <hr></hr>\r\n        </div>\r\n\r\n        <div className=\"writer-footer\">\r\n          <p> Product of Team Gas</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Writer;\r\n","//import { BigNumber } from \"bignumber.js\";\r\n// import { TutorialToken } from \"./contract-types/TutorialToken\"; // import is correct\r\nimport React from \"react\";\r\nimport \"./Requestor.css\";\r\nimport User from \"../../interfaces/User.interface\";\r\nimport Letter from \"../../interfaces/Letter.interface\";\r\nimport SentLetter from \"../../interfaces/SentLetter.interface\";\r\n\r\nconst Web3 = require(\"web3\");\r\nexport let web3: typeof Web3;\r\n\r\n// need to fix\r\n// interface Dictionary<Letter> {\r\n//   [key: number]: Letter;\r\n// }\r\n\r\ninterface RequestorState {\r\n  // need to change into dictionary\r\n  letters: Letter[]; // letter table\r\n  sentLetters: SentLetter[]; // letter-recipient table\r\n  letterKey: number;\r\n}\r\n\r\nclass Requestor extends React.Component<User, RequestorState> {\r\n  constructor(props: User) {\r\n    super(props);\r\n    this.state = {\r\n      letters: [],\r\n      sentLetters: [],\r\n      letterKey: -1\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    // api call to get letters\r\n    this.setState({\r\n      letters: [\r\n        {\r\n          letter_id: 1,\r\n          writer: {\r\n            user_id: 101,\r\n            name: \"Mary Poppins\",\r\n            public_key: \"0x314159265358979323\"\r\n          },\r\n          requester: {\r\n            user_id: 102,\r\n            name: \"Simba\",\r\n            public_key: \"0xabcdefghijklmnop\"\r\n          },\r\n          letter_uploaded: false\r\n        }\r\n      ],\r\n      sentLetters: [\r\n        {\r\n          letter_id: 2,\r\n          writer: {\r\n            user_id: 1,\r\n            name: \"Mary Poppins\",\r\n            public_key: \"0x314159265358979323\"\r\n          },\r\n          requester: {\r\n            user_id: 103,\r\n            name: \"Curious George\",\r\n            public_key: \"0x142857142857142857\"\r\n          },\r\n          recipient: {\r\n            user_id: 104,\r\n            name: \"Elton John\",\r\n            public_key: \"0x101100101001101110100\"\r\n          }\r\n        },\r\n        {\r\n          letter_id: 2,\r\n          writer: {\r\n            user_id: 1,\r\n            name: \"Mary Poppins\",\r\n            public_key: \"0x314159265358979323\"\r\n          },\r\n          requester: {\r\n            user_id: 102,\r\n            name: \"Simba\",\r\n            public_key: \"0xabcdefghijklmnop\"\r\n          },\r\n          recipient: {\r\n            user_id: 103,\r\n            name: \"Curious George\",\r\n            public_key: \"0x142857142857142857\"\r\n          }\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  onViewClick(\r\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\r\n    key: number\r\n  ) {}\r\n\r\n  render() {\r\n    const { name, public_key, user_id } = this.props;\r\n    const { letters, sentLetters, letterKey } = this.state;\r\n\r\n    const lettersList = letters.map((l, key) => (\r\n      <div key={l.letter_id}>\r\n        <p>\r\n          <span>({l.letter_id})&nbsp;</span>\r\n          <span>From: {l.writer.name} </span>\r\n\r\n          <button\r\n            style={{ marginLeft: \"10px\", float: \"right\" }}\r\n            onClick={e => {\r\n              //this.onUploadClick(e, l.letter_id);\r\n            }}\r\n          >\r\n            send\r\n          </button>\r\n        </p>\r\n      </div>\r\n    ));\r\n\r\n    const sentLettersList = sentLetters.map((l, key) => (\r\n      <div key={l.letter_id + \"x\" + l.recipient.user_id}>\r\n        <p>\r\n          <span>({l.letter_id})&nbsp;</span>\r\n          <span>From: {l.writer.name}</span>\r\n\r\n          <button\r\n            style={{ marginLeft: \"10px\", float: \"right\" }}\r\n            onClick={e => {\r\n              this.onViewClick(e, l.letter_id);\r\n            }}\r\n          >\r\n            view\r\n          </button>\r\n          <span style={{ float: \"right\" }}>To: {l.recipient.name}</span>\r\n        </p>\r\n      </div>\r\n    ));\r\n\r\n    return (\r\n      <div className=\"requestor-wrap\">\r\n        <div className=\"requestor\">\r\n          <div className=\"requestor-header\">\r\n            <h1> Requestor Page </h1>\r\n            <p>\r\n              <em>{name}</em>\r\n            </p>\r\n            <hr></hr>\r\n          </div>\r\n\r\n          <div>\r\n            <h3> Request </h3>\r\n            <input placeholder=\"Writer Id\" />\r\n            <button\r\n              style={{ marginLeft: \"10px\", float: \"right\" }}\r\n              onClick={e => {\r\n                //this.onViewClick(e, l.letter_id);\r\n              }}\r\n            >\r\n              request\r\n            </button>\r\n            <hr></hr>\r\n          </div>\r\n\r\n          <div className=\"letters\">\r\n            <h3> Received Letters </h3>\r\n            <div>{lettersList}</div>\r\n            <hr></hr>\r\n          </div>\r\n\r\n          <div className=\"letters\">\r\n            <h3> Pending Letters </h3>\r\n            <div></div>\r\n            <hr></hr>\r\n          </div>\r\n\r\n          <div className=\"sentLetters\">\r\n            <h3> History </h3>\r\n            <div>{sentLettersList}</div>\r\n            <hr></hr>\r\n          </div>\r\n\r\n          <div className=\"requestor-footer\">\r\n            <p> Product of Team Gas</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Requestor;\r\n","//import { BigNumber } from \"bignumber.js\";\r\n// import { TutorialToken } from \"./contract-types/TutorialToken\"; // import is correct\r\nimport React from \"react\";\r\nimport User from \"../../interfaces/User.interface\";\r\nimport Letter from \"../../interfaces/Letter.interface\";\r\nimport \"./Recipient.css\";\r\n\r\nconst Web3 = require(\"web3\");\r\nexport let web3: typeof Web3;\r\n\r\ninterface RecipientState {\r\n  letters: Letter[];\r\n}\r\n\r\nclass Recipient extends React.Component<User, RecipientState> {\r\n  componentWillMount() {\r\n    // api call to get letters\r\n    this.setState({\r\n      letters: [\r\n        {\r\n          letter_id: 1,\r\n          writer: {\r\n            user_id: 101,\r\n            name: \"Mary Poppins\",\r\n            public_key: \"0x314159265358979323\"\r\n          },\r\n          requester: {\r\n            user_id: 102,\r\n            name: \"Simba\",\r\n            public_key: \"0xabcdefghijklmnop\"\r\n          },\r\n          letter_uploaded: false\r\n        },\r\n        {\r\n          letter_id: 2,\r\n          writer: {\r\n            user_id: 101,\r\n            name: \"Mary Poppins\",\r\n            public_key: \"0x314159265358979323\"\r\n          },\r\n          requester: {\r\n            user_id: 102,\r\n            name: \"Simba\",\r\n            public_key: \"0xabcdefghijklmnop\"\r\n          },\r\n          letter_uploaded: false\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  constructor(props: User) {\r\n    super(props);\r\n    this.state = {\r\n      letters: []\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { name, public_key, user_id } = this.props;\r\n    const { letters } = this.state;\r\n\r\n    const lettersList = letters.map((l, key) => (\r\n      <div key={l.letter_id}>\r\n        <p>\r\n          <span>({l.letter_id})&nbsp;</span>\r\n          <span>For: {l.requester.name} </span>\r\n          <button\r\n            style={{ marginLeft: \"10px\", float: \"right\" }}\r\n            // onClick={(e) => {\r\n            //   this.onViewClick(e, l.letter_id);\r\n            // }}\r\n          >\r\n            view\r\n          </button>\r\n          <span className=\"from\">From: {l.writer.name}</span>\r\n        </p>\r\n      </div>\r\n    ));\r\n    return (\r\n      <div className=\"recipient\">\r\n        <div className=\"recipient-header\">\r\n          <h1> Recipient Page </h1>\r\n          <p>\r\n            <em>{name}</em>\r\n          </p>\r\n          <hr></hr>\r\n        </div>\r\n\r\n        <div className=\"letters\">\r\n          <h3> Letters </h3>\r\n          <div>{lettersList}</div>\r\n          <hr></hr>\r\n        </div>\r\n\r\n        <div className=\"recipient-footer\">\r\n          <p> Product of Team Gas</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Recipient;\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BigNumber } from \"bignumber.js\";\r\n//import * as TruffleContracts from \".\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\n// const Web3 = require('web3');\r\n\r\n// let web3: typeof Web3\r\n// let web3Provider;\r\n//web3 = new Web3(new Web3.providers.HttpProvider('http://127.0.0.1:9545')); // was 9545 before\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n );\r\n\r\n\r\n"],"sourceRoot":""}