{"version":3,"sources":["components/navbar/Nav.tsx","common/routes.tsx","components/pages/home/Home.tsx","interfaces/LetterCategory.enum.ts","components/file-upload/FileUpload.tsx","components/file-view/FileView.tsx","components/pages/writer/Writer.tsx","components/pages/requestor/Requestor.tsx","components/pages/recipient/Recipient.tsx","components/pages/login/Login.tsx","components/pages/dashboard/Dashboard.tsx","App.tsx","index.tsx"],"names":["Nav","props","onConnect","bind","this","brandLink","loggedIn","Navbar","bg","variant","Brand","onClick","href","Toggle","Collapse","className","connectedTo","Button","Text","user","publicAddress","Dropdown","id","Menu","alignRight","to","style","textDecoration","Item","React","Component","headers","Headers","set","LetterCategory","Home","state","FileUpload","file","File","displayMessage","initialDisplayMessage","onFormSubmit","onChange","console","log","size","setState","restrictPdf","type","fetchUrl","fileUploadToServer","onUpload","e","target","files","fileForm","FormData","append","fetch","process","REACT_APP_BACKEND_URL","body","jwtToken","method","then","response","json","status","changeDisplayMessage","catch","newDisplayMessage","Form","onSubmit","Group","onClose","FileView","letterUrl","reader","FileReader","readAsDataURL","letter","contents","onload","result","setTimeout","src","width","height","Writer","uploadModal","createRef","viewModal","letters","sentLetters","viewIsOpen","uploadIsOpen","selectedLetterKey","selectedLetterId","selectedLetterCategory","invalid","letter_id","writer","name","email","requestor","recipient","key","cat","newLetters","newSentLetters","i","length","uploadToServer","closeUploadModal","current","lettersList","map","l","k","Row","disabled","openViewModal","openUploadModal","sentLettersList","Modal","show","onHide","backdrop","animation","Header","closeButton","Title","getCorrectUserName","Body","ref","onUploadSubmit","closeViewModal","scrollable","getCorrectLetter","Container","fluid","Requestor","letterKey","placeholder","Recipient","Login","inputName","loginMode","handleInputChange","onLoginClick","signMessage","authenticate","signup","err","init","users","Promise","reject","JSON","stringify","nonce","resolve","web3","eth","personal","sign","utils","utf8ToHex","signature","u","j","get","undefined","callback","event","value","loginDisplay","toggleMode","signupDisplay","onSignupClick","accounts","web3Provider","Dashboard","App","numErcBeingTraded","contract","onLogin","methods","rate","call","BN","ethereum","window","enable","currentProvider","Web3","request","home","login","dashboard","exact","path","render","ReactDOM","document","getElementById"],"mappings":"it9FAwHeA,G,mBArGb,WAAYC,GAAa,IAAD,8BACtB,4CAAMA,KACDC,UAAY,EAAKA,UAAUC,KAAf,gBAFK,E,yEAOtBC,KAAKH,MAAMC,c,+BAGH,IAAD,OACDG,EAAYD,KAAKH,MAAMK,SAAW,aAAe,IACvD,OACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,QACxB,kBAACF,EAAA,EAAOG,MAAR,CACEC,QAAS,WACP,OAAO,GAETC,KAAMP,GAEL,IANH,6BASA,kBAACE,EAAA,EAAOM,OAAR,MACA,kBAACN,EAAA,EAAOO,SAAR,CAAiBC,UAAU,wBACvBX,KAAKH,MAAMe,aACX,kBAACC,EAAA,EAAD,CACEF,UAAU,UACVJ,QAAS,WACP,EAAKT,cAHT,WASDE,KAAKH,MAAMe,aACV,kBAACT,EAAA,EAAOW,KAAR,CAAaH,UAAU,WAAvB,gBACgB,IACd,2BACGX,KAAKH,MAAMe,YAAcZ,KAAKH,MAAMkB,KAAKC,cAAgB,QAKlE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAASR,OAAV,CAAiBJ,QAAQ,YAAYa,GAAG,kBAAxC,QAGClB,KAAKH,MAAMe,aACV,kBAACK,EAAA,EAASE,KAAV,CAAeC,YAAY,GACzB,kBAAC,IAAD,CAAMC,GCrEA,IDqEiBC,MAAO,CAAEC,eAAgB,SAC9C,4BACE,kBAACN,EAAA,EAASO,KAAV,CAAehB,KAAK,cAApB,UAQJ,kBAAC,IAAD,CAAMa,GC7EK,aD6EiBC,MAAO,CAAEC,eAAgB,SACnD,4BACE,kBAACN,EAAA,EAASO,KAAV,CAAehB,KAAK,cAApB,eAGJ,kBAAC,IAAD,CAAMa,GChFK,aDgFiBC,MAAO,CAAEC,eAAgB,SACnD,4BACE,kBAACN,EAAA,EAASO,KAAV,CAAehB,KAAK,cAApB,eAGJ,kBAAC,IAAD,CAAMa,GCpFE,UDoFiBC,MAAO,CAAEC,eAAgB,SAChD,4BACE,kBAACN,EAAA,EAASO,KAAV,CAAehB,KAAK,cAApB,YAGJ,kBAAC,IAAD,CAAMa,GC3FK,aD2FiBC,MAAO,CAAEC,eAAgB,SACnD,4BACE,kBAACN,EAAA,EAASO,KAAV,CAAehB,KAAK,cAApB,iBAKNR,KAAKH,MAAMe,aACX,kBAACK,EAAA,EAASE,KAAV,CAAeC,YAAY,GACzB,kBAAC,IAAD,CAAMC,GCvGA,IDuGiBC,MAAO,CAAEC,eAAgB,SAC9C,4BACE,kBAACN,EAAA,EAASO,KAAV,CAAehB,KAAK,cAApB,UAGJ,kBAAC,IAAD,CAAMa,GC3GC,SD2GiBC,MAAO,CAAEC,eAAgB,SAC/C,4BACE,kBAACN,EAAA,EAASO,KAAV,CAAehB,KAAK,cAApB,kB,GA5FAiB,IAAMC,YEdlBC,G,OAAU,IAAIC,SACpBD,EAAQE,IAAI,8BAA+B,KAC3CF,EAAQE,IAAI,eAAgB,oB,ICNvBC,EDgCUC,E,YAjBb,WAAYlC,GAAmB,IAAD,8BAC5B,4CAAMA,KACDmC,MAAQ,GAFe,E,sEAQ5B,OACE,6BACE,yBAAKrB,UAAU,QAAf,a,GAXWc,IAAMC,W,2CCdpBI,O,qBAAAA,I,6BAAAA,I,sBAAAA,M,KAIYA,Q,QCkHFG,G,mBAlGb,WAAYpC,GAAyB,IAAD,8BAClC,4CAAMA,KACDmC,MAAQ,CACXE,KAAM,IAAIC,KAAK,GAAI,IACnBC,eAAgB,EAAKvC,MAAMwC,sBAAwB,EAAKxC,MAAMwC,sBAAwB,IAExF,EAAKC,aAAe,EAAKA,aAAavC,KAAlB,gBACpB,EAAKwC,SAAW,EAAKA,SAASxC,KAAd,gBAPkB,E,4EAclC,GADAyC,QAAQC,IAAIzC,KAAKgC,MAAME,MACnBlC,KAAKgC,MAAME,MAAiC,IAAzBlC,KAAKgC,MAAME,KAAKQ,KACrCF,QAAQC,IAAI,oBACZzC,KAAK2C,SAAS,CAAEP,eAAgB,2BAC3B,GAAIpC,KAAKH,MAAM+C,aAAuC,mBAAxB5C,KAAKgC,MAAME,KAAKW,KACnDL,QAAQC,IAAI,aACZzC,KAAK2C,SAAS,CAAEP,eAAgB,oCAC3B,CAAC,IAAD,EACLI,QAAQC,IAAI,iCACZ,UAAIzC,KAAKH,aAAT,aAAI,EAAYiD,UAAU9C,KAAK+C,mBAAmB/C,KAAKgC,MAAME,MACxDlC,KAAKH,MAAMmD,SAAShD,KAAKgC,MAAME,S,+BAI/Be,GACPT,QAAQC,IAAI,gBACZzC,KAAK2C,SAAS,CAAET,KAAMe,EAAEC,OAAOC,MAAM,O,yCAGpBjB,GAAa,IAAD,OAC7BM,QAAQC,IAAI,0BACZ,IAAIW,EAAqB,IAAIC,SAC7BD,EAASE,OAAO,OAAQpB,GAExBqB,MAAM,UAAGC,mHAAYC,uBAA0BzD,KAAKH,MAAMiD,SAAU,CAClEY,KAAMN,EACNzB,QAAS,CACP,eAAgB,sBAChBgC,SAAU3D,KAAKH,MAAMkB,KAAK4C,UAE5BC,OAAQ,SAEPC,MAAK,SAACC,GACLtB,QAAQC,IAAIqB,EAASC,MACrBvB,QAAQC,IAAIqB,EAASE,QACG,MAApBF,EAASE,OACX,EAAKnE,MAAMmD,SAASd,GAEpB,EAAK+B,qBAAqB,sCAG7BC,OAAM,SAACjB,GACNT,QAAQC,IAAIQ,Q,2CAIGkB,GACnBnE,KAAK2C,SAAS,CAACP,eAAgB+B,M,+BAGvB,IAAD,OACD/B,EAAiBpC,KAAKgC,MAAMI,eAClC,OACE,kBAACgC,EAAA,EAAD,CAAMC,SAAUrE,KAAKsC,aAAavC,KAAKC,OACrC,kBAACoE,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKjC,KAAN,CAAWjB,GAAG,aAAaqB,SAAUvC,KAAKuC,WAC1C,6BACE,yBAAK5B,UAAU,mBAAf,IAAmCyB,EAAnC,KACA,kBAACvB,EAAA,EAAD,CACEF,UAAU,cACVJ,QAAS,SAAC0C,GACR,EAAKpD,MAAM0E,YAHf,SAQA,kBAAC1D,EAAA,EAAD,CACEF,UAAU,cAEVJ,QAASP,KAAKsC,cAHhB,iB,GAhFab,IAAMC,YCuChB8C,G,mBAxCb,WAAY3E,GAAuB,IAAD,uBAChC,4CAAMA,KACDmC,MAAQ,CAAEyC,UAAW,MAC1B,IAAIC,EAAS,IAAIC,WAHe,OAIhCD,EAAOE,cAAc,EAAK/E,MAAMgF,OAAOC,UACvCJ,EAAOK,OAAS,SAAC9B,GAEf,EAAKN,SAAS,CAAE8B,UAAWC,EAAOM,UAEpCC,YAAW,kBACTzC,QAAQC,IAAI,EAAK5C,MAAMgF,OAAOC,SAASjC,QACvC,KAX8B,E,8GAgBxB,IAAD,OACP,OACE,6BACE,6BACE,2BACEA,KAAM7C,KAAKH,MAAMgF,OAAOC,SAASjC,KACjCqC,IAAKlF,KAAKgC,MAAMyC,UAChBU,MAAM,OACNC,OAAO,WAGX,kBAACvE,EAAA,EAAD,CACEF,UAAU,cACVJ,QAAS,SAAC0C,GACR,EAAKpD,MAAM0E,YAHf,c,GA5Be9C,IAAMC,YCwZd2D,G,mBA3Sb,WAAYxF,GAAqB,IAAD,8BAC9B,4CAAMA,KA5FAyF,YAAc7D,IAAM8D,YA2FI,EA1FxBC,UAAY/D,IAAM8D,YA4FxB,EAAKvD,MAAQ,CACXyD,QAAS,GACTC,YAAa,GACbC,YAAY,EACZC,cAAc,EACdC,mBAAoB,EACpBC,kBAAmB,EACnBC,uBAAwBjE,EAAekE,SATX,E,kFArF9BxD,QAAQC,IAAI,sBACZzC,KAAK2C,SAAS,CACZ8C,QAAS,CACP,CACEQ,UAAW,EACXC,OAAQ,CACNC,KAAM,eACNnF,cAAe,uBACfoF,MAAO,GACPzC,SAAU,IAEZ0C,UAAW,CACTF,KAAM,QACNnF,cAAe,qBACfoF,MAAO,GACPzC,SAAU,IAEZmB,SAAU,IAAI3C,KAAK,GAAI,KAEzB,CACE8D,UAAW,EACXC,OAAQ,CACNC,KAAM,eACNnF,cAAe,uBACfoF,MAAO,GACPzC,SAAU,IAEZ0C,UAAW,CACTF,KAAM,iBACNnF,cAAe,uBACfoF,MAAO,GACPzC,SAAU,IAEZmB,SAAU,IAAI3C,KAAK,GAAI,MAG3BuD,YAAa,CACX,CACEO,UAAW,EACXC,OAAQ,CACNC,KAAM,eACNnF,cAAe,uBACfoF,MAAO,GACPzC,SAAU,IAEZ0C,UAAW,CACTF,KAAM,QACNnF,cAAe,qBACfoF,MAAO,GACPzC,SAAU,IAEZ2C,UAAW,CACTH,KAAM,aACNnF,cAAe,0BACfoF,MAAO,GACPzC,SAAU,IAEZmB,SAAU,IAAI3C,KAAK,GAAI,KAEzB,CACE8D,UAAW,EACXC,OAAQ,CACNC,KAAM,eACNnF,cAAe,uBACfoF,MAAO,GACPzC,SAAU,IAEZ0C,UAAW,CACTF,KAAM,QACNnF,cAAe,qBACfoF,MAAO,GACPzC,SAAU,IAEZ2C,UAAW,CACTH,KAAM,iBACNnF,cAAe,uBACfoF,MAAO,GACPzC,SAAU,IAEZmB,SAAU,IAAI3C,KAAK,GAAI,Y,qDAmBfoE,EAAaC,GAC3BhE,QAAQC,IAAI,wBACZD,QAAQC,IAAI+D,EAAKD,GACbC,IAAQ1E,EAAe2D,QACzBzF,KAAK2C,SAAS,CACZiD,cAAc,EACdC,kBAAmBU,EACnBT,iBAAkB9F,KAAKgC,MAAMyD,QAAQc,GAAKN,UAC1CF,uBAAwBS,IAEjBA,IAAQ1E,EAAe4D,aAChC1F,KAAK2C,SAAS,CACZiD,cAAc,EACdC,kBAAmBU,EACnBT,iBAAkB9F,KAAKgC,MAAM0D,YAAYa,GAAKN,UAC9CF,uBAAwBS,M,yCAM5BhE,QAAQC,IAAI,wBACZzC,KAAK2C,SAAS,CAAEiD,cAAc,M,qCAGjB1D,GAAa,IAAD,OACzBM,QAAQC,IAAIP,GACZM,QAAQC,IAAI,kBAKZ,IAAIgE,EAAU,YAAOzG,KAAKgC,MAAMyD,SAChCgB,EAAWzG,KAAKgC,MAAM6D,mBAAmBf,SAAW5C,EAEpD,IADA,IAAIwE,EAAc,YAAO1G,KAAKgC,MAAM0D,aAC3BiB,EAAI,EAAGA,EAAID,EAAeE,OAAQD,IACrCD,EAAeC,GAAGV,YAAcjG,KAAKgC,MAAM8D,mBAC7CY,EAAeC,GAAG7B,SAAW5C,GAKjCM,QAAQC,IAAI,cACZD,QAAQC,IAAIgE,GAEZzG,KAAK2C,SAAS,CACZ8C,QAASgB,EACTf,YAAagB,IAGflE,QAAQC,IAAI,iBACZwC,YAAW,WACTzC,QAAQC,IAAI,EAAKT,MAAMyD,WACtB,KAEH,IAAI3C,EACF,cACA9C,KAAKH,MAAMkB,KAAKC,cAChB,YACAhB,KAAKgC,MAAM8D,iBACX,WACF9F,KAAK6G,eAAe3E,EAAMY,K,qCAGbZ,EAAYY,GAAmB,IAAD,OACvCM,EAAqB,IAAIC,SAC7BD,EAASE,OAAO,OAAQpB,GAExBqB,MAAM,UAAGC,mHAAYC,uBAA0BX,EAAU,CACvDY,KAAMN,EACNzB,QAAS,CACP,eAAgB,sBAChBgC,SAAU3D,KAAKH,MAAMkB,KAAK4C,UAE5BC,OAAQ,SAEPC,MAAK,SAACC,GACLtB,QAAQC,IAAIqB,EAASE,QACG,MAApBF,EAASE,OACX,EAAK8C,mBAEL,EAAKxB,YAAYyB,QAAS9C,qBACxB,sCAILC,OAAM,SAACjB,GACNT,QAAQC,IAAIQ,Q,oCAIJsD,EAAaC,GACzBhE,QAAQC,IAAI,sBACZD,QAAQC,IAAI+D,EAAKD,GACbC,IAAQ1E,EAAe2D,QACzBzF,KAAK2C,SAAS,CACZgD,YAAY,EACZE,kBAAmBU,EACnBT,iBAAkB9F,KAAKgC,MAAMyD,QAAQc,GAAKN,UAC1CF,uBAAwBS,IAEjBA,IAAQ1E,EAAe4D,aAChC1F,KAAK2C,SAAS,CACZgD,YAAY,EACZE,kBAAmBU,EACnBT,iBAAkB9F,KAAKgC,MAAM0D,YAAYa,GAAKN,UAC9CF,uBAAwBS,M,uCAM5BhE,QAAQC,IAAI,sBACZzC,KAAK2C,SAAS,CAAEgD,YAAY,M,2CAIuC,IAAD,EAIhE,EAJF,OAAI3F,KAAKgC,MAAM+D,yBAA2BjE,EAAe2D,QACvD,UAAOzF,KAAKgC,MAAMyD,QAAQzF,KAAKgC,MAAM6D,0BAArC,aAAO,EAAkDQ,UAAUF,KAEnEnG,KAAKgC,MAAM+D,yBAA2BjE,EAAe4D,YAErD,UAAO1F,KAAKgC,MAAM0D,YAAY1F,KAAKgC,MAAM6D,0BAAzC,aAAO,EAAsDQ,UAC1DF,KAEE,K,yCAIP,OAAInG,KAAKgC,MAAM+D,yBAA2BjE,EAAe2D,QAChDzF,KAAKgC,MAAMyD,QAAQzF,KAAKgC,MAAM6D,mBAE9B7F,KAAKgC,MAAM0D,YAAY1F,KAAKgC,MAAM6D,qB,+BAInC,IAAD,OACCM,EAASnG,KAAKH,MAAMkB,KAApBoF,KADD,EAQHnG,KAAKgC,MALPyD,EAHK,EAGLA,QACAC,EAJK,EAILA,YACAE,EALK,EAKLA,aACAD,EANK,EAMLA,WACAG,EAPK,EAOLA,iBAGIkB,EAAcvB,EAAQwB,KAAI,SAACC,EAAGC,GAAJ,OAC9B,kBAACC,EAAA,EAAD,CAAKb,IAAKY,GACR,yBAAKxG,UAAU,cACb,0BAAMA,UAAU,mBAAhB,IAAoCuG,EAAEjB,UAAtC,SACA,0BAAMtF,UAAU,mBAAhB,QAAwCuG,EAAEb,UAAUF,MACpD,kBAACtF,EAAA,EAAD,CACEwG,SAA8B,IAApBH,EAAEpC,SAASpC,KACrB/B,UAAU,0BACVJ,QAAS,WACP,EAAK+G,cAAcH,EAAGrF,EAAe2D,WAJzC,QAUA,kBAAC5E,EAAA,EAAD,CACEF,UAAU,0BACVJ,QAAS,WACP,EAAKgH,gBAAgBJ,EAAGrF,EAAe2D,WAH3C,eAYA+B,EAAkB9B,EAAYuB,KAAI,SAACC,EAAGC,GAAJ,OACtC,kBAACC,EAAA,EAAD,CAAKb,IAAKY,GACR,yBAAKxG,UAAU,cACb,0BAAMA,UAAU,mBAAhB,IAAoCuG,EAAEjB,UAAtC,SACA,0BAAMtF,UAAU,mBAAhB,QAAwCuG,EAAEb,UAAUF,MAEpD,kBAACtF,EAAA,EAAD,CACEwG,SAA8B,IAApBH,EAAEpC,SAASpC,KACrB/B,UAAU,0BACVJ,QAAS,WACP,EAAK+G,cAAcH,EAAGrF,EAAe4D,eAJzC,QASA,0BAAM/E,UAAU,oBAAhB,OAAwCuG,EAAEZ,UAAUH,WAK1D,OACE,yBAAKjF,GAAG,SAASP,UAAU,UACzB,kBAAC8G,EAAA,EAAD,CACEvG,GAAG,eACHwG,KAAM9B,EACN+B,OAAQ3H,KAAK8G,iBAAiB/G,KAAKC,MACnC4H,SAAS,SACTlF,KAAK,KACLmF,WAAW,GAEX,kBAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,GACvB,kBAACN,EAAA,EAAMO,MAAP,KACGhI,KAAKiI,qBADR,KACgCnC,EADhC,MAKF,kBAAC2B,EAAA,EAAMS,KAAP,KACE,kBAAC,EAAD,CACEC,IAAKnI,KAAKsF,YACVvE,KAAMf,KAAKH,MAAMkB,KACjB6B,aAAa,EAQbI,SAAUhD,KAAKoI,eAAerI,KAAKC,MACnCuE,QAASvE,KAAK8G,iBAAiB/G,KAAKC,UAK1C,kBAACyH,EAAA,EAAD,CACEvG,GAAG,aACHwG,KAAM/B,EACNgC,OAAQ3H,KAAKqI,eAAetI,KAAKC,MACjC4H,SAAS,SACTC,WAAW,EACXlH,UAAU,QACV2H,YAAY,EACZ5F,KAAK,MAEL,kBAAC+E,EAAA,EAAMK,OAAP,CAAcC,aAAW,GACvB,kBAACN,EAAA,EAAMO,MAAP,KACGhI,KAAKiI,qBADR,KACgCnC,EADhC,MAKF,kBAAC2B,EAAA,EAAMS,KAAP,KACE,kBAAC,EAAD,CACEC,IAAKnI,KAAKwF,UACVzE,KAAMf,KAAKH,MAAMkB,KACjB8D,OAAQ7E,KAAKuI,mBAQbhE,QAASvE,KAAKqI,eAAetI,KAAKC,UAIxC,yBAAKW,UAAU,iBACb,6CACA,2BACE,4BAAKwF,IAEP,8BAGF,yBAAKxF,UAAU,WACb,yCACA,kBAAC6H,EAAA,EAAD,CAAWC,OAAK,GAAEzB,GAClB,8BAGF,yBAAKrG,UAAU,eACb,yCACA,kBAAC6H,EAAA,EAAD,CAAWC,OAAK,GAAEjB,GAClB,8BAGF,yBAAK7G,UAAU,iBACb,yD,GAjYWc,IAAMC,YCmPZgH,G,mBA3Kb,WAAY7I,GAAwB,IAAD,8BACjC,4CAAMA,KAzEA2F,UAAY/D,IAAM8D,YA0ExB,EAAKvD,MAAQ,CACXyD,QAAS,GACTC,YAAa,GACbiD,WAAY,EACZhD,YAAY,EACZE,mBAAoB,EACpBC,kBAAmB,EACnBC,uBAAwBjE,EAAekE,SATR,E,kFApEjChG,KAAK2C,SAAS,CACZ8C,QAAS,CACP,CACEQ,UAAW,EACXC,OAAQ,CACNC,KAAM,eACNnF,cAAe,uBACfoF,MAAO,GACPzC,SAAU,IAEZ0C,UAAW,CACTF,KAAM,QACNnF,cAAe,qBACfoF,MAAO,GACPzC,SAAU,IAEZmB,SAAU,IAAI3C,KAAK,GAAI,MAG3BuD,YAAa,CACX,CACEO,UAAW,EACXC,OAAQ,CACNC,KAAM,eACNnF,cAAe,uBACfoF,MAAO,GACPzC,SAAU,IAEZ0C,UAAW,CACTF,KAAM,iBACNnF,cAAe,uBACfoF,MAAO,GACPzC,SAAU,IAEZ2C,UAAW,CACTH,KAAM,aACNnF,cAAe,0BACfoF,MAAO,GACPzC,SAAU,IAEZmB,SAAU,IAAI3C,KAAK,GAAI,KAEzB,CACE8D,UAAW,EACXC,OAAQ,CACNC,KAAM,eACNnF,cAAe,uBACfoF,MAAO,GACPzC,SAAU,IAEZ0C,UAAW,CACTF,KAAM,QACNnF,cAAe,qBACfoF,MAAO,GACPzC,SAAU,IAEZ2C,UAAW,CACTH,KAAM,iBACNnF,cAAe,uBACfoF,MAAO,GACPzC,SAAU,IAEZmB,SAAU,IAAI3C,KAAK,GAAI,Y,sDAoB7BK,QAAQC,IAAI,sBACZzC,KAAK2C,SAAS,CAAEgD,YAAY,M,oCAGhBY,EAAaC,GACzBhE,QAAQC,IAAI,sBACZD,QAAQC,IAAI+D,EAAKD,GACbC,IAAQ1E,EAAe2D,QACzBzF,KAAK2C,SAAS,CACZgD,YAAY,EACZE,kBAAmBU,EACnBT,iBAAkB9F,KAAKgC,MAAMyD,QAAQc,GAAKN,UAC1CF,uBAAwBS,IAEjBA,IAAQ1E,EAAe4D,aAChC1F,KAAK2C,SAAS,CACZgD,YAAY,EACZE,kBAAmBU,EACnBT,iBAAkB9F,KAAKgC,MAAM0D,YAAYa,GAAKN,UAC9CF,uBAAwBS,M,2CAMuC,IAAD,EAIhE,EAJF,OAAIxG,KAAKgC,MAAM+D,yBAA2BjE,EAAe2D,QACvD,UAAOzF,KAAKgC,MAAMyD,QAAQzF,KAAKgC,MAAM6D,0BAArC,aAAO,EAAkDQ,UAAUF,KAEnEnG,KAAKgC,MAAM+D,yBAA2BjE,EAAe4D,YAErD,UAAO1F,KAAKgC,MAAM0D,YAAY1F,KAAKgC,MAAM6D,0BAAzC,aAAO,EAAsDQ,UAC1DF,KAEE,K,yCAIP,OAAInG,KAAKgC,MAAM+D,yBAA2BjE,EAAe2D,QAChDzF,KAAKgC,MAAMyD,QAAQzF,KAAKgC,MAAM6D,mBAE9B7F,KAAKgC,MAAM0D,YAAY1F,KAAKgC,MAAM6D,qB,+BAInC,IAAD,OACCM,EAASnG,KAAKH,MAAMkB,KAApBoF,KADD,EAEwDnG,KAAKgC,MAA5DyD,EAFD,EAECA,QAASC,EAFV,EAEUA,YAAaC,EAFvB,EAEuBA,WAAYG,EAFnC,EAEmCA,iBAEpCkB,EAAcvB,EAAQwB,KAAI,SAACC,EAAGC,GAAJ,OAC9B,kBAACC,EAAA,EAAD,CAAKb,IAAKY,GACR,yBAAKxG,UAAU,cACb,0BAAMA,UAAU,mBAAhB,IAAoCuG,EAAEjB,UAAtC,SACA,0BAAMtF,UAAU,mBAAhB,SAAyCuG,EAAEhB,OAAOC,MAClD,kBAACtF,EAAA,EAAD,CACEwG,SAA8B,IAApBH,EAAEpC,SAASpC,KACrB/B,UAAU,0BACVJ,QAAS,WACP,EAAK+G,cAAcH,EAAGrF,EAAe2D,WAJzC,aAaA+B,EAAkB9B,EAAYuB,KAAI,SAACC,EAAGC,GAAJ,OACtC,kBAACC,EAAA,EAAD,CAAKb,IAAKY,GACR,yBAAKxG,UAAU,cACb,0BAAMA,UAAU,mBAAhB,IAAoCuG,EAAEjB,UAAtC,SACA,0BAAMtF,UAAU,mBAAhB,SAAyCuG,EAAEhB,OAAOC,MAElD,kBAACtF,EAAA,EAAD,CACEwG,SAA8B,IAApBH,EAAEpC,SAASpC,KACrB/B,UAAU,0BACVJ,QAAS,WACP,EAAK+G,cAAcH,EAAGrF,EAAe4D,eAJzC,QASA,0BAAM/E,UAAU,oBAAhB,OAAwCuG,EAAEZ,UAAUH,WAK1D,OACE,yBAAKxF,UAAU,aACb,kBAAC8G,EAAA,EAAD,CACEvG,GAAG,aACHwG,KAAM/B,EACNgC,OAAQ3H,KAAKqI,eAAetI,KAAKC,MACjC4H,SAAS,SACTC,WAAW,EACXlH,UAAU,QACV2H,YAAY,GAGZ,kBAACb,EAAA,EAAMK,OAAP,CAAcC,aAAW,GACvB,kBAACN,EAAA,EAAMO,MAAP,KACGhI,KAAKiI,qBADR,KACgCnC,EADhC,MAKF,kBAAC2B,EAAA,EAAMS,KAAP,KACE,kBAAC,EAAD,CACEC,IAAKnI,KAAKwF,UACVzE,KAAMf,KAAKH,MAAMkB,KACjB8D,OAAQ7E,KAAKuI,mBAQbhE,QAASvE,KAAKqI,eAAetI,KAAKC,UAKxC,yBAAKW,UAAU,oBACb,gDACA,2BACE,4BAAKwF,IAEP,8BAGF,6BACE,yCACA,2BAAOyC,YAAY,cACnB,kBAAC/H,EAAA,EAAD,CAAQF,UAAU,0BAA0BJ,QAAS,cAArD,WAGA,8BAGF,yBAAKI,UAAU,WACb,yCACA,kBAAC6H,EAAA,EAAD,CAAWC,OAAK,GAAEzB,GAClB,8BAGF,yBAAKrG,UAAU,eACb,yCACA,kBAAC6H,EAAA,EAAD,CAAWC,OAAK,GAAEjB,GAClB,8BAGF,yBAAK7G,UAAU,oBACb,yD,GA/Occ,IAAMC,YCmKfmH,G,mBA/Hb,WAAYhJ,GAAwB,IAAD,8BACjC,4CAAMA,KA3CA2F,UAAY/D,IAAM8D,YA4CxB,EAAKvD,MAAQ,CACXyD,QAAS,GACTE,YAAY,EACZE,mBAAoB,EACpBC,kBAAmB,EACnBC,uBAAwBjE,EAAekE,SAPR,E,kFAtCjChG,KAAK2C,SAAS,CACZ8C,QAAS,CACP,CACEQ,UAAW,EACXC,OAAQ,CACNC,KAAM,eACNnF,cAAe,uBACfoF,MAAO,GACPzC,SAAU,IAEZ0C,UAAW,CACTF,KAAM,QACNnF,cAAe,qBACfoF,MAAO,GACPzC,SAAU,IAEZmB,SAAU,IAAI3C,KAAK,GAAI,KAEzB,CACE8D,UAAW,EACXC,OAAQ,CACNC,KAAM,eACNnF,cAAe,uBACfoF,MAAO,GACPzC,SAAU,IAEZ0C,UAAW,CACTF,KAAM,QACNnF,cAAe,qBACfoF,MAAO,GACPzC,SAAU,IAEZmB,SAAU,IAAI3C,KAAK,GAAI,Y,sDAkB7BK,QAAQC,IAAI,sBACZzC,KAAK2C,SAAS,CAAEgD,YAAY,M,oCAGhBY,EAAaC,GACzBhE,QAAQC,IAAI,sBACZD,QAAQC,IAAI+D,EAAKD,GACbC,IAAQ1E,EAAe2D,QACzBzF,KAAK2C,SAAS,CACZgD,YAAY,EACZE,kBAAmBU,EACnBT,iBAAkB9F,KAAKgC,MAAMyD,QAAQc,GAAKN,UAC1CF,uBAAwBS,IAG1BhE,QAAQC,IAAI,+B,2CAKqD,IAAD,EAAlE,OAAIzC,KAAKgC,MAAM+D,yBAA2BjE,EAAe2D,QACvD,UAAOzF,KAAKgC,MAAMyD,QAAQzF,KAAKgC,MAAM6D,0BAArC,aAAO,EAAkDQ,UAAUF,UAEnE3D,QAAQC,IAAI,+B,yCAMd,OAAIzC,KAAKgC,MAAM+D,yBAA2BjE,EAAe2D,QAChDzF,KAAKgC,MAAMyD,QAAQzF,KAAKgC,MAAM6D,wBAErCrD,QAAQC,IAAI,+B,+BAKN,IAAD,OACC0D,EAASnG,KAAKH,MAAMkB,KAApBoF,KADD,EAE2CnG,KAAKgC,MAA/CyD,EAFD,EAECA,QAASE,EAFV,EAEUA,WAAYG,EAFtB,EAEsBA,iBAEvBkB,EAAcvB,EAAQwB,KAAI,SAACC,EAAGC,GAAJ,OAC9B,kBAACC,EAAA,EAAD,CAAKb,IAAKY,GACR,yBAAKxG,UAAU,cACb,0BAAMA,UAAU,mBAAhB,IAAoCuG,EAAEjB,UAAtC,SACA,0BAAMtF,UAAU,mBAAhB,QAAwCuG,EAAEb,UAAUF,MACpD,kBAACtF,EAAA,EAAD,CACEwG,SAA8B,IAApBH,EAAEpC,SAASpC,KACrB/B,UAAU,0BACVJ,QAAS,WACP,EAAK+G,cAAcH,EAAGrF,EAAe2D,WAJzC,aAaN,OACE,yBAAK9E,UAAU,aACb,kBAAC8G,EAAA,EAAD,CACEvG,GAAG,aACHwG,KAAM/B,EACNgC,OAAQ3H,KAAKqI,eAAetI,KAAKC,MACjC4H,SAAS,SACTC,WAAW,EACXlH,UAAU,QACV2H,YAAY,GAGZ,kBAACb,EAAA,EAAMK,OAAP,CAAcC,aAAW,GACvB,kBAACN,EAAA,EAAMO,MAAP,KACGhI,KAAKiI,qBADR,KACgCnC,EADhC,MAKF,kBAAC2B,EAAA,EAAMS,KAAP,KACE,kBAAC,EAAD,CACEC,IAAKnI,KAAKwF,UACVzE,KAAMf,KAAKH,MAAMkB,KACjB8D,OAAQ7E,KAAKuI,mBAQbhE,QAASvE,KAAKqI,eAAetI,KAAKC,UAKxC,yBAAKW,UAAU,oBACb,gDACA,2BACE,4BAAKwF,IAEP,8BAGF,yBAAKxF,UAAU,WACb,yCACA,kBAAC6H,EAAA,EAAD,CAAWC,OAAK,GAAEzB,GAClB,8BAGF,yBAAKrG,UAAU,oBACb,yD,GApKcc,IAAMC,YCnBxBC,G,OAAU,IAAIC,SACpBD,EAAQE,IAAI,8BAA+B,KAC3CF,EAAQE,IAAI,eAAgB,oB,IA+SbiH,E,YAjSb,WAAYjJ,GAAoB,IAAD,8BAC7B,4CAAMA,KACDmC,MAAQ,CACX+G,UAAW,GACX3G,eAAgB,GAChB4G,WAAW,GAGb,EAAKC,kBAAoB,EAAKA,kBAAkBlJ,KAAvB,gBACzB,EAAKmJ,aAAe,EAAKA,aAAanJ,KAAlB,gBACpB,EAAKoJ,YAAc,EAAKA,YAAYpJ,KAAjB,gBACnB,EAAKqJ,aAAe,EAAKA,aAAarJ,KAAlB,gBAXS,E,6EAe7B,IAAMiB,EAAgBhB,KAAKH,MAAMkB,KAAKC,cAGtC,MAAsB,KAAlBA,GAEFwB,QAAQC,IAAI,qDACZzC,KAAK2C,SAAS,CAAEP,eAAgB,iCAI9BpC,KAAKgC,MAAM+G,UAAUnC,QAAU,GACjCpE,QAAQC,IAAIzC,KAAKgC,MAAM+G,WACvBvG,QAAQC,IAAI,6BACZzC,KAAK2C,SAAS,CAAEP,eAAgB,kCAIlCpC,KAAKqJ,OAAO,CACVrI,cAAeA,EACf+H,UAAW/I,KAAKgC,MAAM+G,YAGrBlF,KAAK7D,KAAKmJ,aAEVtF,KAAK7D,KAAKoJ,cAEVlF,OAAM,SAACoF,GACN9G,QAAQC,IAAI6G,Q,qCAMuD,IAAD,OACtE9G,QAAQC,IAAI,kBAGZ,IAAMzB,EAAgBhB,KAAKH,MAAMkB,KAAKC,cAItC,GAAsB,KAAlBA,EAIF,OAFAwB,QAAQC,IAAI,qDACZzC,KAAK2C,SAAS,CAAEP,eAAgB,gCAIlCI,QAAQC,IAAI,kBAAmBzB,GAE/B,IAAMuI,EAAoB,CACxB3F,OAAQ,MACRjC,WAGF4B,MAAM,GAAD,OAAIC,mHAAYC,sBAAhB,kBAA+CzC,GAAiBuI,GAClE1F,MAAK,SAACC,GAGL,OAFAtB,QAAQC,IAAI,oBACZD,QAAQC,IAAIqB,GACLA,EAASC,UAEjBF,MAAK,SAAC2F,GAGL,OAFAhH,QAAQC,IAAI+G,GAEI,MAAZA,EAAM,IACRhH,QAAQC,IAAI,mBACZ,EAAKE,SAAS,CACZP,eAAgB,0CAIXqH,QAAQC,OAAO,wBAEjBF,EAAM,MAGd3F,KAAK7D,KAAKmJ,aAEVtF,KAAK7D,KAAKoJ,cAEVlF,OAAM,SAACoF,GACN9G,QAAQC,IAAI6G,Q,yJAOhBtI,E,EAAAA,cACA+H,E,EAAAA,UAKAvG,QAAQC,IAAI,iBAAkBzB,EAAe,aAAc+H,GAC3D/I,KAAK2C,SAAS,CAAEP,eAAgB,yB,SACnBmB,MAAM,GAAD,OAAIC,mHAAYC,sBAAhB,UAA+C,CAC/DC,KAAMiG,KAAKC,UAAU,CACnB5I,cAAeA,EACf+H,UAAWA,IAEbpH,UACAiC,OAAQ,SAEPC,MAAK,SAACC,GAGL,OAFAtB,QAAQC,IAAI,oBACZD,QAAQC,IAAIqB,GACLA,EAASC,UAEjBF,MAAK,SAAC2F,GAGL,OAFAhH,QAAQC,IAAI+G,GACZhH,QAAQC,IAAI,iBACL+G,EAAM,M,6SAOjBxI,E,EAAAA,cACA6I,E,EAAAA,MAMArH,QAAQC,IAAI,qBACZD,QAAQC,IAAIoH,G,kBACL,IAAIJ,SAAQ,SAACK,EAASJ,GAE3BK,EAAKC,IAAIC,SACNC,KACCH,EAAKI,MAAMC,UAAX,0CAAwDP,IACxD7I,EACA,IACA,SAACsI,EAAKe,GACJ,OAAIf,GACF9G,QAAQC,IAAI,sBACLiH,EAAOJ,KAEhB9G,QAAQC,IAAI,kBACLqH,EAAQ,CAAE9I,gBAAeqJ,kBAGnCxG,KAAKrB,QAAQC,KACbyB,OAAM,SAACoF,GACN9G,QAAQC,a,wQAMdzB,E,EAAAA,cACAqJ,E,EAAAA,UAKA7H,QAAQC,IAAI,kBACZzC,KAAK2C,SAAS,CACZP,eAAgBpC,KAAKgC,MAAMgH,UACvB,uBACA,yB,kBAECzF,MAAM,GAAD,OAAIC,mHAAYC,sBAAhB,SAA8C,CACxDC,KAAMiG,KAAKC,UAAU,CAAE5I,gBAAeqJ,cACtC1I,QAAS,CACP,eAAgB,oBAElBiC,OAAQ,SAEPC,MAAK,SAACC,GACL,IAAIwG,EAEEC,EADWzG,EAASnC,QACd6I,IAAI,YAChB1G,EACGC,OACAF,MAAK,SAACH,GACL4G,EAAI5G,EAAK,GACT,IAAIC,EAAW4G,QAAQE,EACnB,EAAK5K,MAAMkB,KAAKC,gBAAkBsJ,EAAEtJ,cACtCwB,QAAQC,IAAI,uCACHkB,GACTnB,QAAQC,IAAIkB,GACZ,EAAK9D,MAAM6K,SAAS,CAClB1J,cAAe,EAAKnB,MAAMkB,KAAKC,cAC/BmF,KAAMmE,EAAEnE,KACRC,MAAOkE,EAAElE,MACTzC,SAAUA,KAGZnB,QAAQC,IAAI,0BAGfyB,OAAM,SAACoF,GACN9G,QAAQC,IAAI6G,SAGjBpF,OAAM,SAACoF,GACN9G,QAAQC,IAAI6G,O,+IAIAqB,GAChB3K,KAAK2C,SAAS,CAAEoG,UAAW4B,EAAMzH,OAAO0H,U,mCAIxC5K,KAAK2C,SAAS,CAAEqG,WAAYhJ,KAAKgC,MAAMgH,UAAW5G,eAAgB,O,+BAG1D,IAAD,OACDyI,EACJ,6BACE,kBAAChK,EAAA,EAAD,CACEF,UAAU,cACVJ,QAAS,WACP,EAAKuK,eAHT,WAQA,kBAACjK,EAAA,EAAD,CACEF,UAAU,cACVJ,QAAS,WACP,EAAK2I,iBAHT,UAWE6B,EACJ,8BACE,2BAAOpK,UAAU,aAAjB,YAEE,2BACEkC,KAAK,OACL+F,YAAY,mBACZgC,MAAO5K,KAAKgC,MAAM+G,UAClBxG,SAAUvC,KAAKiJ,qBAGnB,kBAACpI,EAAA,EAAD,CACEF,UAAU,0BACVJ,QAAS,WACP,EAAKuK,aACL,EAAKnI,SAAS,CAAEoG,UAAW,OAJ/B,QASA,kBAAClI,EAAA,EAAD,CACEF,UAAU,0BACVJ,QAAS,WACP,EAAKyK,kBAHT,YAWJ,OACE,6BACE,yBAAKrK,UAAU,SACb,6BAAMX,KAAKgC,MAAMgH,UAAY6B,EAAeE,GAC5C,yBAAKpK,UAAU,SAAf,IAAyBX,KAAKgC,MAAMI,sB,GA5R1BX,IAAMC,WCjBpBC,G,OAAU,IAAIC,SACpBD,EAAQE,IAAI,8BAA+B,KAC3CF,EAAQE,IAAI,eAAgB,oB,ICajBkI,EAGAkB,EACPC,EDSWC,E,YAjBb,WAAYtL,GAAwB,IAAD,8BACjC,4CAAMA,KACDmC,MAAQ,GAFoB,E,sEAQjC,OACE,6BACE,yBAAKrB,UAAU,aAAf,kB,GAXgBc,IAAMC,W,sBCgIf0J,E,YAhFb,WAAYvL,GAAa,IAAD,8BACtB,4CAAMA,KACDmC,MAAQ,CACXqJ,kBAAmB,EACnBC,SAAU,GACV1K,aAAa,EACbV,UAAU,EACVa,KAAM,CAAEC,cAAe,GAAImF,KAAM,GAAIC,MAAO,GAAIzC,SAAU,KAE5D,EAAK7D,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKwL,QAAU,EAAKA,QAAQxL,KAAb,gBAVO,E,kFAcH4K,GACnB3K,KAAK2C,SAAS,CACZ0I,kBAAmBV,EAAMzH,OAAO0H,QAElCpI,QAAQC,IAAI,+BAAiCzC,KAAKgC,MAAMqJ,mBAC7CrL,KAAKgC,MAAMsJ,SAASE,QAAQC,OAAOC,OACjC,IAAIC,IAAG3L,KAAKgC,MAAMqJ,qB,yJAMzBO,EAAYC,OAAeD,S,SAC3BA,EAASE,S,cACfZ,EAAgBW,OAAe9B,KAAKgC,gBAIpChC,EAAO,IAAIiC,IAAKd,G,SACCU,EAASK,QAAQ,CAAErI,OAAQ,iB,OAA5CqH,E,OAGAjL,KAAK2C,SAAS,CACZ2I,cA1EFA,EA2EE1K,aAAa,EACbG,KAAM,CAAEC,cAAeiK,EAAS,GAAI9E,KAAM,GAAIC,MAAO,GAAIzC,SAAU,IACnEzD,UAAU,I,oIAINoK,GACN9H,QAAQC,IAAI,kBACZzC,KAAK2C,SAAS,CAAE5B,KAAMuJ,EAAGpK,UAAU,M,+BAInC,IAAMgM,EAAO,kBAAC,EAAD,CAAUnL,KAAMf,KAAKgC,MAAMjB,OAClCoL,EACJ,kBAAC,EAAD,CAAWzB,SAAU1K,KAAKuL,QAAQxL,KAAKC,MAAOe,KAAMf,KAAKgC,MAAMjB,OAE3DqL,EAAY,kBAAC,EAAD,CAAerL,KAAMf,KAAKgC,MAAMjB,OAC5CsF,EAAY,kBAAC,EAAD,CAAetF,KAAMf,KAAKgC,MAAMjB,OAC5CmF,EAAS,kBAAC,EAAD,CAAYnF,KAAMf,KAAKgC,MAAMjB,OACtCuF,EAAY,kBAAC,EAAD,CAAevF,KAAMf,KAAKgC,MAAMjB,OAElD,OACE,6BACE,kBAAC,EAAD,CACEA,KAAMf,KAAKgC,MAAMjB,KACjBH,YAAaZ,KAAKgC,MAAMpB,YACxBd,UAAWE,KAAKF,UAChBI,SAAUF,KAAKgC,MAAM9B,WAEtBF,KAAKgC,MAAM9B,SAAW,kBAAC,IAAD,CAAUmB,GAAG,eAAkB,KACtD,6BACE,kBAAC,IAAD,CAAOgL,OAAK,EAACC,KVnIH,IUmIsBC,OAAQ,kBAAML,KAC9C,kBAAC,IAAD,CAAOG,OAAK,EAACC,KVnIF,SUmIsBC,OAAQ,kBAAMJ,KAC/C,kBAAC,IAAD,CAAOE,OAAK,EAACC,KVnIE,aUmIsBC,OAAQ,kBAAMH,KACnD,kBAAC,IAAD,CAAOC,OAAK,EAACC,KVlIE,aUkIsBC,OAAQ,kBAAMlG,KACnD,kBAAC,IAAD,CAAOgG,OAAK,EAACC,KVlID,UUkIsBC,OAAQ,kBAAMrG,KAChD,kBAAC,IAAD,CAAOmG,OAAK,EAACC,KVrIE,aUqIsBC,OAAQ,kBAAMjG,W,GA3E3C7E,IAAMC,WC9CxB8K,IAASD,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFE,SAASC,eAAe,W","file":"static/js/main.4ccd8d18.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./Nav.css\";\r\n\r\nimport * as ROUTES from \"../../common/routes\";\r\nimport User from \"../../interfaces/User.interface\";\r\n\r\ntype NavProps = {\r\n  user: User;\r\n  connectedTo: boolean; // metamask\r\n  onConnect: () => void;\r\n  loggedIn: boolean; // app\r\n};\r\ntype NavState = {};\r\n\r\nclass Nav extends React.Component<NavProps, NavState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.onConnect = this.onConnect.bind(this);\r\n  }\r\n\r\n  onConnect() {\r\n    // callback\r\n    this.props.onConnect();\r\n  }\r\n\r\n  render() {\r\n    const brandLink = this.props.loggedIn ? \"/dashboard\" : \"/\";\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand\r\n          onClick={() => {\r\n            return false;\r\n          }}\r\n          href={brandLink}\r\n        >\r\n          {\" \"}\r\n          ETC Reference Letter dApp\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle />\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n          {!this.props.connectedTo && (\r\n            <Button\r\n              className=\"connect\"\r\n              onClick={() => {\r\n                this.onConnect();\r\n              }}\r\n            >\r\n              Connect\r\n            </Button>\r\n          )}\r\n          {this.props.connectedTo && (\r\n            <Navbar.Text className=\"navText\">\r\n              Signed in as:{\" \"}\r\n              <a>\r\n                {this.props.connectedTo ? this.props.user.publicAddress : \"--\"}\r\n              </a>\r\n            </Navbar.Text>\r\n          )}\r\n        </Navbar.Collapse>\r\n        <Dropdown>\r\n          <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n            Menu\r\n          </Dropdown.Toggle>\r\n          {this.props.connectedTo && (\r\n            <Dropdown.Menu alignRight={true}>\r\n              <Link to={ROUTES.HOME} style={{ textDecoration: \"none\" }}>\r\n                <li>\r\n                  <Dropdown.Item href=\"#/action-0\">Home</Dropdown.Item>\r\n                </li>\r\n              </Link>\r\n              {/* <Link to={ROUTES.LOGIN} style={{ textDecoration: \"none\" }}>\r\n              <li>\r\n                <Dropdown.Item href=\"#/action-1\">Login</Dropdown.Item>\r\n              </li>\r\n            </Link> */}\r\n              <Link to={ROUTES.DASHBOARD} style={{ textDecoration: \"none\" }}>\r\n                <li>\r\n                  <Dropdown.Item href=\"#/action-2\">Dashboard</Dropdown.Item>\r\n                </li>\r\n              </Link>\r\n              <Link to={ROUTES.REQUESTOR} style={{ textDecoration: \"none\" }}>\r\n                <li>\r\n                  <Dropdown.Item href=\"#/action-3\">Requestor</Dropdown.Item>\r\n                </li>\r\n              </Link>\r\n              <Link to={ROUTES.WRITER} style={{ textDecoration: \"none\" }}>\r\n                <li>\r\n                  <Dropdown.Item href=\"#/action-4\">Writer</Dropdown.Item>\r\n                </li>\r\n              </Link>\r\n              <Link to={ROUTES.RECIPIENT} style={{ textDecoration: \"none\" }}>\r\n                <li>\r\n                  <Dropdown.Item href=\"#/action-5\">Recipient</Dropdown.Item>\r\n                </li>\r\n              </Link>\r\n            </Dropdown.Menu>\r\n          )}\r\n          {!this.props.connectedTo && (\r\n            <Dropdown.Menu alignRight={true}>\r\n              <Link to={ROUTES.HOME} style={{ textDecoration: \"none\" }}>\r\n                <li>\r\n                  <Dropdown.Item href=\"#/action-0\">Home</Dropdown.Item>\r\n                </li>\r\n              </Link>\r\n              <Link to={ROUTES.LOGIN} style={{ textDecoration: \"none\" }}>\r\n                <li>\r\n                  <Dropdown.Item href=\"#/action-1\">Login</Dropdown.Item>\r\n                </li>\r\n              </Link>\r\n            </Dropdown.Menu>\r\n          )}\r\n        </Dropdown>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\nexport default Nav;\r\n","export const HOME = '/';\r\nexport const LOGIN = '/login';\r\nexport const DASHBOARD = \"/dashboard\";\r\nexport const RECIPIENT = '/recipient';\r\nexport const REQUESTOR = '/requestor';\r\nexport const WRITER = '/writer';\r\n","import React from \"react\";\r\nimport User from \"../../../interfaces/User.interface\";\r\nimport \"./Home.css\";\r\n\r\nconst headers = new Headers();\r\nheaders.set(\"Access-Control-Allow-Origin\", \"*\");\r\nheaders.set(\"Content-Type\", \"application/json\");\r\n\r\ninterface HomeProps {\r\n  user: User;\r\n}\r\ninterface HomeState {\r\n}\r\n\r\nclass Home extends React.Component<HomeProps, HomeState> {\r\n  constructor(props: HomeProps) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"home\">\r\n          Home\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Home;\r\n","enum LetterCategory {\r\n  letters,\r\n  sentLetters,\r\n  invalid,\r\n} export default LetterCategory;","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport User from \"../../interfaces/User.interface\";\r\nimport \"./FileUpload.css\";\r\n\r\ninterface FileUploadProps {\r\n  user: User;\r\n  fetchUrl?: string; // if defined, fileupload will handle uploading to server\r\n  restrictPdf?: boolean; \r\n  initialDisplayMessage?: string;\r\n  onUpload: (file: File) => void;\r\n  onClose: () => void;\r\n}\r\ninterface FileUploadState {\r\n  file: File;\r\n  displayMessage: string;\r\n}\r\n\r\nclass FileUpload extends React.Component<FileUploadProps, FileUploadState> {\r\n  constructor(props: FileUploadProps) {\r\n    super(props);\r\n    this.state = {\r\n      file: new File([], \"\"),\r\n      displayMessage: this.props.initialDisplayMessage ? this.props.initialDisplayMessage : \"\",\r\n    };\r\n    this.onFormSubmit = this.onFormSubmit.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    // this.fileUpload = this.fileUpload.bind(this);\r\n  }\r\n\r\n  onFormSubmit() //e: React.FormEvent\r\n  {\r\n    console.log(this.state.file);\r\n    if (this.state.file && this.state.file.size === 0) {\r\n      console.log(\"no file uploaded\");\r\n      this.setState({ displayMessage: \"No File Uploaded.\" });\r\n    } else if (this.props.restrictPdf && this.state.file.type != \"application/pdf\") {\r\n      console.log(\"not a pdf\");\r\n      this.setState({ displayMessage: \"Convert Your File to a PDF!\" });\r\n    } else {\r\n      console.log(\"checking if upload to server\");\r\n      if (this.props?.fetchUrl) this.fileUploadToServer(this.state.file);\r\n      else this.props.onUpload(this.state.file); // callback\r\n    }\r\n  }\r\n\r\n  onChange(e: any) {\r\n    console.log(\"file changed\");\r\n    this.setState({ file: e.target.files[0] });\r\n  }\r\n\r\n  fileUploadToServer(file: File) {\r\n    console.log(\"sending file to server\");\r\n    let fileForm: FormData = new FormData();\r\n    fileForm.append(\"file\", file);\r\n\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL}` + this.props.fetchUrl, {\r\n      body: fileForm,\r\n      headers: {\r\n        \"Content-Type\": \"mutlipart/form-data\",\r\n        jwtToken: this.props.user.jwtToken,\r\n      },\r\n      method: \"POST\",\r\n    })\r\n      .then((response: any) => {\r\n        console.log(response.json);\r\n        console.log(response.status);\r\n        if (response.status === 200) {\r\n          this.props.onUpload(file);\r\n        } else {\r\n          this.changeDisplayMessage(\"Upload Failed. Try Again Later.\");\r\n        }\r\n      })\r\n      .catch((e: Error) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  changeDisplayMessage(newDisplayMessage: string) {\r\n    this.setState({displayMessage: newDisplayMessage})\r\n  }\r\n\r\n  render() {\r\n    const displayMessage = this.state.displayMessage;\r\n    return (\r\n      <Form onSubmit={this.onFormSubmit.bind(this)}>\r\n        <Form.Group>\r\n          <Form.File id=\"fileUpload\" onChange={this.onChange} />\r\n          <div>\r\n            <div className=\"display-message\"> {displayMessage} </div>\r\n            <Button\r\n              className=\"form-button\"\r\n              onClick={(e: any) => {\r\n                this.props.onClose();\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            <Button\r\n              className=\"form-button\"\r\n              //type=\"submit\"\r\n              onClick={this.onFormSubmit}\r\n            >\r\n              Upload\r\n            </Button>\r\n          </div>\r\n        </Form.Group>\r\n      </Form>\r\n\r\n      // <form onSubmit={this.onFormSubmit}>\r\n      //   <input type=\"file\" onChange={this.onChange} />\r\n      //   <button type=\"submit\">Upload</button>\r\n      // </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileUpload;\r\n","import React from \"react\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport User from \"../../interfaces/User.interface\";\r\nimport Letter from \"../../interfaces/Letter.interface\";\r\nimport \"./FileView.css\";\r\nimport SentLetter from \"../../interfaces/SentLetter.interface\";\r\n\r\ninterface FileViewProps {\r\n  user: User;\r\n  letter: any;\r\n  onClose: () => void;\r\n}\r\ninterface FileViewState {\r\n  letterUrl: any;\r\n}\r\n\r\nclass FileView extends React.Component<FileViewProps, FileViewState> {\r\n  constructor(props: FileViewProps) {\r\n    super(props);\r\n    this.state = { letterUrl: null };\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(this.props.letter.contents);\r\n    reader.onload = (e: any) => {\r\n      // console.log(reader.result);\r\n      this.setState({ letterUrl: reader.result });\r\n    };\r\n    setTimeout(()=> \r\n      console.log(this.props.letter.contents.type)\r\n    , 2000);\r\n  }\r\n\r\n  getLetterUrl() {}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <embed\r\n            type={this.props.letter.contents.type}\r\n            src={this.state.letterUrl}\r\n            width=\"100%\"\r\n            height=\"400px\"\r\n          />\r\n        </div>\r\n        <Button\r\n          className=\"form-button\"\r\n          onClick={(e: any) => {\r\n            this.props.onClose();\r\n          }}\r\n        >\r\n          Close\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileView;\r\n","//import { BigNumber } from \"bignumber.js\";\r\n// import { TutorialToken } from \"./contract-types/TutorialToken\"; // import is correct\r\nimport React from \"react\";\r\n// import Modal from \"react-modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nimport User from \"../../../interfaces/User.interface\";\r\nimport Letter from \"../../../interfaces/Letter.interface\";\r\nimport SentLetter from \"../../../interfaces/SentLetter.interface\";\r\nimport LetterCategory from \"../../../interfaces/LetterCategory.enum\";\r\n\r\nimport FileUpload from \"../../file-upload/FileUpload\";\r\nimport FileView from \"../../file-view/FileView\";\r\n\r\nimport \"./Writer.css\";\r\n\r\ninterface WriterProps {\r\n  user: User;\r\n}\r\n\r\ninterface WriterState {\r\n  // need to change into dictionary\r\n  letters: Letter[]; // letter table\r\n  sentLetters: SentLetter[]; // sent letters table\r\n  uploadIsOpen: boolean;\r\n  viewIsOpen: boolean;\r\n  selectedLetterKey: number;\r\n  selectedLetterId: number;\r\n  selectedLetterCategory: LetterCategory;\r\n}\r\n\r\nclass Writer extends React.Component<WriterProps, WriterState> {\r\n  private uploadModal = React.createRef<FileUpload>();\r\n  private viewModal = React.createRef<FileView>();\r\n\r\n  componentWillMount() {\r\n    // Modal.setAppElement(\"body\");\r\n    // api call to get letters\r\n    console.log(\"componentWillMount\");\r\n    this.setState({\r\n      letters: [\r\n        {\r\n          letter_id: 1,\r\n          writer: {\r\n            name: \"Mary Poppins\",\r\n            publicAddress: \"0x314159265358979323\",\r\n            email: \"\",\r\n            jwtToken: \"\",\r\n          },\r\n          requestor: {\r\n            name: \"Simba\",\r\n            publicAddress: \"0xabcdefghijklmnop\",\r\n            email: \"\",\r\n            jwtToken: \"\",\r\n          },\r\n          contents: new File([], \"\"),\r\n        },\r\n        {\r\n          letter_id: 2,\r\n          writer: {\r\n            name: \"Mary Poppins\",\r\n            publicAddress: \"0x314159265358979323\",\r\n            email: \"\",\r\n            jwtToken: \"\",\r\n          },\r\n          requestor: {\r\n            name: \"Curious George\",\r\n            publicAddress: \"0x142857142857142857\",\r\n            email: \"\",\r\n            jwtToken: \"\",\r\n          },\r\n          contents: new File([], \"\"),\r\n        },\r\n      ],\r\n      sentLetters: [\r\n        {\r\n          letter_id: 2,\r\n          writer: {\r\n            name: \"Mary Poppins\",\r\n            publicAddress: \"0x314159265358979323\",\r\n            email: \"\",\r\n            jwtToken: \"\",\r\n          },\r\n          requestor: {\r\n            name: \"Simba\",\r\n            publicAddress: \"0xabcdefghijklmnop\",\r\n            email: \"\",\r\n            jwtToken: \"\",\r\n          },\r\n          recipient: {\r\n            name: \"Elton John\",\r\n            publicAddress: \"0x101100101001101110100\",\r\n            email: \"\",\r\n            jwtToken: \"\",\r\n          },\r\n          contents: new File([], \"\"),\r\n        },\r\n        {\r\n          letter_id: 2,\r\n          writer: {\r\n            name: \"Mary Poppins\",\r\n            publicAddress: \"0x314159265358979323\",\r\n            email: \"\",\r\n            jwtToken: \"\",\r\n          },\r\n          requestor: {\r\n            name: \"Simba\",\r\n            publicAddress: \"0xabcdefghijklmnop\",\r\n            email: \"\",\r\n            jwtToken: \"\",\r\n          },\r\n          recipient: {\r\n            name: \"Curious George\",\r\n            publicAddress: \"0x142857142857142857\",\r\n            email: \"\",\r\n            jwtToken: \"\",\r\n          },\r\n          contents: new File([], \"\"),\r\n        },\r\n      ],\r\n    });\r\n  }\r\n\r\n  constructor(props: WriterProps) {\r\n    super(props);\r\n    this.state = {\r\n      letters: [],\r\n      sentLetters: [],\r\n      viewIsOpen: false,\r\n      uploadIsOpen: false,\r\n      selectedLetterKey: -1,\r\n      selectedLetterId: -1,\r\n      selectedLetterCategory: LetterCategory.invalid,\r\n    };\r\n  }\r\n\r\n  openUploadModal(key: number, cat: LetterCategory) {\r\n    console.log(\"opening upload modal\");\r\n    console.log(cat, key);\r\n    if (cat === LetterCategory.letters) {\r\n      this.setState({\r\n        uploadIsOpen: true,\r\n        selectedLetterKey: key,\r\n        selectedLetterId: this.state.letters[key].letter_id,\r\n        selectedLetterCategory: cat,\r\n      });\r\n    } else if (cat === LetterCategory.sentLetters) {\r\n      this.setState({\r\n        uploadIsOpen: true,\r\n        selectedLetterKey: key,\r\n        selectedLetterId: this.state.sentLetters[key].letter_id,\r\n        selectedLetterCategory: cat,\r\n      });\r\n    }\r\n  }\r\n\r\n  closeUploadModal() {\r\n    console.log(\"closing upload modal\");\r\n    this.setState({ uploadIsOpen: false });\r\n  }\r\n\r\n  onUploadSubmit(file: File) {\r\n    console.log(file);\r\n    console.log(\"onUploadSubmit\");\r\n\r\n    // TODO: do stuff with file\r\n    // TODO: send File to backend\r\n    // REMOVE: here testing purposes, should be a query in uploadToServer following a successful request\r\n    let newLetters = [...this.state.letters];\r\n    newLetters[this.state.selectedLetterKey].contents = file;\r\n    let newSentLetters = [...this.state.sentLetters];\r\n    for (let i = 0; i < newSentLetters.length; i++) {\r\n      if (newSentLetters[i].letter_id === this.state.selectedLetterId) {\r\n        newSentLetters[i].contents = file;\r\n      }\r\n    }\r\n    // END REMOVE\r\n\r\n    console.log(\"newLetters\");\r\n    console.log(newLetters);\r\n\r\n    this.setState({\r\n      letters: newLetters,\r\n      sentLetters: newSentLetters,\r\n    });\r\n\r\n    console.log(\"setting state\");\r\n    setTimeout(() => {\r\n      console.log(this.state.letters);\r\n    }, 2000);\r\n\r\n    let fetchUrl =\r\n      \"/api/users/\" +\r\n      this.props.user.publicAddress +\r\n      \"/letters/\" +\r\n      this.state.selectedLetterId +\r\n      \"/content\";\r\n    this.uploadToServer(file, fetchUrl);\r\n  }\r\n\r\n  uploadToServer(file: File, fetchUrl: string) {\r\n    let fileForm: FormData = new FormData();\r\n    fileForm.append(\"file\", file);\r\n\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL}` + fetchUrl, {\r\n      body: fileForm,\r\n      headers: {\r\n        \"Content-Type\": \"mutlipart/form-data\",\r\n        jwtToken: this.props.user.jwtToken,\r\n      },\r\n      method: \"POST\",\r\n    })\r\n      .then((response: any) => {\r\n        console.log(response.status);\r\n        if (response.status === 200) {\r\n          this.closeUploadModal();\r\n        } else {\r\n          this.uploadModal.current!.changeDisplayMessage(\r\n            \"Upload Failed. Try Again Later.\"\r\n          );\r\n        }\r\n      })\r\n      .catch((e: Error) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  openViewModal(key: number, cat: LetterCategory) {\r\n    console.log(\"opening view modal\");\r\n    console.log(cat, key);\r\n    if (cat === LetterCategory.letters) {\r\n      this.setState({\r\n        viewIsOpen: true,\r\n        selectedLetterKey: key,\r\n        selectedLetterId: this.state.letters[key].letter_id,\r\n        selectedLetterCategory: cat,\r\n      });\r\n    } else if (cat === LetterCategory.sentLetters) {\r\n      this.setState({\r\n        viewIsOpen: true,\r\n        selectedLetterKey: key,\r\n        selectedLetterId: this.state.sentLetters[key].letter_id,\r\n        selectedLetterCategory: cat,\r\n      });\r\n    }\r\n  }\r\n\r\n  closeViewModal() {\r\n    console.log(\"closing view modal\");\r\n    this.setState({ viewIsOpen: false });\r\n  }\r\n\r\n  getCorrectUserName() {\r\n    if (this.state.selectedLetterCategory === LetterCategory.letters) {\r\n      return this.state.letters[this.state.selectedLetterKey]?.requestor.name;\r\n    } else if (\r\n      this.state.selectedLetterCategory === LetterCategory.sentLetters\r\n    ) {\r\n      return this.state.sentLetters[this.state.selectedLetterKey]?.requestor\r\n        .name;\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  getCorrectLetter() {\r\n    if (this.state.selectedLetterCategory === LetterCategory.letters) {\r\n      return this.state.letters[this.state.selectedLetterKey];\r\n    } else {\r\n      return this.state.sentLetters[this.state.selectedLetterKey];\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { name } = this.props.user;\r\n    const {\r\n      letters,\r\n      sentLetters,\r\n      uploadIsOpen,\r\n      viewIsOpen,\r\n      selectedLetterId,\r\n    } = this.state;\r\n\r\n    const lettersList = letters.map((l, k) => (\r\n      <Row key={k}>\r\n        <div className=\"full-width\">\r\n          <span className=\"text-float-left\">({l.letter_id})&nbsp;</span>\r\n          <span className=\"text-float-left\">For: {l.requestor.name}</span>\r\n          <Button\r\n            disabled={l.contents.size === 0}\r\n            className=\"left-float-right-button\"\r\n            onClick={() => {\r\n              this.openViewModal(k, LetterCategory.letters);\r\n            }}\r\n          >\r\n            view\r\n          </Button>\r\n\r\n          <Button\r\n            className=\"left-float-right-button\"\r\n            onClick={() => {\r\n              this.openUploadModal(k, LetterCategory.letters);\r\n            }}\r\n          >\r\n            upload\r\n          </Button>\r\n        </div>\r\n      </Row>\r\n    ));\r\n\r\n    const sentLettersList = sentLetters.map((l, k) => (\r\n      <Row key={k}>\r\n        <div className=\"full-width\">\r\n          <span className=\"text-float-left\">({l.letter_id})&nbsp;</span>\r\n          <span className=\"text-float-left\">For: {l.requestor.name}</span>\r\n\r\n          <Button\r\n            disabled={l.contents.size === 0}\r\n            className=\"left-float-right-button\"\r\n            onClick={() => {\r\n              this.openViewModal(k, LetterCategory.sentLetters);\r\n            }}\r\n          >\r\n            view\r\n          </Button>\r\n          <span className=\"text-float-right\">To: {l.recipient.name}</span>\r\n        </div>\r\n      </Row>\r\n    ));\r\n\r\n    return (\r\n      <div id=\"writer\" className=\"writer\">\r\n        <Modal\r\n          id=\"upload-modal\"\r\n          show={uploadIsOpen}\r\n          onHide={this.closeUploadModal.bind(this)}\r\n          backdrop=\"static\"\r\n          size=\"lg\"\r\n          animation={false}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              {this.getCorrectUserName()} ({selectedLetterId})\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <FileUpload\r\n              ref={this.uploadModal}\r\n              user={this.props.user}\r\n              restrictPdf={true}\r\n              /*fetchUrl={\r\n                \"/api/users/\" +\r\n                publicAddress +\r\n                \"/letters/\" +\r\n                selectedLetterId +\r\n                \"/content\"\r\n              }*/\r\n              onUpload={this.onUploadSubmit.bind(this)}\r\n              onClose={this.closeUploadModal.bind(this)}\r\n            ></FileUpload>\r\n          </Modal.Body>\r\n        </Modal>\r\n\r\n        <Modal\r\n          id=\"view-modal\"\r\n          show={viewIsOpen}\r\n          onHide={this.closeViewModal.bind(this)}\r\n          backdrop=\"static\"\r\n          animation={false}\r\n          className=\"modal\"\r\n          scrollable={false}\r\n          size=\"lg\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              {this.getCorrectUserName()} ({selectedLetterId})\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <FileView\r\n              ref={this.viewModal}\r\n              user={this.props.user}\r\n              letter={this.getCorrectLetter()}\r\n              /*fetchUrl={\r\n                \"/api/users/\" +\r\n                publicAddress +\r\n                \"/letters/\" +\r\n                selectedLetterId +\r\n                \"/content\"\r\n              }*/\r\n              onClose={this.closeViewModal.bind(this)}\r\n            ></FileView>\r\n          </Modal.Body>\r\n        </Modal>\r\n        <div className=\"writer-header\">\r\n          <h1> Writer Page </h1>\r\n          <p>\r\n            <em>{name}</em>\r\n          </p>\r\n          <hr></hr>\r\n        </div>\r\n\r\n        <div className=\"letters\">\r\n          <h3> Letters </h3>\r\n          <Container fluid>{lettersList}</Container>\r\n          <hr></hr>\r\n        </div>\r\n\r\n        <div className=\"sentLetters\">\r\n          <h3> History </h3>\r\n          <Container fluid>{sentLettersList}</Container>\r\n          <hr></hr>\r\n        </div>\r\n\r\n        <div className=\"writer-footer\">\r\n          <p> Product of Team Gas</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Writer;\r\n","//import { BigNumber } from \"bignumber.js\";\r\n// import { TutorialToken } from \"./contract-types/TutorialToken\"; // import is correct\r\nimport React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nimport User from \"../../../interfaces/User.interface\";\r\nimport Letter from \"../../../interfaces/Letter.interface\";\r\nimport SentLetter from \"../../../interfaces/SentLetter.interface\";\r\nimport LetterCategory from \"../../../interfaces/LetterCategory.enum\";\r\n\r\nimport FileView from \"../../file-view/FileView\";\r\n\r\nimport \"./Requestor.css\";\r\n\r\ninterface RequestorProps {\r\n  user: User;\r\n}\r\n\r\ninterface RequestorState {\r\n  // need to change into dictionary\r\n  letters: Letter[]; // letter table\r\n  sentLetters: SentLetter[]; // letter-recipient table\r\n  letterKey: number;\r\n  viewIsOpen: boolean;\r\n  selectedLetterKey: number;\r\n  selectedLetterId: number;\r\n  selectedLetterCategory: LetterCategory;\r\n}\r\n\r\nclass Requestor extends React.Component<RequestorProps, RequestorState> {\r\n\r\n  private viewModal = React.createRef<FileView>();\r\n\r\n  componentWillMount() {\r\n    // api call to get letters\r\n    this.setState({\r\n      letters: [\r\n        {\r\n          letter_id: 1,\r\n          writer: {\r\n            name: \"Mary Poppins\",\r\n            publicAddress: \"0x314159265358979323\",\r\n            email: \"\",\r\n            jwtToken: \"\",\r\n          },\r\n          requestor: {\r\n            name: \"Simba\",\r\n            publicAddress: \"0xabcdefghijklmnop\",\r\n            email: \"\",\r\n            jwtToken: \"\",\r\n          },\r\n          contents: new File([], \"\"),\r\n        },\r\n      ],\r\n      sentLetters: [\r\n        {\r\n          letter_id: 2,\r\n          writer: {\r\n            name: \"Mary Poppins\",\r\n            publicAddress: \"0x314159265358979323\",\r\n            email: \"\",\r\n            jwtToken: \"\",\r\n          },\r\n          requestor: {\r\n            name: \"Curious George\",\r\n            publicAddress: \"0x142857142857142857\",\r\n            email: \"\",\r\n            jwtToken: \"\",\r\n          },\r\n          recipient: {\r\n            name: \"Elton John\",\r\n            publicAddress: \"0x101100101001101110100\",\r\n            email: \"\",\r\n            jwtToken: \"\",\r\n          },\r\n          contents: new File([], \"\"),\r\n        },\r\n        {\r\n          letter_id: 2,\r\n          writer: {\r\n            name: \"Mary Poppins\",\r\n            publicAddress: \"0x314159265358979323\",\r\n            email: \"\",\r\n            jwtToken: \"\",\r\n          },\r\n          requestor: {\r\n            name: \"Simba\",\r\n            publicAddress: \"0xabcdefghijklmnop\",\r\n            email: \"\",\r\n            jwtToken: \"\",\r\n          },\r\n          recipient: {\r\n            name: \"Curious George\",\r\n            publicAddress: \"0x142857142857142857\",\r\n            email: \"\",\r\n            jwtToken: \"\",\r\n          },\r\n          contents: new File([], \"\"),\r\n        },\r\n      ],\r\n    });\r\n  }\r\n\r\n  constructor(props: RequestorProps) {\r\n    super(props);\r\n    this.state = {\r\n      letters: [],\r\n      sentLetters: [],\r\n      letterKey: -1,\r\n      viewIsOpen: false,\r\n      selectedLetterKey: -1,\r\n      selectedLetterId: -1,\r\n      selectedLetterCategory: LetterCategory.invalid,\r\n    };\r\n  }\r\n\r\n  closeViewModal() {\r\n    console.log(\"closing view modal\");\r\n    this.setState({ viewIsOpen: false });\r\n  }\r\n\r\n  openViewModal(key: number, cat: LetterCategory) {\r\n    console.log(\"opening view modal\");\r\n    console.log(cat, key);\r\n    if (cat === LetterCategory.letters) {\r\n      this.setState({\r\n        viewIsOpen: true,\r\n        selectedLetterKey: key,\r\n        selectedLetterId: this.state.letters[key].letter_id,\r\n        selectedLetterCategory: cat,\r\n      });\r\n    } else if (cat === LetterCategory.sentLetters) {\r\n      this.setState({\r\n        viewIsOpen: true,\r\n        selectedLetterKey: key,\r\n        selectedLetterId: this.state.sentLetters[key].letter_id,\r\n        selectedLetterCategory: cat,\r\n      });\r\n    }\r\n  }\r\n\r\n  getCorrectUserName() {\r\n    if (this.state.selectedLetterCategory === LetterCategory.letters) {\r\n      return this.state.letters[this.state.selectedLetterKey]?.requestor.name;\r\n    } else if (\r\n      this.state.selectedLetterCategory === LetterCategory.sentLetters\r\n    ) {\r\n      return this.state.sentLetters[this.state.selectedLetterKey]?.requestor\r\n        .name;\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  getCorrectLetter() {\r\n    if (this.state.selectedLetterCategory === LetterCategory.letters) {\r\n      return this.state.letters[this.state.selectedLetterKey];\r\n    } else {\r\n      return this.state.sentLetters[this.state.selectedLetterKey];\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { name } = this.props.user;\r\n    const { letters, sentLetters, viewIsOpen, selectedLetterId } = this.state;\r\n\r\n    const lettersList = letters.map((l, k) => (\r\n      <Row key={k}>\r\n        <div className=\"full-width\">\r\n          <span className=\"text-float-left\">({l.letter_id})&nbsp;</span>\r\n          <span className=\"text-float-left\">From: {l.writer.name}</span>\r\n          <Button\r\n            disabled={l.contents.size === 0}\r\n            className=\"left-float-right-button\"\r\n            onClick={() => {\r\n              this.openViewModal(k, LetterCategory.letters);\r\n            }}\r\n          >\r\n            view\r\n          </Button>\r\n        </div>\r\n      </Row>\r\n    ));\r\n\r\n    const sentLettersList = sentLetters.map((l, k) => (\r\n      <Row key={k}>\r\n        <div className=\"full-width\">\r\n          <span className=\"text-float-left\">({l.letter_id})&nbsp;</span>\r\n          <span className=\"text-float-left\">From: {l.writer.name}</span>\r\n\r\n          <Button\r\n            disabled={l.contents.size === 0}\r\n            className=\"left-float-right-button\"\r\n            onClick={() => {\r\n              this.openViewModal(k, LetterCategory.sentLetters);\r\n            }}\r\n          >\r\n            view\r\n          </Button>\r\n          <span className=\"text-float-right\">To: {l.recipient.name}</span>\r\n        </div>\r\n      </Row>\r\n    ));\r\n\r\n    return (\r\n      <div className=\"requestor\">\r\n        <Modal\r\n          id=\"view-modal\"\r\n          show={viewIsOpen}\r\n          onHide={this.closeViewModal.bind(this)}\r\n          backdrop=\"static\"\r\n          animation={false}\r\n          className=\"modal\"\r\n          scrollable={false}\r\n          // size=\"lg\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              {this.getCorrectUserName()} ({selectedLetterId})\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <FileView\r\n              ref={this.viewModal}\r\n              user={this.props.user}\r\n              letter={this.getCorrectLetter()}\r\n              /*fetchUrl={\r\n                \"/api/users/\" +\r\n                publicAddress +\r\n                \"/letters/\" +\r\n                selectedLetterId +\r\n                \"/content\"\r\n              }*/\r\n              onClose={this.closeViewModal.bind(this)}\r\n            ></FileView>\r\n          </Modal.Body>\r\n        </Modal>\r\n\r\n        <div className=\"requestor-header\">\r\n          <h1> Requestor Page </h1>\r\n          <p>\r\n            <em>{name}</em>\r\n          </p>\r\n          <hr></hr>\r\n        </div>\r\n\r\n        <div>\r\n          <h3> Request </h3>\r\n          <input placeholder=\"Writer Id\" />\r\n          <Button className=\"left-float-right-button\" onClick={() => {}}>\r\n            request\r\n          </Button>\r\n          <hr></hr>\r\n        </div>\r\n\r\n        <div className=\"letters\">\r\n          <h3> Letters </h3>\r\n          <Container fluid>{lettersList}</Container>\r\n          <hr></hr>\r\n        </div>\r\n\r\n        <div className=\"sentLetters\">\r\n          <h3> History </h3>\r\n          <Container fluid>{sentLettersList}</Container>\r\n          <hr></hr>\r\n        </div>\r\n\r\n        <div className=\"requestor-footer\">\r\n          <p> Product of Team Gas</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Requestor;\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nimport User from \"../../../interfaces/User.interface\";\r\nimport Letter from \"../../../interfaces/Letter.interface\";\r\nimport LetterCategory from \"../../../interfaces/LetterCategory.enum\";\r\n\r\nimport FileView from \"../../file-view/FileView\";\r\n\r\nimport \"./Recipient.css\";\r\n\r\ninterface RecipientProps {\r\n  user: User;\r\n}\r\ninterface RecipientState {\r\n  letters: Letter[];\r\n  viewIsOpen: boolean;\r\n  selectedLetterKey: number;\r\n  selectedLetterId: number;\r\n  selectedLetterCategory: LetterCategory;\r\n}\r\n\r\nclass Recipient extends React.Component<RecipientProps, RecipientState> {\r\n  private viewModal = React.createRef<FileView>();\r\n\r\n  componentWillMount() {\r\n    // api call to get letters\r\n    this.setState({\r\n      letters: [\r\n        {\r\n          letter_id: 1,\r\n          writer: {\r\n            name: \"Mary Poppins\",\r\n            publicAddress: \"0x314159265358979323\",\r\n            email: \"\",\r\n            jwtToken: \"\",\r\n          },\r\n          requestor: {\r\n            name: \"Simba\",\r\n            publicAddress: \"0xabcdefghijklmnop\",\r\n            email: \"\",\r\n            jwtToken: \"\",\r\n          },\r\n          contents: new File([], \"\"),\r\n        },\r\n        {\r\n          letter_id: 2,\r\n          writer: {\r\n            name: \"Mary Poppins\",\r\n            publicAddress: \"0x314159265358979323\",\r\n            email: \"\",\r\n            jwtToken: \"\",\r\n          },\r\n          requestor: {\r\n            name: \"Simba\",\r\n            publicAddress: \"0xabcdefghijklmnop\",\r\n            email: \"\",\r\n            jwtToken: \"\",\r\n          },\r\n          contents: new File([], \"\"),\r\n        },\r\n      ],\r\n    });\r\n  }\r\n\r\n  constructor(props: RecipientProps) {\r\n    super(props);\r\n    this.state = {\r\n      letters: [],\r\n      viewIsOpen: false,\r\n      selectedLetterKey: -1,\r\n      selectedLetterId: -1,\r\n      selectedLetterCategory: LetterCategory.invalid,\r\n    };\r\n  }\r\n\r\n  closeViewModal() {\r\n    console.log(\"closing view modal\");\r\n    this.setState({ viewIsOpen: false });\r\n  }\r\n\r\n  openViewModal(key: number, cat: LetterCategory) {\r\n    console.log(\"opening view modal\");\r\n    console.log(cat, key);\r\n    if (cat === LetterCategory.letters) {\r\n      this.setState({\r\n        viewIsOpen: true,\r\n        selectedLetterKey: key,\r\n        selectedLetterId: this.state.letters[key].letter_id,\r\n        selectedLetterCategory: cat,\r\n      });\r\n    } else {\r\n      console.log(\"error with letterCategory\");\r\n    }\r\n  }\r\n\r\n  getCorrectUserName() {\r\n    if (this.state.selectedLetterCategory === LetterCategory.letters) {\r\n      return this.state.letters[this.state.selectedLetterKey]?.requestor.name;\r\n    } else {\r\n      console.log(\"error with letterCategory\");\r\n      return;\r\n    }\r\n  }\r\n\r\n  getCorrectLetter() {\r\n    if (this.state.selectedLetterCategory === LetterCategory.letters) {\r\n      return this.state.letters[this.state.selectedLetterKey];\r\n    } else {\r\n      console.log(\"error with letterCategory\");\r\n      return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { name } = this.props.user;\r\n    const { letters, viewIsOpen, selectedLetterId } = this.state;\r\n\r\n    const lettersList = letters.map((l, k) => (\r\n      <Row key={k}>\r\n        <div className=\"full-width\">\r\n          <span className=\"text-float-left\">({l.letter_id})&nbsp;</span>\r\n          <span className=\"text-float-left\">For: {l.requestor.name}</span>\r\n          <Button\r\n            disabled={l.contents.size === 0}\r\n            className=\"left-float-right-button\"\r\n            onClick={() => {\r\n              this.openViewModal(k, LetterCategory.letters);\r\n            }}\r\n          >\r\n            view\r\n          </Button>\r\n        </div>\r\n      </Row>\r\n    ));\r\n\r\n    return (\r\n      <div className=\"recipient\">\r\n        <Modal\r\n          id=\"view-modal\"\r\n          show={viewIsOpen}\r\n          onHide={this.closeViewModal.bind(this)}\r\n          backdrop=\"static\"\r\n          animation={false}\r\n          className=\"modal\"\r\n          scrollable={false}\r\n          // size=\"lg\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              {this.getCorrectUserName()} ({selectedLetterId})\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <FileView\r\n              ref={this.viewModal}\r\n              user={this.props.user}\r\n              letter={this.getCorrectLetter()}\r\n              /*fetchUrl={\r\n                \"/api/users/\" +\r\n                publicAddress +\r\n                \"/letters/\" +\r\n                selectedLetterId +\r\n                \"/content\"\r\n              }*/\r\n              onClose={this.closeViewModal.bind(this)}\r\n            ></FileView>\r\n          </Modal.Body>\r\n        </Modal>\r\n\r\n        <div className=\"recipient-header\">\r\n          <h1> Recipient Page </h1>\r\n          <p>\r\n            <em>{name}</em>\r\n          </p>\r\n          <hr></hr>\r\n        </div>\r\n\r\n        <div className=\"letters\">\r\n          <h3> Letters </h3>\r\n          <Container fluid>{lettersList}</Container>\r\n          <hr></hr>\r\n        </div>\r\n\r\n        <div className=\"recipient-footer\">\r\n          <p> Product of Team Gas</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Recipient;\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport User from \"../../../interfaces/User.interface\";\r\nimport \"./Login.css\";\r\n\r\nimport { web3 } from \"../../../App\";\r\nconst headers = new Headers();\r\nheaders.set(\"Access-Control-Allow-Origin\", \"*\");\r\nheaders.set(\"Content-Type\", \"application/json\");\r\n\r\n// let web3: Web3;\r\ninterface LoginProps {\r\n  user: User;\r\n  callback: (u: User) => void;\r\n}\r\ninterface LoginState {\r\n  inputName: string;\r\n  displayMessage: string;\r\n  loginMode: boolean;\r\n}\r\n\r\nclass Login extends React.Component<LoginProps, LoginState> {\r\n  constructor(props: LoginProps) {\r\n    super(props);\r\n    this.state = {\r\n      inputName: \"\",\r\n      displayMessage: \"\",\r\n      loginMode: true,\r\n    };\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.onLoginClick = this.onLoginClick.bind(this);\r\n    this.signMessage = this.signMessage.bind(this);\r\n    this.authenticate = this.authenticate.bind(this);\r\n  }\r\n\r\n  onSignupClick(/*event: React.MouseEvent<HTMLInputElement, MouseEvent>*/) {\r\n    const publicAddress = this.props.user.publicAddress;\r\n\r\n    // delete after implement router in which login will not be displayed unless connected to metamask\r\n    if (publicAddress === \"\") {\r\n      // comment out conditional for testing signup\r\n      console.log(\"Invalid public address. Connect to Metamask.\");\r\n      this.setState({ displayMessage: \"Please Connect to Metamask.\" });\r\n      return;\r\n    }\r\n\r\n    if (this.state.inputName.length <= 1) {\r\n      console.log(this.state.inputName);\r\n      console.log(\"Please enter a name.\");\r\n      this.setState({ displayMessage: \"Please Enter Your Name.\" });\r\n      return;\r\n    }\r\n\r\n    this.signup({\r\n      publicAddress: publicAddress,\r\n      inputName: this.state.inputName,\r\n    })\r\n      // metamask popup to sign\r\n      .then(this.signMessage)\r\n      // send signature to backend\r\n      .then(this.authenticate)\r\n      //.then(this.doStuffWithToken) // after receiving the token\r\n      .catch((err: Error) => {\r\n        console.log(err);\r\n      });\r\n\r\n    return;\r\n  }\r\n\r\n  onLoginClick(/*event: React.MouseEvent<HTMLInputElement, MouseEvent>*/) {\r\n    console.log(\"login clicked.\");\r\n    // event.preventDefault();\r\n\r\n    const publicAddress = this.props.user.publicAddress; // comment out for testing signup\r\n    // const publicAddress = \"newAddress\"; // uncomment for testing signup\r\n\r\n    // delete after implement router in which login will not be displayed unless connected to metamask\r\n    if (publicAddress === \"\") {\r\n      // comment out conditional for testing signup\r\n      console.log(\"Invalid public address. Connect to Metamask.\");\r\n      this.setState({ displayMessage: \"Please Connect to Metamask.\" });\r\n      return;\r\n    }\r\n\r\n    console.log(\"public address:\", publicAddress);\r\n\r\n    const init: RequestInit = {\r\n      method: \"GET\",\r\n      headers,\r\n    };\r\n\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/users/${publicAddress}`, init)\r\n      .then((response) => {\r\n        console.log(\"logging response\");\r\n        console.log(response);\r\n        return response.json();\r\n      })\r\n      .then((users) => {\r\n        console.log(users);\r\n\r\n        if (users[0] == null) {\r\n          console.log(\"need to signup.\");\r\n          this.setState({\r\n            displayMessage: \"No Existing Account. Sign Up Instead.\",\r\n            // loginMode: false // automatically redirect to signup form\r\n          });\r\n          // this.setState({loginMode: false}); // automatically redirect to signup form\r\n          return Promise.reject(\"no existing account\");\r\n        }\r\n        return users[0];\r\n      })\r\n      // metamask popup to sign\r\n      .then(this.signMessage)\r\n      // send signature to backend\r\n      .then(this.authenticate)\r\n      //.then(this.doStuffWithToken) // after receiving the token\r\n      .catch((err: Error) => {\r\n        console.log(err);\r\n      });\r\n\r\n    return;\r\n  }\r\n\r\n  async signup({\r\n    publicAddress,\r\n    inputName,\r\n  }: {\r\n    publicAddress: string;\r\n    inputName: string;\r\n  }) {\r\n    console.log(\"publicAddress:\", publicAddress, \"inputName:\", inputName);\r\n    this.setState({ displayMessage: \"Signing You Up . . .\" });\r\n    return await fetch(`${process.env.REACT_APP_BACKEND_URL}/users`, {\r\n      body: JSON.stringify({\r\n        publicAddress: publicAddress,\r\n        inputName: inputName,\r\n      }),\r\n      headers,\r\n      method: \"POST\",\r\n    })\r\n      .then((response) => {\r\n        console.log(\"logging response\");\r\n        console.log(response);\r\n        return response.json();\r\n      })\r\n      .then((users) => {\r\n        console.log(users);\r\n        console.log(\"signup finish\");\r\n        return users[0];\r\n      });\r\n    // .then((response) => response.json()) // needs to handle response in which user has existing account\r\n    // .catch((err: Error) => console.log(err));\r\n  }\r\n\r\n  async signMessage({\r\n    publicAddress,\r\n    nonce,\r\n  }: {\r\n    publicAddress: string;\r\n    nonce: string;\r\n  }): Promise<{ publicAddress: string; signature: string }> {\r\n    // this.setState({displayMessage: \"Sign the Message to Confirm Public Address.\"})\r\n    console.log(\"signing the nonce\");\r\n    console.log(nonce);\r\n    return new Promise((resolve, reject) => {\r\n      // web3.eth.sign doesn't seem to work (never finishes)\r\n      web3.eth.personal\r\n        .sign(\r\n          web3.utils.utf8ToHex(`I am signing my one-time nonce: ${nonce}`),\r\n          publicAddress,\r\n          \"\",\r\n          (err, signature) => {\r\n            if (err) {\r\n              console.log(\"error when signing\");\r\n              return reject(err);\r\n            }\r\n            console.log(\"message signed\");\r\n            return resolve({ publicAddress, signature });\r\n          }\r\n        )\r\n        .then(console.log)\r\n        .catch((err: Error) => {\r\n          console.log();\r\n        });\r\n    });\r\n  }\r\n\r\n  async authenticate({\r\n    publicAddress,\r\n    signature,\r\n  }: {\r\n    publicAddress: string;\r\n    signature: string;\r\n  }) {\r\n    console.log(\"authenticating\");\r\n    this.setState({\r\n      displayMessage: this.state.loginMode\r\n        ? \"Logging You In . . .\"\r\n        : \"Signing You Up . . .\",\r\n    });\r\n    return fetch(`${process.env.REACT_APP_BACKEND_URL}/auth`, {\r\n      body: JSON.stringify({ publicAddress, signature }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"POST\",\r\n    })\r\n      .then((response) => {\r\n        let u: User;\r\n        let h: Headers = response.headers;\r\n        const j = h.get(\"jwtToken\");\r\n        response\r\n          .json()\r\n          .then((body) => {\r\n            u = body[0];\r\n            let jwtToken = j ? j : undefined;\r\n            if (this.props.user.publicAddress !== u.publicAddress) {\r\n              console.log(\"error: publicAddresses do not match\");\r\n            } else if (jwtToken) {\r\n              console.log(jwtToken);\r\n              this.props.callback({\r\n                publicAddress: this.props.user.publicAddress,\r\n                name: u.name,\r\n                email: u.email,\r\n                jwtToken: jwtToken,\r\n              });\r\n            } else {\r\n              console.log(\"error with jwtToken\");\r\n            }\r\n          })\r\n          .catch((err: Error) => {\r\n            console.log(err);\r\n          });\r\n      })\r\n      .catch((err: Error) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  handleInputChange(event: any) {\r\n    this.setState({ inputName: event.target.value });\r\n  }\r\n\r\n  toggleMode() {\r\n    this.setState({ loginMode: !this.state.loginMode, displayMessage: \"\" });\r\n  }\r\n\r\n  render() {\r\n    const loginDisplay = (\r\n      <div>\r\n        <Button\r\n          className=\"left-button\"\r\n          onClick={() => {\r\n            this.toggleMode();\r\n          }}\r\n        >\r\n          Sign Up\r\n        </Button>\r\n        <Button\r\n          className=\"left-button\"\r\n          onClick={() => {\r\n            this.onLoginClick();\r\n          }}\r\n        >\r\n          Login\r\n        </Button>\r\n      </div>\r\n    );\r\n\r\n    const signupDisplay = (\r\n      <form>\r\n        <label className=\"label-top\">\r\n          Name &nbsp;\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Not Yet Verified\"\r\n            value={this.state.inputName}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n        <Button\r\n          className=\"left-float-right-button\"\r\n          onClick={() => {\r\n            this.toggleMode();\r\n            this.setState({ inputName: \"\" });\r\n          }}\r\n        >\r\n          Back\r\n        </Button>\r\n        <Button\r\n          className=\"left-float-right-button\"\r\n          onClick={() => {\r\n            this.onSignupClick();\r\n          }}\r\n        >\r\n          Sign Up\r\n        </Button>\r\n      </form>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"login\">\r\n          <div>{this.state.loginMode ? loginDisplay : signupDisplay}</div>\r\n          <div className=\"alert\"> {this.state.displayMessage}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Login;\r\n","import React from \"react\";\r\nimport User from \"../../../interfaces/User.interface\";\r\nimport \"./Dashboard.css\";\r\n\r\nconst headers = new Headers();\r\nheaders.set(\"Access-Control-Allow-Origin\", \"*\");\r\nheaders.set(\"Content-Type\", \"application/json\");\r\n\r\ninterface DashboardProps {\r\n  user: User;\r\n}\r\ninterface DashboardState {\r\n}\r\n\r\nclass Dashboard extends React.Component<DashboardProps, DashboardState> {\r\n  constructor(props: DashboardProps) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"dashboard\">\r\n          Dashboard\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Dashboard;\r\n","import { TutorialToken } from \"./contract-types/TutorialToken\"; // import is correct\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\r\nimport TutorialTokenContractData from \"./contract-data/TutorialToken.json\";\r\nimport BN from \"bn.js\";\r\n\r\nimport Nav from \"./components/navbar/Nav\";\r\nimport HomePage from \"./components/pages/home/Home\";\r\nimport WriterPage from \"./components/pages/writer/Writer\";\r\nimport RequestorPage from \"./components/pages/requestor/Requestor\";\r\nimport RecipientPage from \"./components/pages/recipient/Recipient\";\r\nimport LoginPage from \"./components/pages/login/Login\";\r\nimport DashboardPage from \"./components/pages/dashboard/Dashboard\";\r\n\r\nimport User from \"./interfaces/User.interface\";\r\n\r\nimport * as ROUTES from \"./common/routes\";\r\n\r\nimport Web3 from \"web3\";\r\nexport let web3: Web3;\r\n\r\nexport const GAS_LIMIT_STANDARD = 6000000;\r\nexport let accounts: string[];\r\nlet web3Provider;\r\n\r\nlet contract: any;\r\nconst ERC20_NETWORK = \"https://services.jade.builders/core-geth/kotti/1.11.2\";\r\nexport async function deployContract<T>(\r\n  contractName: string,\r\n  abi: any,\r\n  code: any,\r\n  ...args: any[]\r\n): Promise<T> {\r\n  const Contract = new web3.eth.Contract(abi);\r\n  const contractResult = await Contract.deploy({ data: code }).send({\r\n    from: accounts[0],\r\n  });\r\n  return contractResult as any;\r\n}\r\n\r\nexport async function deployTutorialToken(): Promise<TutorialToken> {\r\n  console.log(\"Deploying Contract from innner deploy tutorial token method: \");\r\n  var contract = await deployContract<TutorialToken>(\r\n    \"TutorialToken\",\r\n    TutorialTokenContractData.abi,\r\n    TutorialTokenContractData.bytecode,\r\n    0\r\n  );\r\n  console.log(\"Contract from innner deploy tutorial token method: \" + contract);\r\n  return contract;\r\n}\r\n\r\ntype MyProps = {};\r\ntype MyState = {\r\n  numErcBeingTraded: number;\r\n  contract: TutorialToken;\r\n  connectedTo: boolean; // metamask\r\n  loggedIn: boolean; // our app\r\n  user: User;\r\n};\r\n\r\nclass App extends React.Component<MyProps, MyState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      numErcBeingTraded: 0,\r\n      contract: {} as TutorialToken,\r\n      connectedTo: false,\r\n      loggedIn: false,\r\n      user: { publicAddress: \"\", name: \"\", email: \"\", jwtToken: \"\" },\r\n    };\r\n    this.onConnect = this.onConnect.bind(this);\r\n    this.onLogin = this.onLogin.bind(this);\r\n    //this.handleErcInputChange = this.handleErcInputChange.bind(this);\r\n  }\r\n\r\n  handleErcInputChange(event: any) {\r\n    this.setState({\r\n      numErcBeingTraded: event.target.value,\r\n    });\r\n    console.log(\"Num of ERC wanted to trade: \" + this.state.numErcBeingTraded);\r\n    var rate = this.state.contract.methods.rate().call();\r\n    var numErc = new BN(this.state.numErcBeingTraded);\r\n    //var numTokens = rate.mul(numErc);\r\n    //console.log(\"Num of Tutorial Tokens you can receive: \" + numTokens.toString());\r\n  }\r\n\r\n  async onConnect() {\r\n    const ethereum = (window as any).ethereum;\r\n    await ethereum.enable();\r\n    web3Provider = (window as any).web3.currentProvider;\r\n    // NOTE you might need this\r\n    //await ethereum.send('eth_requestAccounts')\r\n\r\n    web3 = new Web3(web3Provider);\r\n    accounts = await ethereum.request({ method: \"eth_accounts\" });\r\n    // contract = await deployTutorialToken(); // temporary disable\r\n\r\n    this.setState({\r\n      contract,\r\n      connectedTo: true,\r\n      user: { publicAddress: accounts[0], name: \"\", email: \"\", jwtToken: \"\" },\r\n      loggedIn: true, // testing purposes only\r\n    });\r\n  }\r\n\r\n  onLogin(u: User) {\r\n    console.log(\"login complete\");\r\n    this.setState({ user: u, loggedIn: true });\r\n  }\r\n\r\n  render() {\r\n    const home = <HomePage user={this.state.user} />;\r\n    const login = (\r\n      <LoginPage callback={this.onLogin.bind(this)} user={this.state.user} />\r\n    );\r\n    const dashboard = <DashboardPage user={this.state.user} />;\r\n    const requestor = <RequestorPage user={this.state.user} />;\r\n    const writer = <WriterPage user={this.state.user} />;\r\n    const recipient = <RecipientPage user={this.state.user} />;\r\n\r\n    return (\r\n      <div>\r\n        <Nav\r\n          user={this.state.user}\r\n          connectedTo={this.state.connectedTo}\r\n          onConnect={this.onConnect}\r\n          loggedIn={this.state.loggedIn}\r\n        />\r\n        {this.state.loggedIn ? <Redirect to=\"/dashboard\" /> : null}\r\n        <div>\r\n          <Route exact path={ROUTES.HOME} render={() => home} />\r\n          <Route exact path={ROUTES.LOGIN} render={() => login} />\r\n          <Route exact path={ROUTES.DASHBOARD} render={() => dashboard} />\r\n          <Route exact path={ROUTES.REQUESTOR} render={() => requestor} />\r\n          <Route exact path={ROUTES.WRITER} render={() => writer} />\r\n          <Route exact path={ROUTES.RECIPIENT} render={() => recipient} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./assets/styles/app.scss\";\r\nimport { BigNumber } from \"bignumber.js\";\r\n//import * as TruffleContracts from \".\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\n// const Web3 = require('web3');\r\n\r\n// let web3: typeof Web3\r\n// let web3Provider;\r\n//web3 = new Web3(new Web3.providers.HttpProvider('http://127.0.0.1:9545')); // was 9545 before\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}