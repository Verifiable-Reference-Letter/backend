{"version":3,"sources":["index.tsx","services/CryptService.ts","nav/Nav.tsx","routes.tsx","home/Home.tsx","services/CacheService.ts","components/FileUpload/FileUpload.tsx","components/Profile/index.ts","components/Profile/Profile.tsx","components/FileView/FileView.tsx","components/Confirm/Confirm.tsx","components/Send/Send.tsx","components/FileHistory/index.ts","components/FileHistory/FileHistory.tsx","WriterLetterDisplay/WriterLetterDisplay.tsx","writer/Writer.tsx","components/Select/index.ts","components/Select/Select.tsx","components/Confirm/index.ts","RequestorLetterDisplay/RequestorLetterDisplay.tsx","requestor/Requestor.tsx","RecipientLetterDisplay/RecipientLetterDisplay.tsx","RecipientUserDisplay/RecipientUserDisplay.tsx","recipient/Recipient.tsx","login/Login.tsx","dashboard/Dashboard.tsx","App.tsx"],"names":["ReactDOM","render","document","getElementById","CryptService","publicKey","ethereum","this","window","enable","then","catch","e","file","publicAddress","createFileData","fileData","fileDataString","console","log","letterType","request","method","params","encryptedMessage","EthUtil","Buffer","from","JSON","stringify","SigUtil","data","length","Promise","resolve","reject","pubKey","letterDetails","hash","letter","web3","eth","personal","sign","err","signedLetter","message","signature","letterTitle","letterUrl","decryptedMessage","parse","reader","FileReader","undefined","readAsDataURL","onload","result","name","type","Nav","props","onConnect","bind","brandLink","loggedIn","Navbar","bg","variant","Brand","onClick","href","Toggle","Collapse","className","connectedTo","Button","Text","user","Dropdown","id","Menu","alignRight","to","style","textDecoration","Item","React","Component","headers","Headers","set","Home","state","CacheService","minutes","memCache","memoryCache","Cache","duration","key","value","put","get","FileUpload","File","displayMessage","buffering","onFormSubmit","onChange","setState","target","files","size","restrictPdf","setTimeout","onUpload","newDisplayMessage","Form","onSubmit","Group","onClose","Profile","Card","Image","src","Spinner","animation","FileView","profileIsOpen","selectedPublicAddress","fetchUrl","retrieveProfileFromServer","init","body","auth","jwtToken","fetch","process","response","json","selectedUserProfile","width","height","Modal","show","onHide","closeProfileModal","backdrop","scrollable","Header","closeButton","Title","Body","Confirm","confirmed","customMessage","event","custom","Col","Row","controlId","Label","Control","placeholder","handleMessageChange","disabled","onConfirm","Send","cryptService","keys","unsentRecipientKeys","i","push","loadingContents","sending","encrypted","letterId","getLetterContents","userKey","encryptedLetter","encryptSend","signLetter","encryptedLetterForm","letterContents","letterSignature","letterRecipient","uploadEncryptedLetterForm","status","decrypt","recipientList","encryptAndUpload","icon","faCheckSquare","FileHistory","userProfiles","collapseIsOpen","history","Map","userProfile","historyList","openProfileModal","in","sentAt","WriterLetterDisplay","uploadModal","createRef","viewModal","cacheService","loadingHistory","loadingSend","historyIsOpen","messageIsOpen","uploadIsOpen","sendIsOpen","viewIsOpen","confirmIsOpen","uploadedFile","uploadContentsToServer","encrypt","encryptedFile","closeUploadModal","onReload","current","changeDisplayMessage","numUnsentRecipients","uploadedAt","retrieveUnsentRecipientKeysFromServer","closeSendModal","userKeys","retrieveLetterContentsFromServer","openConfirmModal","retrieveHistoryFromServer","numRecipients","stopPropagation","letterRequestor","openSendModal","openUploadModal","closeViewModal","openViewModal","closeHistoryModal","openHistoryModal","aria-controls","aria-expanded","ref","openMessageModal","requestedAt","toString","closeConfirmModal","onUploadSubmit","onSendSubmit","Writer","letters","loadingLetters","loadLetterList","lettersList","map","l","k","writerLetters","Select","selectedRecipients","previouslySelectedRecipients","users","header","selectRecipients","InputGroup","multiple","labelKey","filterBy","options","paginate","selected","renderMenuItemChildren","option","slice","recipientsList","OverlayTrigger","overlay","Tooltip","placement","pointerEvents","RequestorLetterDisplay","loadingSelect","selectIsOpen","sendUpdatedLetterRecipientsToServer","retrieveUnsentRecipientsFromServer","letterWriter","closeSelectModal","openSelectModal","filter","onSelectSubmit","Requestor","writerTypeahead","dualMode","selectedWriter","userInit","letterInit","sendNewLetterRequestToServer","selectWriter","requestorSelect","requestorLetter","RecipientLetterDisplay","letterRecipientContents","RecipientUserDisplay","requestor","onView","Recipient","requestors","loadingRequestors","selectedUser","loadLettersList","letterFetchUrl","requestorList","r","toggleLetterModal","recipientRequestors","recipientLetters","Login","inputEmail","inputName","loginMode","handleInputNameChange","handleInputEmailChange","onLoginClick","signMessage","authenticate","alert","signup","getPublicKey","email","nonce","utils","utf8ToHex","j","callback","loginDisplay","toggleMode","signupDisplay","FormControl","onSignupClick","Dashboard","accounts","web3Provider","App","numErcBeingTraded","contract","onLogin","methods","rate","call","BN","currentProvider","Web3","u","home","login","dashboard","writer","recipient","exact","path"],"mappings":"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","file":"static/js/main.8d59085d.chunk.js","sourcesContent":["import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./assets/styles/app.scss\";\r\n// import { BigNumber } from \"bignumber.js\";\r\n//import * as TruffleContracts from \".\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\n// const Web3 = require('web3');\r\n\r\n// let web3: typeof Web3\r\n// let web3Provider;\r\n//web3 = new Web3(new Web3.providers.HttpProvider('http://127.0.0.1:9545')); // was 9545 before\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import * as EthUtil from \"ethereumjs-util\";\r\nimport * as SigUtil from \"eth-sig-util\";\r\nimport FileData from \"../common/FileData.interface\";\r\nimport { web3 } from \"../App\";\r\n\r\nclass CryptService {\r\n  private publicKey: string = \"\";\r\n  private ethereum: any;\r\n\r\n  constructor() {\r\n    this.publicKey = \"\";\r\n    this.ethereum = (window as any).ethereum;\r\n    this.ethereum\r\n      .enable()\r\n      .then(() => {})\r\n      .catch((e: Error) => {});\r\n  }\r\n\r\n  async encrypt(file: File, publicAddress: string): Promise<string> {\r\n    try {\r\n      const fileData = await this.createFileData(file); // rejects on failure\r\n\r\n      let fileDataString: string | null = null;\r\n      console.log(publicAddress);\r\n      console.log(fileData.letterType);\r\n      return this.ethereum\r\n        .request({\r\n          method: \"eth_getEncryptionPublicKey\",\r\n          params: [publicAddress], // you must have access to the specified account\r\n        })\r\n        .then((publicKey: string) => {\r\n          console.log(\"publicKey\", publicKey);\r\n          this.publicKey = publicKey;\r\n\r\n          const encryptedMessage = EthUtil.bufferToHex(\r\n            Buffer.from(\r\n              JSON.stringify(\r\n                SigUtil.encrypt(\r\n                  this.publicKey,\r\n                  { data: JSON.stringify(fileData) },\r\n                  \"x25519-xsalsa20-poly1305\"\r\n                )\r\n              ),\r\n              \"utf8\"\r\n            )\r\n          );\r\n          console.log(encryptedMessage.length);\r\n          fileDataString = encryptedMessage;\r\n          return Promise.resolve(fileDataString);\r\n        })\r\n        .catch((e: Error) => {\r\n          console.log(e);\r\n          return Promise.resolve(fileDataString);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"error in file reader and/or encryption\");\r\n      return Promise.reject(\"error in file reader and/or encryption\");\r\n    }\r\n  }\r\n\r\n  async encryptSend(fileData: FileData, pubKey: string): Promise<string> {\r\n    console.log(pubKey);\r\n\r\n    try {\r\n      // const fileData = await this.createFileData(file);\r\n      let fileDataString: string | null = null;\r\n      console.log(fileData.letterType);\r\n      const encryptedMessage = EthUtil.bufferToHex(\r\n        Buffer.from(\r\n          JSON.stringify(\r\n            SigUtil.encrypt(\r\n              pubKey,\r\n              { data: JSON.stringify(fileData) },\r\n              \"x25519-xsalsa20-poly1305\"\r\n            )\r\n          ),\r\n          \"utf8\"\r\n        )\r\n      );\r\n      console.log(encryptedMessage.length);\r\n      fileDataString = encryptedMessage;\r\n      return Promise.resolve(fileDataString);\r\n    } catch (error) {\r\n      console.log(\"error in file reader and/or encryption\", error);\r\n      return Promise.reject(\"error in file reader and/or encryption\");\r\n    }\r\n  }\r\n\r\n  async hashFile(letterDetails: string): Promise<string> {\r\n    try {\r\n      let hash = EthUtil.bufferToHex(\r\n        EthUtil.keccak256(Buffer.from(letterDetails, \"utf8\"))\r\n      );\r\n      console.log(\"Hash is: \" + hash);\r\n      return hash;\r\n    } catch (error) {\r\n      console.log(\"error in file reader and/or fileHash\");\r\n      return \"error in file reader and/or fileHash\";\r\n    }\r\n  }\r\n\r\n  async signLetter(letter: string, publicAddress: string): Promise<string> {\r\n    return new Promise((resolve, reject) => {\r\n      web3.eth.personal\r\n        .sign(letter, publicAddress, \"\", (err, signedLetter) => {\r\n          if (err) {\r\n            console.log(\"error when signing\");\r\n            return reject(err);\r\n          }\r\n          console.log(\"message signed\");\r\n          return resolve(signedLetter);\r\n        })\r\n        .then(console.log)\r\n        .catch((err: Error) => {\r\n          console.log();\r\n        });\r\n    });\r\n  }\r\n\r\n  async sign(file: File, publicAddress: string): Promise<string> {\r\n    try {\r\n      const fileData = await this.createFileData(file); // rejects on failure\r\n      let signedFile: string | null = null;\r\n      let message = JSON.stringify(fileData);\r\n\r\n      return new Promise((resolve, reject) => {\r\n        web3.eth.personal\r\n          .sign(message, publicAddress, \"\", (err, signature) => {\r\n            if (err) {\r\n              console.log(\"error when signing\");\r\n              return reject(err);\r\n            }\r\n            console.log(\"message signed\");\r\n            // Did this to test signature\r\n            // web3.eth.personal.ecRecover(message, signature).then((account: string) => {\r\n            // \t//console.log(\"Successfully signed letter\")\r\n            // \tif (account != publicAddress) {\r\n            // \t\tconsole.log(\"Successfully signed letter\")\r\n            // \t}\r\n            // });\r\n            return resolve(signature);\r\n          })\r\n          .then(console.log)\r\n          .catch((err: Error) => {\r\n            console.log();\r\n          });\r\n      });\r\n    } catch (error) {\r\n      console.log(\"error in file reader and/or digital signature\");\r\n      return Promise.reject(\"error in file reader and/or digital signature\");\r\n    }\r\n  }\r\n\r\n  async decrypt(file: string, publicAddress: string): Promise<FileData> {\r\n    console.log(publicAddress);\r\n    console.log(file);\r\n    let fileData: FileData = {\r\n      letterTitle: \"\",\r\n      letterType: \"invalid\",\r\n      letterUrl: \"\",\r\n    };\r\n    return this.ethereum\r\n      .request({\r\n        method: \"eth_decrypt\",\r\n        params: [file, publicAddress],\r\n      })\r\n      .then((decryptedMessage: string) => {\r\n        console.log(decryptedMessage.length);\r\n        fileData = JSON.parse(decryptedMessage);\r\n        console.log(\"parsed\");\r\n        return Promise.resolve(fileData);\r\n      })\r\n      .catch((e: Error) => {\r\n        console.log(e);\r\n        return Promise.reject(\"failure to decrypt\");\r\n      });\r\n  }\r\n\r\n  async createFileData(file: File): Promise<FileData> {\r\n    let fileData: FileData = {\r\n      letterUrl: \"\",\r\n      letterTitle: \"\",\r\n      letterType: \"invalid\",\r\n    };\r\n    return new Promise((resolve, reject) => {\r\n      let reader = new FileReader();\r\n      if (file !== undefined) {\r\n        reader.readAsDataURL(file);\r\n        reader.onload = (e: any) => {\r\n          if (typeof reader.result === \"string\") {\r\n            console.log(\"letterUrl obtained\");\r\n            // console.log(reader.result);\r\n            fileData.letterTitle = file.name;\r\n            fileData.letterType = file.type;\r\n            fileData.letterUrl = reader.result;\r\n            resolve(fileData);\r\n            // console.log(fileData);\r\n            // { letterUrl: reader.result, letterTitle: file.name, letterType : file.type };\r\n          } else {\r\n            console.log(\"error with reader.result type\");\r\n            reject(\"failed to get reader.result type string\");\r\n          }\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  async getPublicKey(publicAddress: string): Promise<string | null> {\r\n    try {\r\n      return this.ethereum.request({\r\n        method: \"eth_getEncryptionPublicKey\",\r\n        params: [publicAddress], // you must have access to the specified account\r\n      });\r\n    } catch (error) {\r\n      console.log(\"error in encrypting letter\", error);\r\n      return null;\r\n    }\r\n  }\r\n}\r\nexport default CryptService;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./Nav.css\";\r\n\r\nimport * as ROUTES from \"../routes\";\r\nimport UserAuth from \"../common/UserAuth.interface\";\r\n\r\ntype NavProps = {\r\n  user: UserAuth;\r\n  connectedTo: boolean; // metamask\r\n  onConnect: () => void;\r\n  loggedIn: boolean; // app\r\n};\r\ntype NavState = {};\r\n\r\nclass Nav extends React.Component<NavProps, NavState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.onConnect = this.onConnect.bind(this);\r\n  }\r\n\r\n  onConnect() {\r\n    // callback\r\n    this.props.onConnect();\r\n  }\r\n\r\n  render() {\r\n    const brandLink = this.props.loggedIn ? \"/dashboard\" : \"/\";\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand\r\n          onClick={() => {\r\n            return false;\r\n          }}\r\n          href={brandLink}\r\n        >\r\n          ETC Reference Letter dApp\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle />\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n          {!this.props.connectedTo && (\r\n            <Button\r\n              className=\"connect\"\r\n              onClick={() => {\r\n                this.onConnect();\r\n              }}\r\n            >\r\n              Connect\r\n            </Button>\r\n          )}\r\n          {this.props.connectedTo && (\r\n            <Navbar.Text className=\"navText\">\r\n              Connected to Metamask: <span>{this.props.connectedTo ? this.props.user.publicAddress : \"--\"}</span>\r\n            </Navbar.Text>\r\n          )}\r\n        </Navbar.Collapse>\r\n        <Dropdown>\r\n          <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n            Menu\r\n          </Dropdown.Toggle>\r\n          {this.props.loggedIn && (\r\n            <Dropdown.Menu alignRight={true}>\r\n              <Link to={ROUTES.HOME} style={{ textDecoration: \"none\" }}>\r\n                <li>\r\n                  <Dropdown.Item href=\"#/action-0\">Home</Dropdown.Item>\r\n                </li>\r\n              </Link>\r\n              {/* <Link to={ROUTES.LOGIN} style={{ textDecoration: \"none\" }}>\r\n              <li>\r\n                <Dropdown.Item href=\"#/action-1\">Login</Dropdown.Item>\r\n              </li>\r\n            </Link> */}\r\n              <Link to={ROUTES.DASHBOARD} style={{ textDecoration: \"none\" }}>\r\n                <li>\r\n                  <Dropdown.Item href=\"#/action-2\">Dashboard</Dropdown.Item>\r\n                </li>\r\n              </Link>\r\n              <Link to={ROUTES.REQUESTOR} style={{ textDecoration: \"none\" }}>\r\n                <li>\r\n                  <Dropdown.Item href=\"#/action-3\">Requestor</Dropdown.Item>\r\n                </li>\r\n              </Link>\r\n              <Link to={ROUTES.WRITER} style={{ textDecoration: \"none\" }}>\r\n                <li>\r\n                  <Dropdown.Item href=\"#/action-4\">Writer</Dropdown.Item>\r\n                </li>\r\n              </Link>\r\n              <Link to={ROUTES.RECIPIENT} style={{ textDecoration: \"none\" }}>\r\n                <li>\r\n                  <Dropdown.Item href=\"#/action-5\">Recipient</Dropdown.Item>\r\n                </li>\r\n              </Link>\r\n            </Dropdown.Menu>\r\n          )}\r\n          {!this.props.loggedIn && (\r\n            <Dropdown.Menu alignRight={true}>\r\n              <Link to={ROUTES.HOME} style={{ textDecoration: \"none\" }}>\r\n                <li>\r\n                  <Dropdown.Item href=\"#/action-0\">Home</Dropdown.Item>\r\n                </li>\r\n              </Link>\r\n              <Link to={ROUTES.LOGIN} style={{ textDecoration: \"none\" }}>\r\n                <li>\r\n                  <Dropdown.Item href=\"#/action-1\">Login</Dropdown.Item>\r\n                </li>\r\n              </Link>\r\n            </Dropdown.Menu>\r\n          )}\r\n        </Dropdown>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\nexport default Nav;\r\n","export const HOME = '/';\r\nexport const LOGIN = '/login';\r\nexport const DASHBOARD = \"/dashboard\";\r\nexport const RECIPIENT = '/recipient';\r\nexport const REQUESTOR = '/requestor';\r\nexport const WRITER = '/writer';\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport User from \"../common/UserAuth.interface\";\r\nimport * as ROUTES from \"../routes\";\r\nimport \"./Home.css\";\r\n\r\nconst headers = new Headers();\r\nheaders.set(\"Access-Control-Allow-Origin\", \"*\");\r\nheaders.set(\"Content-Type\", \"application/json\");\r\n\r\ninterface HomeProps {\r\n  user: User;\r\n}\r\ninterface HomeState {}\r\n\r\nclass Home extends React.Component<HomeProps, HomeState> {\r\n  constructor(props: HomeProps) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home\">\r\n        <Redirect to={ROUTES.LOGIN} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Home;\r\n","import memoryCache, { CacheClass } from 'memory-cache';\r\n\r\nclass CacheService<K, V> {\r\n  private memCache: CacheClass<K, V> = new memoryCache.Cache();\r\n  private duration: number; // in milliseconds\r\n  constructor(minutes: number) {\r\n    this.duration = 1000 * minutes * 60;\r\n  }\r\n  put(key: K, value: V) {\r\n    console.log(\"put\", key, value);\r\n    this.memCache.put(key, value, this.duration);\r\n  }\r\n  get(key: K) {\r\n    console.log(\"get\", key);\r\n    return this.memCache.get(key);\r\n  }\r\n} export default CacheService;","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nimport User from \"../../common/UserAuth.interface\";\r\nimport \"./FileUpload.css\";\r\nimport { DropdownDivider } from \"react-bootstrap/Dropdown\";\r\n\r\ninterface FileUploadProps {\r\n  user: User;\r\n  restrictPdf?: boolean;\r\n  onUpload: (file: File) => void;\r\n  onClose: () => void;\r\n}\r\ninterface FileUploadState {\r\n  file: File;\r\n  displayMessage: string;\r\n  buffering: boolean;\r\n}\r\n\r\nclass FileUpload extends React.Component<FileUploadProps, FileUploadState> {\r\n  constructor(props: FileUploadProps) {\r\n    super(props);\r\n    this.state = {\r\n      file: new File([], \"\"),\r\n      displayMessage: \"\",\r\n      buffering: false,\r\n    };\r\n    this.onFormSubmit = this.onFormSubmit.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  onChange(e: any) {\r\n    console.log(\"file changed\");\r\n    this.setState({ file: e.target.files[0] });\r\n  }\r\n\r\n  onFormSubmit() {\r\n    const file = this.state.file;\r\n    console.log(file);\r\n    if (!file || file.size === 0) {\r\n      console.log(\"no file uploaded\");\r\n      this.setState({ displayMessage: \"No File Uploaded.\" });\r\n    } else if (this.props.restrictPdf && file.type !== \"application/pdf\") {\r\n      console.log(\"not a pdf\");\r\n      this.setState({ displayMessage: \"Please Upload a PDF.\" });\r\n    } else {\r\n      console.log(\"checking if upload to server\");\r\n      this.setState({ buffering: true });\r\n      setTimeout(() => {\r\n        this.props.onUpload(file);\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  /*encryptFile(file: File) {\r\n    console.log(\"pretending to encrypt file\");\r\n    this.fileUploadToServer(file);\r\n  }\r\n\r\n  fileUploadToServer(file: File) {\r\n    console.log(\"sending file to server\");\r\n\r\n    // let fileForm: string = this.encryptFile(file);\r\n    \r\n    // REMOVE:\r\n    let fileForm: FormData = new FormData();\r\n    fileForm.append(\"file\", file);\r\n    // END REMOVE\r\n\r\n    this.setState({displayMessage: \"Uploading File.\"});\r\n\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL}` + this.props.fetchUrl, {\r\n      body: fileForm,\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"mutlipart/form-data\",\r\n        jwtToken: this.props.user.jwtToken,\r\n      },\r\n      method: \"POST\",\r\n    })\r\n      .then((response: any) => {\r\n        console.log(\"body\", response.json);\r\n        console.log(\"status\", response.status);\r\n        if (response.status === 200) {\r\n          this.props.onUpload(this.state.file);\r\n        } else {\r\n          this.changeDisplayMessage(\"Upload Failed. Try Again Later.\");\r\n          this.props.onUpload(this.state.file); // DELETE: here for testing purposes\r\n        }\r\n      })\r\n      .catch((e: Error) => {\r\n        console.log(e);\r\n      });\r\n  }*/\r\n\r\n  changeDisplayMessage(newDisplayMessage: string) {\r\n    this.setState({ displayMessage: newDisplayMessage });\r\n  }\r\n\r\n  render() {\r\n    const { displayMessage, buffering } = this.state;\r\n    return (\r\n      <Form onSubmit={this.onFormSubmit.bind(this)}>\r\n        <Form.Group>\r\n          <Form.File id=\"fileUpload\" className=\"file-upload-form\" onChange={this.onChange} />\r\n          <div className=\"d-flex border-radius button-blur mb-2\">\r\n            <div className=\"text-warning mt-3 flex-fill \">\r\n              {displayMessage}\r\n            </div>\r\n            {/* {buffering && (\r\n              <div className=\"d-flex justify-content-end\">\r\n                <Spinner\r\n                  className=\"mt-4 mr-3\"\r\n                  animation=\"border\"\r\n                  variant=\"secondary\"\r\n                />\r\n              </div>\r\n            )} */}\r\n            <Button\r\n              className=\"mt-3 mr-3 flex-shrink-1 float-right\"\r\n              variant=\"outline-light\"\r\n              onClick={this.onFormSubmit}\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              className=\"mt-3 flex-shrink-1 float-right\"\r\n              variant=\"outline-light\"\r\n              onClick={(e: any) => {\r\n                this.props.onClose();\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n          </div>\r\n        </Form.Group>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileUpload;\r\n","import Profile from \"./Profile\";\r\nexport default Profile;","import React from \"react\";\r\nimport { Button, Image, Card, Spinner } from \"react-bootstrap\";\r\nimport UserProfile from \"../../common/UserProfile.interface\";\r\nimport \"./Profile.css\";\r\n\r\ninterface ProfileProps {\r\n  user?: UserProfile;\r\n  onClose: () => void;\r\n}\r\ninterface ProfileState {}\r\n\r\nclass Profile extends React.Component<ProfileProps, ProfileState> {\r\n  componentWillMount() {\r\n    // make query for all other user information\r\n  }\r\n\r\n  constructor(props: ProfileProps) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n    return (\r\n      <div>\r\n        {user && (\r\n          <div className=\"d-flex mb-2\">\r\n            <Card className=\"flex-fill\">\r\n              <div className=\"m-2\">\r\n                <div className=\"\">Name: {user.name}</div>\r\n                {/* <div className=\"text-break\">ID: {user.publicAddress}</div> */}\r\n              </div>\r\n            </Card>\r\n            <div className=\"ml-4 flex-shrink-1 float-right image-card\">\r\n              <Image\r\n                className=\"profile-image\"\r\n                src=\"https://engineering.lehigh.edu/sites/engineering.lehigh.edu/files/styles/faculty_photo/public/korth.jpg?itok=GfxQ6zFl\"\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {!user && (\r\n          <div className=\"d-flex justify-content-center\">\r\n            <Spinner\r\n              className=\"float-right mt-4 mr-3\"\r\n              animation=\"border\"\r\n              variant=\"secondary\"\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        <Button\r\n          className=\"mt-3 float-right\"\r\n          onClick={(e: any) => {\r\n            this.props.onClose();\r\n          }}\r\n        >\r\n          Close\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { Modal, Button, Spinner } from \"react-bootstrap\";\r\nimport LetterDetails from \"../../common/LetterDetails.interface\";\r\nimport UserProfile from \"../../common/UserProfile.interface\";\r\nimport FileData from \"../../common/FileData.interface\";\r\nimport Profile from \"../../components/Profile\";\r\nimport RequestBody from \"../../common/RequestBody.interface\";\r\nimport ResponseBody from \"../../common/ResponseBody.interface\";\r\nimport \"./FileView.css\";\r\nimport UserAuth from \"../../common/UserAuth.interface\";\r\n\r\ninterface FileViewProps {\r\n  user: UserAuth;\r\n  fileData?: FileData;\r\n  onClose: () => void;\r\n}\r\ninterface FileViewState {\r\n  profileIsOpen: boolean;\r\n  selectedPublicAddress: string;\r\n  selectedUserProfile?: UserProfile;\r\n}\r\n\r\nclass FileView extends React.Component<FileViewProps, FileViewState> {\r\n  constructor(props: FileViewProps) {\r\n    super(props);\r\n    this.state = {\r\n      profileIsOpen: false,\r\n      selectedPublicAddress: \"\",\r\n    };\r\n  }\r\n\r\n  openProfileModal(selectedPublicAddress: string) {\r\n    console.log(\"opening view modal\");\r\n    const fetchUrl = `/api/v1/users/${selectedPublicAddress}/profile`;\r\n    this.retrieveProfileFromServer(fetchUrl);\r\n  }\r\n\r\n  retrieveProfileFromServer(fetchUrl: string) {\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n\r\n    // get user profile from server\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`, init)\r\n      .then((response) => {\r\n        response\r\n          .json()\r\n          .then((body: ResponseBody) => {\r\n            const data: UserProfile[] = body.data;\r\n            console.log(response);\r\n            if (data && data.length !== 0) {\r\n              this.setState({\r\n                selectedUserProfile: data[0],\r\n                profileIsOpen: true,\r\n              });\r\n            }\r\n          })\r\n          .catch((e: Error) => {\r\n            console.log(e);\r\n          });\r\n      })\r\n      .catch((e: Error) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  closeProfileModal() {\r\n    console.log(\"closing view modal\");\r\n    this.setState({ profileIsOpen: false });\r\n  }\r\n  render() {\r\n    const { fileData } = this.props;\r\n    const { profileIsOpen } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"mb-3\">\r\n          {fileData && (\r\n            <embed\r\n              type={fileData.letterType}\r\n              src={fileData.letterUrl}\r\n              width=\"100%\"\r\n              height=\"500px\"\r\n            />\r\n          )}\r\n          {!fileData && (\r\n            <div className=\"d-flex justify-content-center\">\r\n              <Spinner\r\n                className=\"mb-3 .absolute-center\"\r\n                animation=\"border\"\r\n                variant=\"secondary\"\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <Button\r\n          className=\"mt-3 float-right\"\r\n          onClick={(e: any) => {\r\n            this.props.onClose();\r\n          }}\r\n        >\r\n          Close\r\n        </Button>\r\n\r\n        <Modal\r\n          id=\"profile-modal\"\r\n          show={profileIsOpen}\r\n          onHide={this.closeProfileModal.bind(this)}\r\n          backdrop=\"static\"\r\n          animation={false}\r\n          className=\"modal\"\r\n          scrollable={false}\r\n          size=\"sm\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>User Profile</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            {this.state.selectedUserProfile && (\r\n              <Profile\r\n                user={this.state.selectedUserProfile}\r\n                onClose={this.closeProfileModal.bind(this)}\r\n              />\r\n            )}\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileView;\r\n","import React from \"react\";\r\nimport { Button, Row, Col, Spinner, Form } from \"react-bootstrap\";\r\nimport UserAuth from \"../../common/UserAuth.interface\";\r\nimport \"./Confirm.css\";\r\n\r\ninterface ConfirmProps {\r\n  user: UserAuth;\r\n  custom: boolean;\r\n  onConfirm: (customMessage: string) => void;\r\n  onClose: () => void;\r\n}\r\ninterface ConfirmState {\r\n  confirmed: boolean;\r\n  customMessage: string;\r\n}\r\n\r\nclass Confirm extends React.Component<ConfirmProps, ConfirmState> {\r\n  constructor(props: ConfirmProps) {\r\n    super(props);\r\n    this.state = {\r\n      confirmed: false,\r\n      customMessage: \"\",\r\n    };\r\n  }\r\n\r\n  async handleMessageChange(event: any) {\r\n    const customMessage: string = event.target.value;\r\n    console.log(customMessage);\r\n    this.setState({ customMessage: customMessage });\r\n  }\r\n\r\n  render() {\r\n    const { custom } = this.props;\r\n    const { confirmed } = this.state;\r\n    return (\r\n      <Col>\r\n        {!custom && (<Row>Submit Your Request?</Row>)}\r\n        {custom && (<Row>\r\n          <Form.Group controlId=\"custom-message\" className=\"w-100\">\r\n            <Form.Label>Optional Custom Message</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Type here . . . \"\r\n              onChange={this.handleMessageChange.bind(this)}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              This will be visible in the email notification.\r\n            </Form.Text>\r\n          </Form.Group>\r\n        </Row>)}\r\n        <Row className=\"d-flex justify-content-end\">\r\n          <div className=\"mt-3 mr-3\">\r\n            {confirmed && <Spinner animation=\"border\" variant=\"secondary\" />}\r\n          </div>\r\n          <Button\r\n            disabled={confirmed}\r\n            className=\"mt-3 mr-3 flex-shrink-1\"\r\n            onClick={(e: any) => {\r\n              this.setState({ confirmed: true });\r\n              this.props.onConfirm(this.state.customMessage);\r\n            }}\r\n          >\r\n            Confirm\r\n          </Button>\r\n          <Button\r\n            className=\"mt-3 flex-shrink-1\"\r\n            onClick={(e: any) => {\r\n              this.props.onClose();\r\n            }}\r\n          >\r\n            Back\r\n          </Button>\r\n        </Row>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Confirm;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Spinner,\r\n  Card,\r\n  Collapse,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport UserAuth from \"../../common/UserAuth.interface\";\r\nimport UserKey from \"../../common/UserKey.interface\";\r\nimport FileData from \"../../common/FileData.interface\";\r\nimport Letter from \"../../common/LetterDetails.interface\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheckSquare } from \"@fortawesome/free-solid-svg-icons\";\r\nimport CryptService from \"../../services/CryptService\";\r\n\r\nimport \"./Send.css\";\r\n\r\ninterface SendProps {\r\n  user: UserAuth;\r\n  letter: Letter;\r\n  unsentRecipientKeys: UserKey[];\r\n  onClose: () => void;\r\n}\r\ninterface SendState {\r\n  loadingContents: boolean;\r\n  sending: boolean;\r\n  encrypted: boolean[];\r\n  encryptedLetter?: FileData;\r\n}\r\n\r\nclass Send extends React.Component<SendProps, SendState> {\r\n  private cryptService: CryptService;\r\n  constructor(props: SendProps) {\r\n    super(props);\r\n\r\n    let e = [];\r\n    const keys = this.props.unsentRecipientKeys;\r\n    if (keys) {\r\n      for (let i = 0; i < keys.length; i++) {\r\n        e.push(false);\r\n      }\r\n    }\r\n    console.log(e);\r\n    console.log(keys);\r\n\r\n    this.state = {\r\n      loadingContents: true,\r\n      sending: false,\r\n      encrypted: e,\r\n    };\r\n    this.cryptService = new CryptService();\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let fetchUrl = `/api/v1/letters/${this.props.letter.letterId}/contents/writer`;\r\n    let url = await this.getLetterContents(\r\n      this.props.letter.letterId,\r\n      fetchUrl\r\n    );\r\n  }\r\n\r\n  async encryptAndUpload(key: number, userKey: UserKey) {\r\n    console.log(\"Pub key is: \" + userKey.publicKey);\r\n    console.log(\"State url: \" + this.state.encryptedLetter);\r\n\r\n    if (!this.state.encryptedLetter) return;\r\n    let encryptedLetter = await this.cryptService.encryptSend(\r\n      this.state.encryptedLetter,\r\n      userKey.publicKey\r\n    );\r\n    console.log(\"Encrypted letter: \" + encryptedLetter);\r\n\r\n    let signedLetter = await this.cryptService.signLetter(\r\n      encryptedLetter,\r\n      this.props.user.publicAddress\r\n    );\r\n    console.log(\"Signed letter: \" + signedLetter);\r\n\r\n    const encryptedLetterForm: {\r\n      letterContents: string;\r\n      letterSignature: string;\r\n      letterRecipient: string;\r\n    } = {\r\n      letterContents: encryptedLetter,\r\n      letterSignature: signedLetter,\r\n      letterRecipient: userKey.publicAddress,\r\n    };\r\n\r\n    this.setState({ sending: true });\r\n\r\n    const fetchUrl = `/api/v1/letters/${this.props.letter.letterId}/recipientContents/update`;\r\n    const success = await this.uploadEncryptedLetterForm(\r\n      fetchUrl,\r\n      encryptedLetterForm\r\n    );\r\n    // const success = true;\r\n    if (success) {\r\n      let encrypted = [...this.state.encrypted];\r\n      encrypted[key] = true;\r\n      this.setState({ encrypted: encrypted, sending: false });\r\n    }\r\n  }\r\n\r\n  async uploadEncryptedLetterForm(\r\n    fetchUrl: string,\r\n    encryptedLetterForm: {\r\n      letterContents: string;\r\n      letterSignature: string;\r\n    }\r\n  ) {\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: encryptedLetterForm,\r\n      }),\r\n    };\r\n\r\n    try {\r\n      let response = await fetch(\r\n        `${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`,\r\n        init\r\n      );\r\n      if (response.status === 400) {\r\n        console.log(response.status);\r\n        return false;\r\n      } else {\r\n        // let body = await response.json();\r\n        return true;\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async getLetterContents(id: string, fetchUrl: string) {\r\n    console.log(\"Letter Id: \" + id);\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n    const letterId = id;\r\n    // get letter from server\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`, init)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((body) => {\r\n        const encryptedLetter: string = body.data;\r\n        if (encryptedLetter) {\r\n          //return encryptedLetter;\r\n          this.cryptService\r\n            .decrypt(encryptedLetter, this.props.user.publicAddress)\r\n            .then((fileData) => {\r\n              if (fileData) {\r\n                this.setState({\r\n                  encryptedLetter: fileData,\r\n                  loadingContents: false,\r\n                });\r\n              }\r\n            });\r\n        } else {\r\n          console.log(\"Letter retrieval in send failed\");\r\n        }\r\n      })\r\n      .catch((e: Error) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { user, letter, unsentRecipientKeys } = this.props;\r\n    const { loadingContents, sending, encrypted } = this.state;\r\n\r\n    let recipientList = [];\r\n    if (unsentRecipientKeys) {\r\n      for (let i = 0; i < unsentRecipientKeys.length; i += 2) {\r\n        recipientList.push(\r\n          <Row>\r\n            <Col>\r\n              <Card className=\"full-width opacity-0 mt-3\">\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <Card.Header\r\n                    className=\"flex-fill send-entry\"\r\n                    onClick={() => {\r\n                      if (!encrypted[i]) {\r\n                        this.encryptAndUpload(i, unsentRecipientKeys[i]);\r\n                      }\r\n                    }}\r\n                  >\r\n                    {unsentRecipientKeys[i].name}\r\n                  </Card.Header>\r\n\r\n                  {encrypted[i] && (\r\n                    <FontAwesomeIcon\r\n                      icon={faCheckSquare}\r\n                      size=\"lg\"\r\n                      className=\"send-check-square\"\r\n                    />\r\n                  )}\r\n                  {!encrypted[i] && !sending && (\r\n                    <div className=\"send-check-square-placeholder\"></div>\r\n                  )}\r\n                </div>\r\n              </Card>\r\n            </Col>\r\n            {i + 1 < unsentRecipientKeys.length && (\r\n              <Col>\r\n                <Card className=\"full-width opacity-0 mt-3\">\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <Card.Header\r\n                      className=\"flex-fill send-entry\"\r\n                      onClick={() => {\r\n                        if (!encrypted[i + 1]) {\r\n                          this.encryptAndUpload(\r\n                            i + 1,\r\n                            unsentRecipientKeys[i + 1]\r\n                          );\r\n                        }\r\n                      }}\r\n                    >\r\n                      {unsentRecipientKeys[i + 1].name}\r\n                    </Card.Header>\r\n                    {encrypted[i + 1] && (\r\n                      <FontAwesomeIcon\r\n                        icon={faCheckSquare}\r\n                        size=\"lg\"\r\n                        className=\"send-check-square\"\r\n                      />\r\n                    )}\r\n                    {!encrypted[i + 1] && (\r\n                      <div className=\"send-check-square-placeholder\"></div>\r\n                    )}\r\n                  </div>\r\n                </Card>\r\n              </Col>\r\n            )}\r\n\r\n            {i + 1 >= unsentRecipientKeys.length && (\r\n              <Col>\r\n                <Card className=\"full-width opacity-0 mt-3\">\r\n                  <div className=\"send-placeholder\"></div>\r\n                </Card>\r\n              </Col>\r\n            )}\r\n          </Row>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {!loadingContents && (\r\n          <Col>\r\n            {unsentRecipientKeys && (\r\n              <Row>\r\n                <Col>{recipientList}</Col>\r\n              </Row>\r\n            )}\r\n            {(!unsentRecipientKeys || unsentRecipientKeys.length === 0) && (\r\n              <Row className=\"d-flex justify-content-center\">\r\n                <Spinner\r\n                  className=\"float-right mt-4 mr-3\"\r\n                  animation=\"border\"\r\n                  variant=\"secondary\"\r\n                />\r\n              </Row>\r\n            )}\r\n            <Row className=\"d-flex justify-content-end\">\r\n              <div className=\"mt-3 mr-3\">\r\n                {sending && <Spinner animation=\"border\" variant=\"secondary\" />}\r\n              </div>\r\n              <Button\r\n                className=\"mt-3 flex-shrink-1\"\r\n                onClick={(e: any) => {\r\n                  this.props.onClose();\r\n                }}\r\n              >\r\n                Close\r\n              </Button>\r\n            </Row>\r\n          </Col>\r\n        )}\r\n\r\n        {loadingContents && (\r\n          <div className=\"d-flex justify-content-center mb-3\">\r\n            <Spinner className=\"mb-3\" animation=\"border\" variant=\"secondary\" />\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Send;\r\n","import FileHistory from \"./FileHistory\";\r\nexport default FileHistory;","import React from \"react\";\r\nimport { Card, Collapse, Col, Row, Button, Modal } from \"react-bootstrap\";\r\nimport \"./FileHistory.css\";\r\nimport LetterHistory from \"../../common/LetterHistory.interface\";\r\nimport UserProfile from \"../../common/UserProfile.interface\";\r\nimport Profile from \"../../components/Profile\";\r\nimport RequestBody from \"../../common/RequestBody.interface\";\r\nimport ResponseBody from \"../../common/ResponseBody.interface\";\r\nimport User from \"../../common/User.interface\";\r\nimport UserAuth from \"../../common/UserAuth.interface\";\r\n\r\ninterface FileHistoryProps {\r\n  user: UserAuth;\r\n  history: LetterHistory[];\r\n  onClose: () => void;\r\n}\r\ninterface FileHistoryState {\r\n  collapseIsOpen: boolean[];\r\n  profileIsOpen: boolean;\r\n  selectedUserProfile?: UserProfile;\r\n}\r\n\r\nclass FileHistory extends React.Component<FileHistoryProps, FileHistoryState> {\r\n  private userProfiles: Map<string, UserProfile>;\r\n\r\n  constructor(props: FileHistoryProps) {\r\n    super(props);\r\n\r\n    let collapseIsOpen = [];\r\n    for (let i = 0; i < this.props.history.length; i++) {\r\n      collapseIsOpen.push(false);\r\n    }\r\n\r\n    this.state = {\r\n      collapseIsOpen: collapseIsOpen,\r\n      profileIsOpen: false,\r\n    };\r\n\r\n    this.userProfiles = new Map<string, UserProfile>();\r\n  }\r\n\r\n  async closeProfileModal() {\r\n    console.log(\"closing profile modal\");\r\n    this.setState({ profileIsOpen: false });\r\n  }\r\n\r\n  async openProfileModal(publicAddress: string) {\r\n    console.log(\"opening profile modal\");\r\n    const userProfile = this.userProfiles.get(publicAddress);\r\n    console.log(userProfile);\r\n    if (userProfile === undefined) {\r\n      const fetchUrl = `/api/v1/users/${publicAddress}/profile`;\r\n      this.retrieveProfileFromServer(fetchUrl);\r\n    } else {\r\n      this.setState({ selectedUserProfile: userProfile, profileIsOpen: true });\r\n    }\r\n  }\r\n\r\n  async retrieveProfileFromServer(fetchUrl: string) {\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n\r\n    // get user profile from server\r\n    try {\r\n      let response = await fetch(\r\n        `${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`,\r\n        init\r\n      );\r\n      let body = await response.json();\r\n\r\n      const data: UserProfile[] = body.data;\r\n      console.log(response);\r\n      console.log(data);\r\n      if (data && data.length !== 0) {\r\n        this.userProfiles.set(data[0].publicAddress, data[0]);\r\n        this.setState({\r\n          profileIsOpen: true,\r\n          selectedUserProfile: data[0],\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { history } = this.props;\r\n    const { profileIsOpen } = this.state;\r\n\r\n    let historyList = [];\r\n    for (let i = 0; i < history.length; i += 2) {\r\n      historyList.push(\r\n        <Row>\r\n          <Col>\r\n            <Card className=\"full-width opacity-0 mt-3\">\r\n              <div className=\"d-flex justify-content-between\">\r\n                <Card.Header\r\n                  className=\"flex-fill history-entry\"\r\n                  onClick={() => {\r\n                    let collapseIsOpen = [...this.state.collapseIsOpen];\r\n                    collapseIsOpen[i] = !collapseIsOpen[i];\r\n                    this.setState({ collapseIsOpen: collapseIsOpen });\r\n                  }}\r\n                >\r\n                  {history[i].letterRecipient.name}\r\n                </Card.Header>\r\n                <Card.Header\r\n                  className=\"flex-shrink-1 history-collapse-button\"\r\n                  onClick={() => {\r\n                    this.openProfileModal(\r\n                      history[i].letterRecipient.publicAddress\r\n                    );\r\n                  }}\r\n                ></Card.Header>\r\n              </div>\r\n            </Card>\r\n            <Collapse in={this.state.collapseIsOpen[i]}>\r\n              <div className=\"body-text text-white-50\">\r\n                Sent At: {history[i].sentAt}\r\n              </div>\r\n            </Collapse>\r\n          </Col>\r\n          {i + 1 < history.length && (\r\n            <Col>\r\n              <Card className=\"full-width opacity-0 mt-3\">\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <Card.Header\r\n                    className=\"flex-fill history-entry\"\r\n                    onClick={() => {\r\n                      let collapseIsOpen = [...this.state.collapseIsOpen];\r\n                      collapseIsOpen[i + 1] = !collapseIsOpen[i + 1];\r\n                      this.setState({ collapseIsOpen: collapseIsOpen });\r\n                    }}\r\n                  >\r\n                    {history[i + 1].letterRecipient.name}\r\n                  </Card.Header>\r\n                  <Card.Header\r\n                    className=\"flex-shrink-1 history-collapse-button\"\r\n\r\n                    onClick={() => {\r\n                      this.openProfileModal(\r\n                        history[i + 1].letterRecipient.publicAddress\r\n                      );\r\n                    }}\r\n                  ></Card.Header>\r\n                </div>\r\n              </Card>\r\n              <Collapse in={this.state.collapseIsOpen[i + 1]}>\r\n                <div className=\"body-text text-white-50\">\r\n                  Sent At: {history[i + 1].sentAt}\r\n                </div>\r\n              </Collapse>\r\n            </Col>\r\n          )}\r\n\r\n          {i + 1 >= history.length && (\r\n            <Col>\r\n              <Card className=\"full-width opacity-0 mt-3\"></Card>\r\n              <Card.Header className=\"d-flex justify-content-between history-placeholder\"></Card.Header>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"button-blur\">\r\n        {history.length === 0 && (\r\n          <Col>\r\n            <Row>\r\n              <h5 className=\"w-100 text-center\">No History</h5>\r\n            </Row>\r\n          </Col>\r\n        )}\r\n        {history.length !== 0 && (\r\n          <>\r\n            <Col>\r\n              <Row>\r\n                <h5>History</h5>\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"history-display\">{historyList}</Col>\r\n              </Row>\r\n              <Row className=\"justify-content-end mb-2\">\r\n                <Button\r\n                  className=\"mt-3 float-right\"\r\n                  variant=\"outline-light\"\r\n                  onClick={(e: any) => {\r\n                    this.props.onClose();\r\n                  }}\r\n                >\r\n                  Close\r\n                </Button>\r\n              </Row>\r\n            </Col>\r\n\r\n            <Modal\r\n              id=\"profile-modal\"\r\n              show={profileIsOpen}\r\n              onHide={this.closeProfileModal.bind(this)}\r\n              // backdrop=\"static\"\r\n              animation={false}\r\n              className=\"modal\"\r\n              scrollable={false}\r\n              // size=\"sm\"\r\n            >\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>\r\n                  {this.state.selectedUserProfile?.name}\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n\r\n              <Modal.Body>\r\n                {this.state.selectedUserProfile && (\r\n                  <Profile\r\n                    user={this.state.selectedUserProfile}\r\n                    onClose={this.closeProfileModal.bind(this)}\r\n                  />\r\n                )}\r\n              </Modal.Body>\r\n            </Modal>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileHistory;\r\n","import React from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Spinner,\r\n  Modal,\r\n  Collapse,\r\n  Col,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport UserProfile from \"../common/UserProfile.interface\";\r\nimport UserAuth from \"../common/UserAuth.interface\";\r\nimport UserKey from \"../common/UserKey.interface\";\r\nimport User from \"../common/User.interface\";\r\nimport LetterHistory from \"../common/LetterHistory.interface\";\r\nimport RequestBody from \"../common/RequestBody.interface\";\r\nimport ResponseBody from \"../common/ResponseBody.interface\";\r\nimport \"./WriterLetterDisplay.css\";\r\nimport LetterDetails from \"../common/LetterDetails.interface\";\r\n\r\nimport FileData from \"../common/FileData.interface\";\r\nimport CryptService from \"../services/CryptService\";\r\nimport CacheService from \"../services/CacheService\";\r\n\r\nimport FileUpload from \"../components/FileUpload/FileUpload\";\r\nimport FileView from \"../components/FileView/FileView\";\r\nimport Confirm from \"../components/Confirm/Confirm\";\r\nimport Send from \"../components/Send/Send\";\r\nimport FileHistory from \"../components/FileHistory\";\r\nimport Profile from \"../components/Profile\";\r\n\r\ninterface WriterLetterDisplayProps {\r\n  user: UserAuth;\r\n  letter: LetterDetails;\r\n  numRecipients: Number;\r\n  numUnsentRecipients: Number;\r\n  onReload(): Promise<void>;\r\n}\r\ninterface WriterLetterDisplayState {\r\n  history: LetterHistory[];\r\n  loadingHistory: boolean;\r\n  loadingSend: boolean;\r\n  profileIsOpen: boolean;\r\n  historyIsOpen: boolean;\r\n  messageIsOpen: boolean;\r\n  uploadIsOpen: boolean;\r\n  sendIsOpen: boolean;\r\n  viewIsOpen: boolean;\r\n  confirmIsOpen: boolean;\r\n  collapseIsOpen: boolean;\r\n  selectedUserProfile?: UserProfile;\r\n  uploadedFile?: File;\r\n  fileData?: FileData;\r\n  unsentRecipientKeys: UserKey[];\r\n}\r\n\r\nclass WriterLetterDisplay extends React.Component<\r\n  WriterLetterDisplayProps,\r\n  WriterLetterDisplayState\r\n> {\r\n  private uploadModal = React.createRef<FileUpload>();\r\n  private viewModal = React.createRef<FileView>();\r\n  private userProfiles: Map<string, UserProfile>;\r\n  private cryptService: CryptService;\r\n  private cacheService: CacheService<string, string>;\r\n\r\n  constructor(props: WriterLetterDisplayProps) {\r\n    super(props);\r\n    this.state = {\r\n      history: [],\r\n      unsentRecipientKeys: [],\r\n      loadingHistory: false,\r\n      loadingSend: false,\r\n      profileIsOpen: false,\r\n      historyIsOpen: false,\r\n      messageIsOpen: false,\r\n      uploadIsOpen: false,\r\n      sendIsOpen: false,\r\n      viewIsOpen: false,\r\n      confirmIsOpen: false,\r\n      collapseIsOpen: false,\r\n    };\r\n\r\n    this.userProfiles = new Map<string, UserProfile>();\r\n    this.cryptService = new CryptService();\r\n    this.cacheService = new CacheService(1);\r\n  }\r\n\r\n  async openUploadModal() {\r\n    console.log(\"opening upload modal\");\r\n    this.setState({\r\n      uploadIsOpen: true,\r\n      collapseIsOpen: true,\r\n    });\r\n  }\r\n\r\n  async onUploadSubmit(customMessage: string) {\r\n    const fetchUrl = `/api/v1/letters/${this.props.letter.letterId}/contents/update`;\r\n    if (this.state.uploadedFile !== undefined) {\r\n      await this.uploadContentsToServer(this.state.uploadedFile, fetchUrl, customMessage);\r\n    }\r\n  }\r\n\r\n  async closeUploadModal() {\r\n    console.log(\"closing upload modal\");\r\n    this.setState({\r\n      confirmIsOpen: false,\r\n      uploadIsOpen: false,\r\n      collapseIsOpen: this.state.historyIsOpen,\r\n    });\r\n  }\r\n\r\n  async uploadContentsToServer(file: File, fetchUrl: string, customMessage: string) {\r\n    console.log(\"uploading to server\");\r\n    console.log(file);\r\n\r\n    // encrypt file\r\n    let encryptedFile = await this.cryptService.encrypt(\r\n      file,\r\n      this.props.user.publicAddress\r\n    );\r\n    console.log(encryptedFile);\r\n\r\n    if (!encryptedFile) {\r\n      console.log(\"encryption failed\");\r\n      this.closeUploadModal();\r\n      return;\r\n    }\r\n\r\n    // cache encrypted file\r\n    // this.cacheService.put(this.props.letter.letterId, encryptedFile);\r\n    // console.log(\"put encryptedFile into memcache\");\r\n\r\n    // post encrypted file to server\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`, {\r\n      body: JSON.stringify({\r\n        auth: {\r\n          publicAddress: this.props.user.publicAddress,\r\n          jwtToken: this.props.user.jwtToken,\r\n        },\r\n        data: {\r\n          customMessage: customMessage,\r\n          encryptedFile: encryptedFile,\r\n        }\r\n      }),\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      method: \"POST\",\r\n    })\r\n      .then((response: any) => {\r\n        console.log(response.status);\r\n        if (response.status === 200) {\r\n          this.closeUploadModal();\r\n          this.props.onReload();\r\n        } else {\r\n          this.uploadModal.current!.changeDisplayMessage(\r\n            \"Upload Failed. Try Again Later.\"\r\n          );\r\n        }\r\n      })\r\n      .catch((e: Error) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  async openSendModal() {\r\n    this.setState({ sendIsOpen: true });\r\n    if (\r\n      this.props.numUnsentRecipients > 0 &&\r\n      this.props.letter.uploadedAt !== null\r\n    ) {\r\n      const fetchUrl = `/api/v1/letters/${this.props.letter.letterId}/unsentRecipientKeys`;\r\n      this.retrieveUnsentRecipientKeysFromServer(fetchUrl);\r\n    }\r\n  }\r\n\r\n  async closeSendModal() {\r\n    this.setState({ sendIsOpen: false });\r\n  }\r\n\r\n  async onSendSubmit() {\r\n    // closed send and repopulate letter list; can be optimized\r\n    this.closeSendModal();\r\n    this.props.onReload();\r\n  }\r\n\r\n  async retrieveUnsentRecipientKeysFromServer(fetchUrl: string) {\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n\r\n    try {\r\n      let response = await fetch(\r\n        `${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`,\r\n        init\r\n      );\r\n      if (response.status === 400) {\r\n        console.log(response.status);\r\n        // this.setState({\r\n        // loadingSelect: false,\r\n        // selectIsOpen: false,\r\n        // collapseIsOpen: this.state.historyIsOpen,\r\n        // });\r\n      } else {\r\n        let body = await response.json();\r\n\r\n        const data: { userKeys: UserKey[]; users: User[] } = body.data;\r\n        console.log(response);\r\n        console.log(data);\r\n        this.setState({\r\n          unsentRecipientKeys: data.userKeys,\r\n          loadingSend: false,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      // this.setState({\r\n      // loadingSelect: false,\r\n      // selectIsOpen: false,\r\n      // collapseIsOpen: this.state.historyIsOpen,\r\n      // });\r\n    }\r\n  }\r\n\r\n  async openViewModal() {\r\n    console.log(\"opening view modal\");\r\n    this.setState({ viewIsOpen: true });\r\n    const letterId = this.props.letter.letterId;\r\n    const fetchUrl = `/api/v1/letters/${letterId}/contents/writer`;\r\n    console.log(letterId);\r\n    let encryptedLetter = this.cacheService.get(letterId);\r\n    if (encryptedLetter === null) {\r\n      this.retrieveLetterContentsFromServer(fetchUrl);\r\n    } else {\r\n      try {\r\n        let fileData = await this.cryptService.decrypt(\r\n          encryptedLetter,\r\n          this.props.user.publicAddress\r\n        );\r\n\r\n        console.log(fileData.letterType);\r\n        this.setState({\r\n          fileData: fileData,\r\n        });\r\n      } catch (error) {\r\n        console.log(\"error with decryption\");\r\n      }\r\n    }\r\n  }\r\n\r\n  closeViewModal() {\r\n    console.log(\"closing view modal\");\r\n    this.setState({ viewIsOpen: false, fileData: undefined });\r\n  }\r\n\r\n  retrieveLetterContentsFromServer(fetchUrl: string) {\r\n    console.log(\"retrieving from server\");\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n    const letterId = this.props.letter.letterId;\r\n    // get letter from server\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`, init)\r\n      .then((response) => {\r\n        console.log(\"logging response\");\r\n        console.log(response);\r\n        return response.json();\r\n      })\r\n      .then((body) => {\r\n        // decrypt letter\r\n        const encryptedLetter: string = body.data;\r\n        if (encryptedLetter) {\r\n          this.cryptService\r\n            .decrypt(encryptedLetter, this.props.user.publicAddress)\r\n            .then((fileData) => {\r\n              if (fileData) {\r\n                this.setState({\r\n                  viewIsOpen: true,\r\n                  fileData: fileData,\r\n                });\r\n              }\r\n            });\r\n        } else {\r\n          this.setState({\r\n            viewIsOpen: false,\r\n          });\r\n        }\r\n      })\r\n      .catch((e: Error) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  async openMessageModal(file: File) {\r\n    this.setState({ uploadedFile: file, messageIsOpen: true });\r\n    this.openConfirmModal();\r\n  }\r\n\r\n  async closeMessageModal() {\r\n    this.setState({ messageIsOpen: false });\r\n  }\r\n\r\n  async closeProfileModal() {\r\n    console.log(\"closing profile modal\");\r\n    this.setState({ profileIsOpen: false, selectedUserProfile: undefined });\r\n  }\r\n\r\n  async openProfileModal(publicAddress: string) {\r\n    console.log(\"opening profile modal\");\r\n    const userProfile = this.userProfiles.get(publicAddress);\r\n    console.log(userProfile);\r\n    if (userProfile === undefined) {\r\n      this.setState({ profileIsOpen: true });\r\n      const fetchUrl = `/api/v1/users/${publicAddress}/profile`;\r\n      this.retrieveProfileFromServer(fetchUrl);\r\n    } else {\r\n      this.setState({ selectedUserProfile: userProfile, profileIsOpen: true });\r\n    }\r\n  }\r\n\r\n  async retrieveProfileFromServer(fetchUrl: string) {\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n\r\n    try {\r\n      let response = await fetch(\r\n        `${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`,\r\n        init\r\n      );\r\n\r\n      if (response.status === 400) {\r\n        console.log(response.status);\r\n        // this.setState({\r\n        //   profileIsOpen: false,\r\n        // });\r\n      } else {\r\n        let body = await response.json();\r\n        const data: UserProfile[] = body.data;\r\n        console.log(response);\r\n        console.log(data);\r\n        if (data && data.length !== 0) {\r\n          this.userProfiles.set(data[0].publicAddress, data[0]);\r\n          this.setState({\r\n            selectedUserProfile: data[0],\r\n          });\r\n        } else {\r\n          // this.setState({\r\n          //   profileIsOpen: false,\r\n          // });\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      // this.setState({\r\n      //   profileIsOpen: false,\r\n      // });\r\n    }\r\n  }\r\n\r\n  async closeHistoryModal() {\r\n    console.log(\"closing history modal\");\r\n    this.setState({\r\n      historyIsOpen: false,\r\n      loadingHistory: false,\r\n      collapseIsOpen: this.state.viewIsOpen,\r\n    });\r\n  }\r\n\r\n  async openHistoryModal() {\r\n    console.log(\"opening history modal\");\r\n\r\n    if (this.state.history.length === 0) {\r\n      this.setState({\r\n        loadingHistory: true,\r\n        historyIsOpen: true,\r\n        collapseIsOpen: true,\r\n      });\r\n      const letterId = this.props.letter.letterId;\r\n      const fetchUrl = `/api/v1/letters/${letterId}/history`;\r\n      this.retrieveHistoryFromServer(fetchUrl);\r\n    } else {\r\n      this.setState({\r\n        historyIsOpen: true,\r\n        collapseIsOpen: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  async retrieveHistoryFromServer(fetchUrl: string) {\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`,\r\n        init\r\n      );\r\n      if (response.status === 400) {\r\n        console.log(response.status);\r\n        this.setState({\r\n          // historyIsOpen: false,\r\n          loadingHistory: false,\r\n          // collapseIsOpen: this.state.selectIsOpen,\r\n        });\r\n      } else {\r\n        const body = await response.json();\r\n\r\n        const data: LetterHistory[] = body.data;\r\n        console.log(response);\r\n        console.log(data);\r\n        if (data) {\r\n          this.setState({\r\n            history: data,\r\n            loadingHistory: false,\r\n          });\r\n        } else {\r\n          console.log(\"fetch for letterHistory failed\");\r\n          this.setState({\r\n            // historyIsOpen: false,\r\n            loadingHistory: false,\r\n            // collapseIsOpen: this.state.selectIsOpen,\r\n          });\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      this.setState({\r\n        // historyIsOpen: false,\r\n        loadingHistory: false,\r\n        // collapseIsOpen: this.state.selectIsOpen,\r\n      });\r\n    }\r\n  }\r\n\r\n  async openConfirmModal() {\r\n    console.log(\"open confirm modal\");\r\n    this.setState({ confirmIsOpen: true });\r\n  }\r\n\r\n  async closeConfirmModal() {\r\n    console.log(\"close confirm modal\");\r\n    this.setState({ confirmIsOpen: false });\r\n  }\r\n\r\n  render() {\r\n    const { user, letter, numRecipients, numUnsentRecipients } = this.props;\r\n    const {\r\n      history,\r\n      loadingHistory,\r\n      loadingSend,\r\n      profileIsOpen,\r\n      historyIsOpen,\r\n      messageIsOpen,\r\n      uploadIsOpen,\r\n      sendIsOpen,\r\n      viewIsOpen,\r\n      confirmIsOpen,\r\n      collapseIsOpen,\r\n      unsentRecipientKeys,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Card className=\"full-width opacity-0\">\r\n          <Card.Header\r\n            className=\"d-flex justify-content-between button-blur letter-entry\"\r\n            onClick={() => this.setState({ collapseIsOpen: !collapseIsOpen })}\r\n          >\r\n            <div className=\"flex-fill\">\r\n              <span className=\"mr-3\">For:</span>\r\n              <Button\r\n                variant=\"outline-light\"\r\n                onClick={(e: any) => {\r\n                  e.stopPropagation();\r\n                  this.openProfileModal(letter.letterRequestor.publicAddress);\r\n                }}\r\n              >\r\n                {letter.letterRequestor?.name}\r\n              </Button>\r\n            </div>\r\n\r\n            {numUnsentRecipients > 0 && letter.uploadedAt !== null && (\r\n              <Button\r\n                // TODO: add Tooltip\r\n                variant=\"outline-light\"\r\n                className=\"flex-shrink-1 float-right ml-3\"\r\n                onClick={(e: any) => {\r\n                  e.stopPropagation();\r\n                  if (sendIsOpen) {\r\n                    this.closeSendModal();\r\n                  } else {\r\n                    this.openSendModal();\r\n                  }\r\n                }}\r\n              >\r\n                Send\r\n              </Button>\r\n            )}\r\n            <Button\r\n              // TODO: add Tooltip\r\n              disabled={numRecipients > 0}\r\n              variant=\"outline-light\"\r\n              className=\"flex-shrink-1 float-right ml-3\"\r\n              onClick={(e: any) => {\r\n                e.stopPropagation();\r\n                if (uploadIsOpen) {\r\n                  this.closeUploadModal();\r\n                } else {\r\n                  this.openUploadModal();\r\n                }\r\n              }}\r\n            >\r\n              Upload\r\n            </Button>\r\n            <Button\r\n              // TODO: add Tooltip\r\n              disabled={letter.uploadedAt === null}\r\n              variant=\"outline-light\"\r\n              className=\"flex-shrink-1 float-right ml-3\"\r\n              onClick={(e: any) => {\r\n                e.stopPropagation();\r\n                if (viewIsOpen) {\r\n                  this.closeViewModal();\r\n                } else {\r\n                  this.openViewModal();\r\n                }\r\n              }}\r\n            >\r\n              View\r\n            </Button>\r\n            <Button\r\n              // TODO: add Tooltip\r\n              disabled={numRecipients === 0}\r\n              variant=\"outline-light\"\r\n              className=\"flex-shrink-1 float-right ml-3\"\r\n              onClick={(e: any) => {\r\n                e.stopPropagation();\r\n                if (historyIsOpen) {\r\n                  this.closeHistoryModal();\r\n                } else {\r\n                  this.openHistoryModal();\r\n                }\r\n              }}\r\n            >\r\n              History\r\n            </Button>\r\n            <Button\r\n              // TODO: add Tooltip\r\n              variant=\"outline-light\"\r\n              className=\"flex-shrink-1 float-right ml-3\"\r\n              onClick={(e: any) => {\r\n                e.stopPropagation();\r\n                this.setState({ collapseIsOpen: !collapseIsOpen });\r\n              }}\r\n              aria-controls=\"example-collapse-text\"\r\n              aria-expanded={collapseIsOpen}\r\n            >\r\n              *\r\n            </Button>\r\n          </Card.Header>\r\n        </Card>\r\n        <Collapse in={collapseIsOpen}>\r\n          <div className=\"collapse-body-select\">\r\n            {sendIsOpen && <div>Send Letter Component</div>}\r\n            {uploadIsOpen && (\r\n              <div>\r\n                <FileUpload\r\n                  ref={this.uploadModal}\r\n                  user={this.props.user}\r\n                  restrictPdf={true}\r\n                  onUpload={this.openMessageModal.bind(this)}\r\n                  onClose={this.closeUploadModal.bind(this)}\r\n                ></FileUpload>\r\n              </div>\r\n            )}\r\n            {loadingHistory && (\r\n              <div className=\"d-flex justify-content-center\">\r\n                <Spinner\r\n                  className=\"mb-3\"\r\n                  animation=\"border\"\r\n                  variant=\"secondary\"\r\n                />\r\n              </div>\r\n            )}\r\n            {!loadingHistory && historyIsOpen && (\r\n              <div className=\"\">\r\n                <FileHistory\r\n                  user={user}\r\n                  history={history}\r\n                  onClose={this.closeHistoryModal.bind(this)}\r\n                ></FileHistory>\r\n              </div>\r\n            )}\r\n            {(loadingHistory || historyIsOpen) && <div className=\"mb-5\"></div>}\r\n            {!uploadIsOpen && !historyIsOpen && (\r\n              <div className=\"display-text d-flex text-white-50\">\r\n                <div className=\"flex-fill\">\r\n                  Requested: {letter.requestedAt?.toString()}\r\n                </div>\r\n                {letter.uploadedAt && (\r\n                  <div className=\" flex-shrink-1 float-right\">\r\n                    Uploaded: {letter.uploadedAt?.toString()}\r\n                  </div>\r\n                )}\r\n                {!letter.uploadedAt && (\r\n                  <div className=\" flex-shrink-1 float-right\">Not Uploaded</div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Collapse>\r\n\r\n        <Modal\r\n          id=\"profile-modal\"\r\n          show={profileIsOpen}\r\n          onHide={this.closeProfileModal.bind(this)}\r\n          // backdrop=\"static\"\r\n          animation={false}\r\n          className=\"modal\"\r\n          scrollable={false}\r\n          // size=\"sm\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{this.state.selectedUserProfile?.name}</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Profile\r\n              user={this.state.selectedUserProfile}\r\n              onClose={this.closeProfileModal.bind(this)}\r\n            />\r\n          </Modal.Body>\r\n        </Modal>\r\n\r\n        <Modal\r\n          id=\"confirm-modal\"\r\n          show={confirmIsOpen}\r\n          onHide={this.closeConfirmModal.bind(this)}\r\n          // backdrop=\"static\"\r\n          animation={false}\r\n          className=\"modal\"\r\n          scrollable={false}\r\n          // size=\"sm\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Please Confirm</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Confirm\r\n              user={this.props.user}\r\n              custom={true}\r\n              onConfirm={this.onUploadSubmit.bind(this)}\r\n              onClose={this.closeConfirmModal.bind(this)}\r\n            />\r\n          </Modal.Body>\r\n        </Modal>\r\n\r\n        <Modal\r\n          id=\"send-modal\"\r\n          show={sendIsOpen}\r\n          onHide={this.closeSendModal.bind(this)}\r\n          // backdrop=\"static\"\r\n          animation={false}\r\n          className=\"modal\"\r\n          scrollable={false}\r\n          // size=\"sm\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>List of Recipients</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Send\r\n              user={this.props.user}\r\n              letter={this.props.letter}\r\n              unsentRecipientKeys={this.state.unsentRecipientKeys}\r\n              onClose={this.onSendSubmit.bind(this)}\r\n            />\r\n          </Modal.Body>\r\n        </Modal>\r\n\r\n        <Modal\r\n          id=\"view-modal\"\r\n          show={viewIsOpen}\r\n          onHide={this.closeViewModal.bind(this)}\r\n          backdrop=\"static\"\r\n          animation={false}\r\n          className=\"modal view-modal\"\r\n          scrollable={false}\r\n          size=\"xl\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>For: {letter.letterRequestor?.name}</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <FileView\r\n              fileData={this.state.fileData}\r\n              ref={this.viewModal}\r\n              user={this.props.user}\r\n              onClose={this.closeViewModal.bind(this)}\r\n            ></FileView>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WriterLetterDisplay;\r\n","import React from \"react\";\r\nimport { Spinner, Col, Row } from \"react-bootstrap\";\r\n\r\nimport UserAuth from \"../common/UserAuth.interface\";\r\nimport LetterDetails from \"../common/LetterDetails.interface\";\r\nimport RequestBody from \"../common/RequestBody.interface\";\r\nimport ResponseBody from \"../common/ResponseBody.interface\";\r\n\r\nimport WriterLetterDisplay from \"../WriterLetterDisplay/WriterLetterDisplay\";\r\n\r\nimport \"./Writer.css\";\r\n\r\ninterface WriterProps {\r\n  user: UserAuth;\r\n}\r\n\r\ninterface WriterState {\r\n  letters: LetterDetails[];\r\n  numRecipients: Number[];\r\n  numUnsentRecipients: Number[];\r\n  loadingLetters: boolean;\r\n}\r\n\r\nclass Writer extends React.Component<WriterProps, WriterState> {\r\n  constructor(props: WriterProps) {\r\n    super(props);\r\n    this.state = {\r\n      letters: [],\r\n      numRecipients: [],\r\n      numUnsentRecipients: [],\r\n      loadingLetters: true,\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    // api call to get letters\r\n    this.loadLetterList();\r\n  }\r\n\r\n  async loadLetterList() {\r\n    const letterFetchUrl = `/api/v1/letters/written`;\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n    // get letters from server\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL}${letterFetchUrl}`, init)\r\n      .then((response) => {\r\n        response\r\n          .json()\r\n          .then((body: ResponseBody) => {\r\n            const data: {\r\n              letters: LetterDetails[];\r\n              numRecipients: Number[];\r\n              numUnsentRecipients: Number[];\r\n            } = body.data;\r\n\r\n            console.log(response);\r\n            if (data && data.letters && data.numRecipients) {\r\n              this.setState({\r\n                letters: data.letters,\r\n                numRecipients: data.numRecipients,\r\n                numUnsentRecipients: data.numUnsentRecipients,\r\n                loadingLetters: false,\r\n              });\r\n            } else {\r\n              this.setState({ loadingLetters: false });\r\n            }\r\n          })\r\n          .catch((e: Error) => {\r\n            console.log(e);\r\n          });\r\n      })\r\n      .catch((e: Error) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n    const {\r\n      letters,\r\n      numRecipients,\r\n      numUnsentRecipients,\r\n      loadingLetters,\r\n    } = this.state;\r\n\r\n    const lettersList = letters.map((l, k) => (\r\n      <WriterLetterDisplay\r\n        user={user}\r\n        letter={l}\r\n        numRecipients={numRecipients[k]}\r\n        numUnsentRecipients={numUnsentRecipients[k]}\r\n        onReload={this.loadLetterList.bind(this)}\r\n      />\r\n    ));\r\n\r\n    const writerLetters = (\r\n      <div className=\"writer-letters\">\r\n        <div className=\"writer-header\">\r\n          <h3> Letters </h3>\r\n        </div>\r\n        <div className=\"writer-letterslist\">{lettersList}</div>\r\n      </div>\r\n    );\r\n\r\n    const writerFooter = (\r\n      <div className=\"writer-footer\">\r\n        <span> Product of Team Gas</span>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <>\r\n        {!loadingLetters && letters.length !== 0 && (\r\n          <Col className=\"writer\">\r\n            <Row>{writerLetters}</Row>\r\n            {/* <Row>{writerFooter}</Row> */}\r\n          </Col>\r\n        )}\r\n\r\n        {!loadingLetters && letters.length === 0 && (\r\n            <div className=\"writer-header absolute-center\">\r\n              <h3> No Letters Requested </h3>\r\n            </div>\r\n        )}\r\n\r\n        {loadingLetters && (\r\n          <div className=\"d-flex justify-content-center absolute-center\">\r\n            <Spinner className=\"\" animation=\"border\" variant=\"secondary\" />\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Writer;\r\n","import Select from \"./Select\";\r\nexport default Select;","import React from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  InputGroup,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n  Modal,\r\n  Col,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport { Typeahead } from \"react-bootstrap-typeahead\";\r\n// import LetterDetails from \"../../common/LetterDetails.interface\";\r\n// import FileData from \"../../common/FileData.interface\";\r\nimport UserProfile from \"../../common/UserProfile.interface\";\r\nimport Profile from \"../Profile\";\r\nimport RequestBody from \"../../common/RequestBody.interface\";\r\nimport ResponseBody from \"../../common/ResponseBody.interface\";\r\nimport User from \"../../common/User.interface\";\r\nimport \"./Select.css\";\r\nimport UserAuth from \"../../common/UserAuth.interface\";\r\n\r\ninterface SelectProps {\r\n  user: UserAuth;\r\n  users: User[];\r\n  previouslySelectedRecipients: User[];\r\n  header: string;\r\n  onSubmit: (selectedRecipients: User[]) => void;\r\n  onClose: () => void;\r\n}\r\ninterface SelectState {\r\n  selectedRecipients: User[];\r\n  profileIsOpen: boolean;\r\n  selectedUserProfile?: UserProfile;\r\n}\r\n\r\nclass Select extends React.Component<SelectProps, SelectState> {\r\n  private userProfiles: Map<string, UserProfile>;\r\n  constructor(props: SelectProps) {\r\n    super(props);\r\n    this.state = {\r\n      selectedRecipients: this.props.previouslySelectedRecipients,\r\n      profileIsOpen: false,\r\n    };\r\n\r\n    this.userProfiles = new Map<string, UserProfile>();\r\n  }\r\n\r\n  async closeProfileModal() {\r\n    console.log(\"closing profile modal\");\r\n    this.setState({ profileIsOpen: false });\r\n  }\r\n\r\n  async openProfileModal(publicAddress: string) {\r\n    console.log(\"opening profile modal\");\r\n    const userProfile = this.userProfiles.get(publicAddress);\r\n    console.log(userProfile);\r\n    if (userProfile === undefined) {\r\n      const fetchUrl = `/api/v1/users/${publicAddress}/profile`;\r\n      this.retrieveProfileFromServer(fetchUrl);\r\n    } else {\r\n      this.setState({ selectedUserProfile: userProfile, profileIsOpen: true });\r\n    }\r\n  }\r\n\r\n  async retrieveProfileFromServer(fetchUrl: string) {\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n\r\n    // get user profile from server\r\n    try {\r\n      let response = await fetch(\r\n        `${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`,\r\n        init\r\n      );\r\n      let body = await response.json();\r\n\r\n      const data: UserProfile[] = body.data;\r\n      console.log(response);\r\n      console.log(data);\r\n      if (data && data.length !== 0) {\r\n        this.userProfiles.set(data[0].publicAddress, data[0]);\r\n        this.setState({\r\n          profileIsOpen: true,\r\n          selectedUserProfile: data[0],\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  onSelectSubmit() {\r\n    console.log(\"select submit\");\r\n    this.props.onSubmit(this.state.selectedRecipients);\r\n  }\r\n\r\n  render() {\r\n    const { users, header } = this.props;\r\n    const { profileIsOpen, selectedRecipients } = this.state;\r\n\r\n    const selectRecipients = (\r\n      <Fragment>\r\n        <InputGroup className=\"border-radius mb-0\">\r\n          <div className=\"multiple-typeahead recipient-typeahead\">\r\n            <Typeahead\r\n              id=\"select-recipients-typeahead\"\r\n              // minLength={2}\r\n              multiple\r\n              labelKey=\"name\"\r\n              filterBy={[\"name\", \"publicAddress\"]}\r\n              options={users}\r\n              // placeholder=\"Select Recipients\" // can't change color to white\r\n              paginate={true}\r\n              selected={selectedRecipients}\r\n              onChange={(selected) => {\r\n                console.log(selected);\r\n                this.setState({\r\n                  selectedRecipients: selected,\r\n                });\r\n              }}\r\n              renderMenuItemChildren={\r\n                (option) =>\r\n                  `${option.name} (${option.publicAddress.slice(0, 6)} . . . )` // TODO: add padding with service\r\n              }\r\n            />\r\n          </div>\r\n        </InputGroup>\r\n      </Fragment>\r\n    );\r\n\r\n    let recipientsList = [];\r\n    if (selectedRecipients) {\r\n      for (let i = 0; i < selectedRecipients.length; i += 3) {\r\n        recipientsList.push(\r\n          <Row>\r\n            <Col>\r\n              <div className=\"d-flex justify-content-between recipient-entry\">\r\n                <div\r\n                  className=\"flex-fill body-text\"\r\n                  onClick={() =>\r\n                    this.openProfileModal(selectedRecipients[i].publicAddress)\r\n                  }\r\n                >\r\n                  {selectedRecipients[i].name}\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            {i + 1 < selectedRecipients.length && (\r\n              <Col>\r\n                <div className=\"d-flex justify-content-between recipient-entry\">\r\n                  <div\r\n                    className=\"flex-fill body-text\"\r\n                    onClick={() =>\r\n                      this.openProfileModal(\r\n                        selectedRecipients[i + 1].publicAddress\r\n                      )\r\n                    }\r\n                  >\r\n                    {selectedRecipients[i + 1].name}\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            )}\r\n\r\n            {i + 1 >= selectedRecipients.length && (\r\n              <Col>\r\n                <Card.Header className=\"d-flex justify-content-between recipient-placeholder\"></Card.Header>\r\n              </Col>\r\n            )}\r\n\r\n            {i + 2 < selectedRecipients.length && (\r\n              <Col>\r\n                <div className=\"d-flex justify-content-between recipient-entry\">\r\n                  <div\r\n                    className=\"flex-fill body-text\"\r\n                    onClick={() =>\r\n                      this.openProfileModal(\r\n                        selectedRecipients[i + 2].publicAddress\r\n                      )\r\n                    }\r\n                  >\r\n                    {selectedRecipients[i + 2].name}\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            )}\r\n\r\n            {i + 2 >= selectedRecipients.length && (\r\n              <Col>\r\n                <Card.Header className=\"d-flex justify-content-between recipient-placeholder\"></Card.Header>\r\n              </Col>\r\n            )}\r\n          </Row>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <h5>{header}</h5>\r\n        </Row>\r\n        <div className=\"mb-3\">{selectRecipients}</div>\r\n        {selectedRecipients.length !== 0 && (\r\n          <Col className=\"recipient-display mb-3\">{recipientsList}</Col>\r\n        )}\r\n\r\n        <div className=\"d-flex border-radius button-blur mb-2\">\r\n          <div className=\"flex-fill\"></div>\r\n          {selectedRecipients.length !== 0 && (\r\n            <Button\r\n              variant=\"outline-light\"\r\n              className=\"flex-shrink-1 float-right\"\r\n              onClick={() => {\r\n                this.props.onSubmit(selectedRecipients);\r\n              }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          )}\r\n          {selectedRecipients.length === 0 && (\r\n            <OverlayTrigger\r\n              overlay={\r\n                <Tooltip id=\"tooltip-disabled\" placement=\"right\">\r\n                  No Recipients Selected\r\n                </Tooltip>\r\n              }\r\n            >\r\n              <span className=\"d-inline-block\">\r\n                <Button\r\n                  variant=\"outline-light\"\r\n                  className=\"flex-shrink-1 float-right\"\r\n                  disabled\r\n                  style={{ pointerEvents: \"none\" }}\r\n                  onClick={() => {\r\n                    this.props.onSubmit(selectedRecipients);\r\n                  }}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger>\r\n          )}\r\n          <Button\r\n            variant=\"outline-light\"\r\n            className=\"flex-shrink-1 ml-3\"\r\n            onClick={() => {\r\n              this.setState({\r\n                selectedRecipients: this.props.previouslySelectedRecipients,\r\n              });\r\n            }}\r\n          >\r\n            Reset\r\n          </Button>\r\n\r\n          <Button\r\n            variant=\"outline-light\"\r\n            className=\"flex-shrink-1 float-right ml-3\"\r\n            onClick={() => {\r\n              this.props.onClose();\r\n            }}\r\n          >\r\n            Close\r\n          </Button>\r\n        </div>\r\n\r\n        <Modal\r\n          id=\"profile-modal\"\r\n          show={profileIsOpen}\r\n          onHide={this.closeProfileModal.bind(this)}\r\n          // backdrop=\"static\"\r\n          animation={false}\r\n          className=\"modal\"\r\n          scrollable={false}\r\n          // size=\"sm\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{this.state.selectedUserProfile?.name}</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            {this.state.selectedUserProfile && (\r\n              <Profile\r\n                user={this.state.selectedUserProfile}\r\n                onClose={this.closeProfileModal.bind(this)}\r\n              />\r\n            )}\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Select;\r\n","import Confirm from \"./Confirm\";\r\nexport default Confirm;","import React from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Spinner,\r\n  Modal,\r\n  Collapse,\r\n  Col,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport { Typeahead } from \"react-bootstrap-typeahead\";\r\nimport UserProfile from \"../common/UserProfile.interface\";\r\nimport UserAuth from \"../common/UserAuth.interface\";\r\nimport LetterHistory from \"../common/LetterHistory.interface\";\r\nimport RequestBody from \"../common/RequestBody.interface\";\r\nimport ResponseBody from \"../common/ResponseBody.interface\";\r\nimport User from \"../common/User.interface\";\r\nimport \"./RequestorLetterDisplay.css\";\r\nimport LetterDetails from \"../common/LetterDetails.interface\";\r\n\r\nimport Confirm from \"../components/Confirm\";\r\nimport FileView from \"../components/FileView\";\r\nimport FileHistory from \"../components/FileHistory\";\r\nimport Profile from \"../components/Profile\";\r\nimport Select from \"../components/Select\";\r\n\r\ninterface RequestorLetterDisplayProps {\r\n  user: UserAuth;\r\n  letter: LetterDetails;\r\n  numRecipients: Number;\r\n  users: User[];\r\n}\r\ninterface RequestorLetterDisplayState {\r\n  history: LetterHistory[];\r\n  loadingSelect: boolean;\r\n  loadingHistory: boolean;\r\n  selectIsOpen: boolean;\r\n  profileIsOpen: boolean;\r\n  historyIsOpen: boolean;\r\n  uploadIsOpen: boolean;\r\n  confirmIsOpen: boolean;\r\n  collapseIsOpen: boolean;\r\n  previouslySelectedRecipients: User[];\r\n  selectedRecipients: User[];\r\n  selectedPublicAddress?: string;\r\n  selectedUserProfile?: UserProfile;\r\n}\r\n\r\nclass RequestorLetterDisplay extends React.Component<\r\n  RequestorLetterDisplayProps,\r\n  RequestorLetterDisplayState\r\n> {\r\n  private userProfiles: Map<string, UserProfile>;\r\n\r\n  constructor(props: RequestorLetterDisplayProps) {\r\n    super(props);\r\n    this.state = {\r\n      history: [],\r\n      loadingHistory: false,\r\n      loadingSelect: false,\r\n      selectIsOpen: false,\r\n      profileIsOpen: false,\r\n      historyIsOpen: false,\r\n      uploadIsOpen: false,\r\n      confirmIsOpen: false,\r\n      collapseIsOpen: false,\r\n      previouslySelectedRecipients: [],\r\n      selectedRecipients: [],\r\n    };\r\n\r\n    this.userProfiles = new Map<string, UserProfile>();\r\n  }\r\n\r\n  async onSelectSubmit(customMessage: string) {\r\n    console.log(\"on select submit\");\r\n    // this.setState({ confirmIsOpen: false });\r\n    const fetchUrl = `/api/v1/letters/${this.props.letter.letterId}/updateRecipients`;\r\n    this.sendUpdatedLetterRecipientsToServer(fetchUrl);\r\n  }\r\n\r\n  async sendUpdatedLetterRecipientsToServer(fetchUrl: string) {\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: this.state.selectedRecipients,\r\n      }),\r\n    };\r\n\r\n    try {\r\n      let response = await fetch(\r\n        `${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`,\r\n        init\r\n      );\r\n      if (response.status === 400) {\r\n        console.log(response.status);\r\n      } else {\r\n        let body = await response.json();\r\n\r\n        const data: User[] = body.data;\r\n        console.log(response);\r\n        console.log(data);\r\n        if (data && data.length !== 0) {\r\n          this.setState({\r\n            selectIsOpen: false,\r\n            confirmIsOpen: false,\r\n            collapseIsOpen: this.state.historyIsOpen,\r\n            previouslySelectedRecipients: data,\r\n          });\r\n        } else {\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  async closeSelectModal() {\r\n    console.log(\"closing select modal\");\r\n    this.setState({\r\n      selectIsOpen: false,\r\n      loadingSelect: false,\r\n      collapseIsOpen: this.state.historyIsOpen,\r\n    });\r\n  }\r\n\r\n  async openSelectModal() {\r\n    console.log(\"on send click\");\r\n    // fetch backend to get recipients list (who the letter has not been sent to)\r\n    const fetchUrl = `/api/v1/letters/${this.props.letter.letterId}/unsentRecipients`;\r\n\r\n    if (this.state.previouslySelectedRecipients.length === 0) {\r\n      this.setState({\r\n        loadingSelect: true,\r\n        collapseIsOpen: true,\r\n        selectIsOpen: true,\r\n      });\r\n      this.retrieveUnsentRecipientsFromServer(fetchUrl);\r\n    } else {\r\n      this.setState({\r\n        selectIsOpen: true,\r\n        collapseIsOpen: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  async retrieveUnsentRecipientsFromServer(fetchUrl: string) {\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n\r\n    try {\r\n      let response = await fetch(\r\n        `${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`,\r\n        init\r\n      );\r\n      if (response.status === 400) {\r\n        console.log(response.status);\r\n        this.setState({\r\n          loadingSelect: false,\r\n          // selectIsOpen: false,\r\n          // collapseIsOpen: this.state.historyIsOpen,\r\n        });\r\n      } else {\r\n        let body = await response.json();\r\n\r\n        const data: User[] = body.data;\r\n        console.log(response);\r\n        console.log(data);\r\n        this.setState({\r\n          previouslySelectedRecipients: data,\r\n          loadingSelect: false,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      this.setState({\r\n        loadingSelect: false,\r\n        // selectIsOpen: false,\r\n        // collapseIsOpen: this.state.historyIsOpen,\r\n      });\r\n    }\r\n  }\r\n\r\n  async openMessageModal(selectedRecipients: User[]) {\r\n    this.setState({ selectedRecipients: selectedRecipients });\r\n    this.openConfirmModal();\r\n  }\r\n\r\n  async closeMessageModal() {}\r\n\r\n  async closeProfileModal() {\r\n    console.log(\"closing profile modal\");\r\n    this.setState({ profileIsOpen: false, selectedUserProfile: undefined });\r\n  }\r\n\r\n  async openProfileModal(publicAddress: string) {\r\n    console.log(\"opening profile modal\");\r\n    const userProfile = this.userProfiles.get(publicAddress);\r\n    console.log(userProfile);\r\n    if (userProfile === undefined) {\r\n      this.setState({ profileIsOpen: true });\r\n      const fetchUrl = `/api/v1/users/${publicAddress}/profile`;\r\n      this.retrieveProfileFromServer(fetchUrl);\r\n    } else {\r\n      this.setState({ selectedUserProfile: userProfile, profileIsOpen: true });\r\n    }\r\n  }\r\n\r\n  async retrieveProfileFromServer(fetchUrl: string) {\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n\r\n    try {\r\n      let response = await fetch(\r\n        `${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`,\r\n        init\r\n      );\r\n\r\n      if (response.status === 400) {\r\n        console.log(response.status);\r\n        // this.setState({\r\n        //   profileIsOpen: false,\r\n        // });\r\n      } else {\r\n        let body = await response.json();\r\n        const data: UserProfile[] = body.data;\r\n        console.log(response);\r\n        console.log(data);\r\n        if (data && data.length !== 0) {\r\n          this.userProfiles.set(data[0].publicAddress, data[0]);\r\n          this.setState({\r\n            selectedUserProfile: data[0],\r\n          });\r\n        } else {\r\n          // this.setState({\r\n          //   profileIsOpen: false,\r\n          // });\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      // this.setState({\r\n      //   profileIsOpen: false,\r\n      // });\r\n    }\r\n  }\r\n\r\n  async closeHistoryModal() {\r\n    console.log(\"closing history modal\");\r\n    this.setState({\r\n      historyIsOpen: false,\r\n      loadingHistory: false,\r\n      collapseIsOpen: this.state.selectIsOpen,\r\n    });\r\n  }\r\n\r\n  async openHistoryModal() {\r\n    console.log(\"opening history modal\");\r\n\r\n    if (this.state.history.length === 0) {\r\n      this.setState({\r\n        loadingHistory: true,\r\n        historyIsOpen: true,\r\n        collapseIsOpen: true,\r\n      });\r\n      const letterId = this.props.letter.letterId;\r\n      const fetchUrl = `/api/v1/letters/${letterId}/history`;\r\n      this.retrieveHistoryFromServer(fetchUrl);\r\n    } else {\r\n      this.setState({\r\n        historyIsOpen: true,\r\n        collapseIsOpen: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  async retrieveHistoryFromServer(fetchUrl: string) {\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`,\r\n        init\r\n      );\r\n      if (response.status === 400) {\r\n        console.log(response.status);\r\n        this.setState({\r\n          // historyIsOpen: false,\r\n          loadingHistory: false,\r\n          // collapseIsOpen: this.state.selectIsOpen,\r\n        });\r\n      } else {\r\n        const body = await response.json();\r\n\r\n        const data: LetterHistory[] = body.data;\r\n        console.log(response);\r\n        console.log(data);\r\n        if (data) {\r\n          this.setState({\r\n            history: data,\r\n            loadingHistory: false,\r\n          });\r\n        } else {\r\n          console.log(\"fetch for letterHistory failed\");\r\n          this.setState({\r\n            // historyIsOpen: false,\r\n            loadingHistory: false,\r\n            // collapseIsOpen: this.state.selectIsOpen,\r\n          });\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      this.setState({\r\n        // historyIsOpen: false,\r\n        loadingHistory: false,\r\n        // collapseIsOpen: this.state.selectIsOpen,\r\n      });\r\n    }\r\n  }\r\n\r\n  async openConfirmModal() {\r\n    console.log(\"open confirm modal\");\r\n    this.setState({ confirmIsOpen: true });\r\n  }\r\n\r\n  async closeConfirmModal() {\r\n    console.log(\"close confirm modal\");\r\n    this.setState({ confirmIsOpen: false });\r\n  }\r\n\r\n  render() {\r\n    const { user, letter, numRecipients, users } = this.props;\r\n    const {\r\n      history,\r\n      loadingSelect,\r\n      loadingHistory,\r\n      selectIsOpen,\r\n      profileIsOpen,\r\n      historyIsOpen,\r\n      uploadIsOpen,\r\n      confirmIsOpen,\r\n      collapseIsOpen,\r\n      previouslySelectedRecipients,\r\n      selectedRecipients,\r\n      selectedPublicAddress,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Card className=\"full-width opacity-0\">\r\n          <Card.Header\r\n            className=\"d-flex justify-content-between button-blur letter-entry\"\r\n            onClick={() => this.setState({ collapseIsOpen: !collapseIsOpen })}\r\n          >\r\n            <div className=\"flex-fill\">\r\n              <span className=\"mr-3\">From:</span>\r\n              <Button\r\n                variant=\"outline-light\"\r\n                onClick={(e: any) => {\r\n                  e.stopPropagation();\r\n                  this.openProfileModal(letter.letterWriter.publicAddress);\r\n                }}\r\n              >\r\n                {letter.letterWriter?.name}\r\n              </Button>\r\n            </div>\r\n            <Button\r\n              // TODO: add Tooltip\r\n              variant=\"outline-light\"\r\n              className=\"flex-shrink-1 float-right ml-3\"\r\n              onClick={(e: any) => {\r\n                e.stopPropagation();\r\n                if (selectIsOpen) {\r\n                  this.closeSelectModal();\r\n                } else {\r\n                  this.openSelectModal();\r\n                }\r\n              }}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              disabled={numRecipients === 0}\r\n              variant=\"outline-light\"\r\n              className=\"flex-shrink-1 float-right ml-3\"\r\n              onClick={(e: any) => {\r\n                e.stopPropagation();\r\n                if (historyIsOpen) {\r\n                  this.closeHistoryModal();\r\n                } else {\r\n                  this.openHistoryModal();\r\n                }\r\n              }}\r\n            >\r\n              History\r\n            </Button>\r\n            <Button\r\n              variant=\"outline-light\"\r\n              className=\"flex-shrink-1 float-right ml-3\"\r\n              onClick={(e: any) => {\r\n                e.stopPropagation();\r\n                this.setState({ collapseIsOpen: !collapseIsOpen });\r\n              }}\r\n              aria-controls=\"example-collapse-text\"\r\n              aria-expanded={collapseIsOpen}\r\n            >\r\n              *\r\n            </Button>\r\n          </Card.Header>\r\n        </Card>\r\n        <Collapse in={collapseIsOpen}>\r\n          <div className=\"collapse-body-select\">\r\n            {loadingSelect && (\r\n              <div className=\"d-flex justify-content-center\">\r\n                <Spinner\r\n                  className=\"mb-3\"\r\n                  animation=\"border\"\r\n                  variant=\"secondary\"\r\n                />\r\n              </div>\r\n            )}\r\n            {!loadingSelect && selectIsOpen && (\r\n              <div>\r\n                <Select\r\n                  user={user}\r\n                  previouslySelectedRecipients={\r\n                    this.state.previouslySelectedRecipients\r\n                  }\r\n                  header=\"Edit Recipients\"\r\n                  onClose={this.closeSelectModal.bind(this)}\r\n                  onSubmit={this.openMessageModal.bind(this)}\r\n                  users={users.filter(\r\n                    (user: User) =>\r\n                      user.publicAddress !== letter.letterWriter.publicAddress\r\n                  )}\r\n                ></Select>\r\n              </div>\r\n            )}\r\n            {loadingHistory && (\r\n              <div className=\"d-flex justify-content-center\">\r\n                <Spinner\r\n                  className=\"mb-3\"\r\n                  animation=\"border\"\r\n                  variant=\"secondary\"\r\n                />\r\n              </div>\r\n            )}\r\n            {!loadingHistory && historyIsOpen && (\r\n              <div className=\"\">\r\n                <FileHistory\r\n                  user={user}\r\n                  history={history}\r\n                  onClose={this.closeHistoryModal.bind(this)}\r\n                ></FileHistory>\r\n              </div>\r\n            )}\r\n            {(loadingHistory || historyIsOpen) && <div className=\"mb-5\"></div>}\r\n            {!selectIsOpen && !historyIsOpen && (\r\n              <div className=\"display-text d-flex text-white-50\">\r\n                <div className=\"flex-fill\">\r\n                  Requested: {letter.requestedAt?.toString()}\r\n                </div>\r\n                {letter.uploadedAt && (\r\n                  <div className=\" flex-shrink-1 float-right\">\r\n                    Uploaded: {letter.uploadedAt?.toString()}\r\n                  </div>\r\n                )}\r\n                {!letter.uploadedAt && (\r\n                  <div className=\" flex-shrink-1 float-right\">Not Uploaded</div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Collapse>\r\n\r\n        <Modal\r\n          id=\"profile-modal\"\r\n          show={profileIsOpen}\r\n          onHide={this.closeProfileModal.bind(this)}\r\n          // backdrop=\"static\"\r\n          animation={false}\r\n          className=\"modal\"\r\n          scrollable={false}\r\n          // size=\"sm\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{this.state.selectedUserProfile?.name}</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Profile\r\n              user={this.state.selectedUserProfile}\r\n              onClose={this.closeProfileModal.bind(this)}\r\n            />\r\n          </Modal.Body>\r\n        </Modal>\r\n\r\n        <Modal\r\n          id=\"confirm-modal\"\r\n          show={confirmIsOpen}\r\n          onHide={this.closeConfirmModal.bind(this)}\r\n          // backdrop=\"static\"\r\n          animation={false}\r\n          className=\"modal\"\r\n          scrollable={false}\r\n          // size=\"sm\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Please Confirm</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Confirm\r\n              user={this.props.user}\r\n              custom={false}\r\n              onConfirm={this.onSelectSubmit.bind(this)}\r\n              onClose={this.closeConfirmModal.bind(this)}\r\n            />\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RequestorLetterDisplay;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  InputGroup,\r\n  Card,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n  Spinner,\r\n  Row,\r\n  Col,\r\n  Container,\r\n} from \"react-bootstrap\";\r\nimport { Typeahead } from \"react-bootstrap-typeahead\";\r\nimport { Fragment } from \"react\";\r\n\r\nimport User from \"../common/User.interface\";\r\nimport UserAuth from \"../common/UserAuth.interface\";\r\nimport LetterDetails from \"../common/LetterDetails.interface\";\r\nimport ResponseBody from \"../common/ResponseBody.interface\";\r\nimport Select from \"../components/Select\";\r\nimport RequestorLetterDisplay from \"../RequestorLetterDisplay/RequestorLetterDisplay\";\r\nimport Confirm from \"../components/Confirm\";\r\nimport \"./Requestor.css\";\r\nimport CacheService from \"../services/CacheService\";\r\n\r\ninterface RequestorProps {\r\n  user: UserAuth;\r\n}\r\n\r\ninterface RequestorState {\r\n  users: User[];\r\n  letters: LetterDetails[];\r\n  numRecipients: Number[];\r\n  loadingLetters: boolean;\r\n  dualMode: boolean;\r\n  loadingSelect: boolean;\r\n  selectIsOpen: boolean;\r\n  messageIsOpen: boolean;\r\n  confirmIsOpen: boolean;\r\n  selectedWriter: User[];\r\n  selectedRecipients: User[];\r\n}\r\n\r\nclass Requestor extends React.Component<RequestorProps, RequestorState> {\r\n  private writerTypeahead = React.createRef<Typeahead<User>>();\r\n\r\n  constructor(props: RequestorProps) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      letters: [],\r\n      numRecipients: [],\r\n      loadingLetters: true,\r\n      dualMode: false,\r\n      loadingSelect: false,\r\n      selectIsOpen: false,\r\n      messageIsOpen: false,\r\n      confirmIsOpen: false,\r\n      selectedWriter: [],\r\n      selectedRecipients: [],\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    // api call to get users and letters\r\n    // TODO: move users fetch to parent component\r\n    const userFetchUrl = `/api/v1/users`;\r\n    const userInit: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n\r\n    // get user profile from server\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL}${userFetchUrl}`, userInit)\r\n      .then((response) => {\r\n        response\r\n          .json()\r\n          .then((body: ResponseBody) => {\r\n            const data: User[] = body.data;\r\n            console.log(response);\r\n            console.log(body.data);\r\n            if (data) {\r\n              this.setState({\r\n                users: data,\r\n              });\r\n            } else {\r\n              console.log(\"problem with response data for requestor\");\r\n            }\r\n          })\r\n          .catch((e: Error) => {\r\n            console.log(e);\r\n          });\r\n      })\r\n      .catch((e: Error) => {\r\n        console.log(e);\r\n      });\r\n\r\n    const letterFetchUrl = `/api/v1/letters/requested`;\r\n    const letterInit: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n\r\n    // get letters from server\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL}${letterFetchUrl}`, letterInit)\r\n      .then((response) => {\r\n        response\r\n          .json()\r\n          .then((body: ResponseBody) => {\r\n            const data: { letters: LetterDetails[]; numRecipients: Number[] } =\r\n              body.data;\r\n            console.log(response);\r\n            console.log(body.data);\r\n            if (data && data.letters && data.numRecipients) {\r\n              this.setState({\r\n                letters: data.letters,\r\n                numRecipients: data.numRecipients,\r\n                loadingLetters: false,\r\n              });\r\n            } else {\r\n              this.setState({ loadingLetters: false });\r\n            }\r\n          })\r\n          .catch((e: Error) => {\r\n            console.log(e);\r\n          });\r\n      })\r\n      .catch((e: Error) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  async closeSelectModal() {\r\n    console.log(\"closing select modal\");\r\n    this.setState({ selectIsOpen: false, selectedWriter: [], dualMode: false });\r\n  }\r\n\r\n  async openSelectModal() {\r\n    console.log(\"opening select modal\");\r\n    if (this.state.selectedWriter.length !== 0) {\r\n      this.setState({\r\n        selectIsOpen: true,\r\n        dualMode: true,\r\n        selectedRecipients: [],\r\n      });\r\n    }\r\n  }\r\n\r\n  async onSelectSubmit(customMessage: string) {\r\n    console.log(\"on select submit\");\r\n\r\n    // TODO: necessary checks before fetching backend to create new request with letter details and indicated list of recipients\r\n    const fetchUrl = `/api/v1/letters/create`;\r\n    this.sendNewLetterRequestToServer(fetchUrl, customMessage);\r\n  }\r\n\r\n  async sendNewLetterRequestToServer(fetchUrl: string, customMessage: string) {\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {\r\n          selectedRecipients: this.state.selectedRecipients,\r\n          letterWriter: this.state.selectedWriter[0].publicAddress,\r\n          customMessage: customMessage,\r\n        },\r\n      }),\r\n    };\r\n\r\n    try {\r\n      let response = await fetch(\r\n        `${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`,\r\n        init\r\n      );\r\n      if (response.status === 400) {\r\n        console.log(response.status);\r\n      } else {\r\n        let body = await response.json();\r\n        const data: { letters: LetterDetails[]; numRecipients: Number[] } =\r\n          body.data;\r\n        console.log(response);\r\n        console.log(data);\r\n        if (data) {\r\n          // let l = this.state.letters;\r\n          // l.push(data.letter);\r\n\r\n          // let n = this.state.numRecipients;\r\n          // n.push(data.numRecipient);\r\n\r\n          this.setState({\r\n            confirmIsOpen: false,\r\n            letters: data.letters,\r\n            numRecipients: data.numRecipients,\r\n            selectIsOpen: false,\r\n            dualMode: false,\r\n            selectedWriter: [],\r\n          });\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  async openMessageModal(selectedRecipients: User[]) {\r\n    this.setState({ selectedRecipients: selectedRecipients });\r\n    this.openConfirmModal();\r\n  }\r\n\r\n  async closeMessageModal() {}\r\n\r\n  async openConfirmModal() {\r\n    console.log(\"open confirm modal\");\r\n    this.setState({ confirmIsOpen: true });\r\n  }\r\n\r\n  async closeConfirmModal() {\r\n    console.log(\"close confirm modal\");\r\n    this.setState({ confirmIsOpen: false });\r\n  }\r\n\r\n  render() {\r\n    const user = this.props.user;\r\n    const {\r\n      users,\r\n      letters,\r\n      numRecipients,\r\n      loadingLetters,\r\n      dualMode,\r\n      selectIsOpen,\r\n      messageIsOpen,\r\n      confirmIsOpen,\r\n      selectedWriter,\r\n    } = this.state;\r\n\r\n    // const options = range(0, 1000).map((o) => `Item ${o}`);\r\n    const options = this.state.users;\r\n\r\n    const selectWriter = (\r\n      <Fragment>\r\n        <InputGroup className=\"d-flex justify-content-between border-radius button-blur mb-0\">\r\n          <div\r\n            className=\"flex-fill single-typeahead\"\r\n            onClick={() => {\r\n              this.setState({ selectedWriter: [] });\r\n            }}\r\n          >\r\n            <Typeahead\r\n              id=\"select-writer-typeahead\"\r\n              // minLength={2}\r\n              labelKey=\"name\"\r\n              filterBy={[\"name\", \"publicAddress\"]}\r\n              options={options}\r\n              placeholder=\"Select a Writer\"\r\n              paginate={true}\r\n              selected={this.state.selectedWriter}\r\n              onChange={(selected) => {\r\n                console.log(\"selected\", selected);\r\n                this.setState({\r\n                  selectedWriter: selected,\r\n                  selectIsOpen: true,\r\n                  dualMode: true,\r\n                });\r\n              }}\r\n              renderMenuItemChildren={\r\n                (option) =>\r\n                  `${option.name} (${option.publicAddress.slice(0, 6)} . . . )` // TODO: add padding with service\r\n              }\r\n              ref={this.writerTypeahead}\r\n            />\r\n          </div>\r\n\r\n          {/* {dualMode && (\r\n            <Button\r\n              variant=\"outline-light\"\r\n              className=\"ml-4 flex-shrink-1\"\r\n              onClick={() => {\r\n                if (selectIsOpen) {\r\n                  this.closeSelectModal();\r\n                } else {\r\n                  this.openSelectModal();\r\n                }\r\n              }}\r\n            >\r\n              {selectIsOpen ? \"Close\" : \"Select\"}\r\n            </Button>\r\n          )} */}\r\n\r\n          {/* {selectedWriter.length !== 0 && (\r\n            <Button\r\n              variant=\"outline-light\"\r\n              className=\"flex-shrink-1\"\r\n              onClick={() => {\r\n                if (selectIsOpen) {\r\n                  this.closeSelectModal();\r\n                } else {\r\n                  this.openSelectModal();\r\n                }\r\n              }}\r\n            >\r\n              {selectIsOpen ? \"Close\" : \"Select\"}\r\n            </Button>\r\n          )} */}\r\n\r\n          {/* {selectedWriter.length === 0 && (\r\n            <OverlayTrigger\r\n              overlay={\r\n                <Tooltip id=\"tooltip-disabled\" placement=\"left\">\r\n                  Select An User\r\n                </Tooltip>\r\n              }\r\n            >\r\n              <span className=\"d-inline-block\">\r\n                <Button\r\n                  variant=\"outline-light\"\r\n                  className=\"flex-shrink-1\"\r\n                  disabled\r\n                  style={{ pointerEvents: \"none\" }}\r\n                  onClick={() => {\r\n                    if (selectIsOpen) {\r\n                      this.closeSelectModal();\r\n                    } else {\r\n                      this.openSelectModal();\r\n                    }\r\n                  }}\r\n                >\r\n                  {selectIsOpen ? \"Close\" : \"Select\"}\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger>\r\n          )} */}\r\n        </InputGroup>\r\n      </Fragment>\r\n    );\r\n\r\n    const lettersList = letters.map((l, k) => (\r\n      <RequestorLetterDisplay\r\n        user={user}\r\n        letter={l}\r\n        numRecipients={numRecipients[k]}\r\n        users={users}\r\n      />\r\n    ));\r\n    \r\n    const requestorSelect = (\r\n      <div className=\"requestor-select\">\r\n        <div className=\"requestor-header\">\r\n          <h3 className=\"mb-3\">New Request</h3>\r\n        </div>\r\n        <Card.Header className=\"requestor-select-writer\">\r\n          <div>{selectWriter}</div>\r\n        </Card.Header>\r\n        {selectIsOpen && selectedWriter.length === 1 && (\r\n          <div className=\"collapse-body-select\">\r\n            <Select\r\n              user={this.props.user}\r\n              previouslySelectedRecipients={[]}\r\n              header=\"Select Recipients\"\r\n              onClose={this.closeSelectModal.bind(this)}\r\n              onSubmit={this.openMessageModal.bind(this)}\r\n              users={this.state.users.filter(\r\n                (user: User) =>\r\n                  user.publicAddress !== selectedWriter[0].publicAddress\r\n              )}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n\r\n    const requestorLetter = (\r\n      <div className=\"requestor-letters\">\r\n        <h3> Requests </h3>\r\n        <div className=\"requestor-letterslist\">{lettersList}</div>\r\n      </div>\r\n    );\r\n\r\n    const requestorFooter = (\r\n      <div className=\"requestor-footer\">\r\n        <span> Product of Team Gas</span>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <>\r\n        {!loadingLetters && letters.length === 0 && (\r\n          <Col className=\"requestor\">\r\n            <Row>{requestorSelect}</Row>\r\n            {/* <Row>{requestorLetter}</Row> */}\r\n            {/* <Row>{requestorFooter}</Row> */}\r\n          </Col>\r\n        )}\r\n        {!loadingLetters && !dualMode && letters.length !== 0 && (\r\n          <Col className=\"requestor\">\r\n            <Row>{requestorSelect}</Row>\r\n            <Row>{requestorLetter}</Row>\r\n            {/* <Row>{requestorFooter}</Row> */}\r\n          </Col>\r\n        )}\r\n\r\n        {!loadingLetters && dualMode && letters.length !== 0 && (\r\n          <Col>\r\n            <Row className=\"requestor-dual\">\r\n              <Col className=\"ml-5 mr-5\">\r\n                <Row>{requestorSelect}</Row>\r\n              </Col>\r\n              <Col className=\"mr-5 ml-5\">\r\n                <Row>{requestorLetter}</Row>\r\n              </Col>\r\n            </Row>\r\n            {/* <Row>{requestorFooter}</Row> */}\r\n          </Col>\r\n        )}\r\n\r\n        {loadingLetters && (\r\n          <div className=\"d-flex justify-content-center absolute-center\">\r\n            <Spinner className=\"\" animation=\"border\" variant=\"secondary\" />\r\n          </div>\r\n        )}\r\n\r\n        <Modal\r\n          id=\"confirm-modal\"\r\n          show={confirmIsOpen}\r\n          onHide={this.closeConfirmModal.bind(this)}\r\n          // backdrop=\"static\"\r\n          animation={false}\r\n          className=\"modal\"\r\n          scrollable={false}\r\n          // size=\"sm\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Please Confirm</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Confirm\r\n              user={this.props.user}\r\n              custom={true}\r\n              onConfirm={this.onSelectSubmit.bind(this)}\r\n              onClose={this.closeConfirmModal.bind(this)}\r\n            />\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Requestor;\r\n","import React from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Spinner,\r\n  Modal,\r\n  Collapse,\r\n  Col,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport UserProfile from \"../common/UserProfile.interface\";\r\nimport UserAuth from \"../common/UserAuth.interface\";\r\nimport LetterHistory from \"../common/LetterHistory.interface\";\r\nimport RequestBody from \"../common/RequestBody.interface\";\r\nimport ResponseBody from \"../common/ResponseBody.interface\";\r\nimport \"./RecipientLetterDisplay.css\";\r\nimport LetterDetails from \"../common/LetterDetails.interface\";\r\n\r\nimport FileData from \"../common/FileData.interface\";\r\nimport CryptService from \"../services/CryptService\";\r\nimport CacheService from \"../services/CacheService\";\r\n\r\nimport FileUpload from \"../components/FileUpload/FileUpload\";\r\nimport FileView from \"../components/FileView/FileView\";\r\nimport Confirm from \"../components/Confirm/Confirm\";\r\nimport FileHistory from \"../components/FileHistory\";\r\nimport Profile from \"../components/Profile\";\r\n\r\ninterface RecipientLetterDisplayProps {\r\n  user: UserAuth;\r\n  letter: LetterDetails;\r\n  numRecipients: Number;\r\n}\r\ninterface RecipientLetterDisplayState {\r\n  history: LetterHistory[];\r\n  loadingHistory: boolean;\r\n  profileIsOpen: boolean;\r\n  historyIsOpen: boolean;\r\n  uploadIsOpen: boolean;\r\n  viewIsOpen: boolean;\r\n  confirmIsOpen: boolean;\r\n  collapseIsOpen: boolean;\r\n  selectedUserProfile?: UserProfile;\r\n  uploadedFile?: File;\r\n  fileData?: FileData;\r\n}\r\n\r\nclass RecipientLetterDisplay extends React.Component<\r\n  RecipientLetterDisplayProps,\r\n  RecipientLetterDisplayState\r\n> {\r\n  private uploadModal = React.createRef<FileUpload>();\r\n  private viewModal = React.createRef<FileView>();\r\n  private userProfiles: Map<string, UserProfile>;\r\n  private cryptService: CryptService;\r\n  private cacheService: CacheService<string, string>;\r\n\r\n  constructor(props: RecipientLetterDisplayProps) {\r\n    super(props);\r\n    this.state = {\r\n      history: [],\r\n      loadingHistory: false,\r\n      profileIsOpen: false,\r\n      historyIsOpen: false,\r\n      uploadIsOpen: false,\r\n      viewIsOpen: false,\r\n      confirmIsOpen: false,\r\n      collapseIsOpen: false,\r\n    };\r\n\r\n    this.userProfiles = new Map<string, UserProfile>();\r\n    this.cryptService = new CryptService();\r\n    this.cacheService = new CacheService(1);\r\n  }\r\n\r\n  async openViewModal() {\r\n    console.log(\"opening view modal\");\r\n    this.setState({ viewIsOpen: true });\r\n    const letterId = this.props.letter.letterId;\r\n    const fetchUrl = `/api/v1/letters/${letterId}/recipientContents`;\r\n    console.log(\"letterId\", letterId);\r\n    let encryptedLetter = this.cacheService.get(letterId);\r\n    if (encryptedLetter === null) {\r\n      this.retrieveLetterContentsFromServer(fetchUrl);\r\n    } else {\r\n      try {\r\n        let fileData = await this.cryptService.decrypt(\r\n          encryptedLetter,\r\n          this.props.user.publicAddress\r\n        );\r\n\r\n        console.log(fileData.letterType);\r\n        this.setState({\r\n          fileData: fileData,\r\n        });\r\n      } catch (error) {\r\n        console.log(\"error with decryption\");\r\n      }\r\n    }\r\n  }\r\n\r\n  closeViewModal() {\r\n    console.log(\"closing view modal\");\r\n    this.setState({ viewIsOpen: false, fileData: undefined });\r\n  }\r\n\r\n  retrieveLetterContentsFromServer(fetchUrl: string) {\r\n    console.log(\"retrieving from server\");\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n    const letterId = this.props.letter.letterId;\r\n    // get letter from server\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`, init)\r\n      .then((response) => {\r\n        console.log(\"logging response\");\r\n        console.log(response);\r\n        return response.json();\r\n      })\r\n      .then((body: ResponseBody) => {\r\n        const e: {\r\n          letterRecipientContents: {\r\n            letterContents: string;\r\n            letterSignature: string;\r\n          };\r\n        } = body.data;\r\n\r\n        console.log(e);\r\n        // decrypt letter\r\n        this.cryptService\r\n          .decrypt(e.letterRecipientContents?.letterContents, this.props.user.publicAddress)\r\n          .then((fileData) => {\r\n            if (fileData) {\r\n              this.setState({\r\n                viewIsOpen: true,\r\n                fileData: fileData,\r\n              });\r\n            }\r\n          });\r\n      })\r\n      .catch((e: Error) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  async openMessageModal(file: File) {\r\n    this.setState({ uploadedFile: file });\r\n    this.openConfirmModal();\r\n  }\r\n\r\n  async closeMessageModal() {}\r\n\r\n  async closeProfileModal() {\r\n    console.log(\"closing profile modal\");\r\n    this.setState({ profileIsOpen: false, selectedUserProfile: undefined });\r\n  }\r\n\r\n  async openProfileModal(publicAddress: string) {\r\n    console.log(\"opening profile modal\");\r\n    const userProfile = this.userProfiles.get(publicAddress);\r\n    console.log(userProfile);\r\n    if (userProfile === undefined) {\r\n      this.setState({ profileIsOpen: true });\r\n      const fetchUrl = `/api/v1/users/${publicAddress}/profile`;\r\n      this.retrieveProfileFromServer(fetchUrl);\r\n    } else {\r\n      this.setState({ selectedUserProfile: userProfile, profileIsOpen: true });\r\n    }\r\n  }\r\n\r\n  async retrieveProfileFromServer(fetchUrl: string) {\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n\r\n    try {\r\n      let response = await fetch(\r\n        `${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`,\r\n        init\r\n      );\r\n\r\n      if (response.status === 400) {\r\n        console.log(response.status);\r\n        // this.setState({\r\n        //   profileIsOpen: false,\r\n        // });\r\n      } else {\r\n        let body = await response.json();\r\n        const data: UserProfile[] = body.data;\r\n        console.log(response);\r\n        console.log(data);\r\n        if (data && data.length !== 0) {\r\n          this.userProfiles.set(data[0].publicAddress, data[0]);\r\n          this.setState({\r\n            selectedUserProfile: data[0],\r\n          });\r\n        } else {\r\n          // this.setState({\r\n          //   profileIsOpen: false,\r\n          // });\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      // this.setState({\r\n      //   profileIsOpen: false,\r\n      // });\r\n    }\r\n  }\r\n\r\n  async closeHistoryModal() {\r\n    console.log(\"closing history modal\");\r\n    this.setState({\r\n      historyIsOpen: false,\r\n      loadingHistory: false,\r\n      collapseIsOpen: this.state.viewIsOpen,\r\n    });\r\n  }\r\n\r\n  async openHistoryModal() {\r\n    console.log(\"opening history modal\");\r\n\r\n    if (this.state.history.length === 0) {\r\n      this.setState({\r\n        loadingHistory: true,\r\n        historyIsOpen: true,\r\n        collapseIsOpen: true,\r\n      });\r\n      const letterId = this.props.letter.letterId;\r\n      const fetchUrl = `/api/v1/letters/${letterId}/history`;\r\n      this.retrieveHistoryFromServer(fetchUrl);\r\n    } else {\r\n      this.setState({\r\n        historyIsOpen: true,\r\n        collapseIsOpen: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  async retrieveHistoryFromServer(fetchUrl: string) {\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`,\r\n        init\r\n      );\r\n      if (response.status === 400) {\r\n        console.log(response.status);\r\n        this.setState({\r\n          // historyIsOpen: false,\r\n          loadingHistory: false,\r\n          // collapseIsOpen: this.state.selectIsOpen,\r\n        });\r\n      } else {\r\n        const body = await response.json();\r\n\r\n        const data: LetterHistory[] = body.data;\r\n        console.log(response);\r\n        console.log(data);\r\n        if (data) {\r\n          this.setState({\r\n            history: data,\r\n            loadingHistory: false,\r\n          });\r\n        } else {\r\n          console.log(\"fetch for letterHistory failed\");\r\n          this.setState({\r\n            // historyIsOpen: false,\r\n            loadingHistory: false,\r\n            // collapseIsOpen: this.state.selectIsOpen,\r\n          });\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      this.setState({\r\n        // historyIsOpen: false,\r\n        loadingHistory: false,\r\n        // collapseIsOpen: this.state.selectIsOpen,\r\n      });\r\n    }\r\n  }\r\n\r\n  async openConfirmModal() {\r\n    console.log(\"open confirm modal\");\r\n    this.setState({ confirmIsOpen: true });\r\n  }\r\n\r\n  async closeConfirmModal() {\r\n    console.log(\"close confirm modal\");\r\n    this.setState({ confirmIsOpen: false });\r\n  }\r\n\r\n  render() {\r\n    const { user, letter, numRecipients } = this.props;\r\n    const {\r\n      history,\r\n      loadingHistory,\r\n      profileIsOpen,\r\n      historyIsOpen,\r\n      uploadIsOpen,\r\n      viewIsOpen,\r\n      confirmIsOpen,\r\n      collapseIsOpen,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Card className=\"full-width opacity-0\">\r\n          <Card.Header\r\n            className=\"d-flex justify-content-between button-blur letter-entry\"\r\n            onClick={() => this.setState({ collapseIsOpen: !collapseIsOpen })}\r\n          >\r\n            <div className=\"flex-fill\">\r\n              <span className=\"mr-3\">From:</span>\r\n              <Button\r\n                variant=\"outline-light\"\r\n                onClick={(e: any) => {\r\n                  e.stopPropagation();\r\n                  this.openProfileModal(letter.letterWriter.publicAddress);\r\n                }}\r\n              >\r\n                {letter.letterWriter?.name}\r\n              </Button>\r\n            </div>\r\n            {/* <Button\r\n              // TODO: add Tooltip\r\n              variant=\"outline-light\"\r\n              className=\"flex-shrink-1 float-right ml-3\"\r\n              onClick={(e: any) => {\r\n                e.stopPropagation();\r\n                if (uploadIsOpen) {\r\n                  this.closeUploadModal();\r\n                } else {\r\n                  this.openUploadModal();\r\n                }\r\n              }}\r\n            >\r\n              Upload\r\n            </Button> */}\r\n            {/* <div className=\"flex-shrink-1 float-right\">\r\n              <span className=\"mr-3\">For:</span>\r\n              <Button\r\n                variant=\"outline-light\"\r\n                onClick={(e: any) => {\r\n                  e.stopPropagation();\r\n                  this.openProfileModal(letter.letterRequestor.publicAddress);\r\n                }}\r\n              >\r\n                {letter.letterRequestor?.name}\r\n              </Button>\r\n            </div> */}\r\n            <Button\r\n              // TODO: add Tooltip\r\n              variant=\"outline-light\"\r\n              className=\"flex-shrink-1 float-right ml-3\"\r\n              onClick={(e: any) => {\r\n                e.stopPropagation();\r\n                if (viewIsOpen) {\r\n                  this.closeViewModal();\r\n                } else {\r\n                  this.openViewModal();\r\n                }\r\n              }}\r\n            >\r\n              View\r\n            </Button>\r\n            {/* <Button\r\n              disabled={numRecipients === 0}\r\n              variant=\"outline-light\"\r\n              className=\"flex-shrink-1 float-right ml-3\"\r\n              onClick={(e: any) => {\r\n                e.stopPropagation();\r\n                if (historyIsOpen) {\r\n                  this.closeHistoryModal();\r\n                } else {\r\n                  this.openHistoryModal();\r\n                }\r\n              }}\r\n            >\r\n              History\r\n            </Button> */}\r\n            <Button\r\n              variant=\"outline-light\"\r\n              className=\"flex-shrink-1 float-right ml-3\"\r\n              onClick={(e: any) => {\r\n                e.stopPropagation();\r\n                this.setState({ collapseIsOpen: !collapseIsOpen });\r\n              }}\r\n              aria-controls=\"example-collapse-text\"\r\n              aria-expanded={collapseIsOpen}\r\n            >\r\n              *\r\n            </Button>\r\n          </Card.Header>\r\n        </Card>\r\n        <Collapse in={collapseIsOpen}>\r\n          <div className=\"collapse-body-select\">\r\n            {/* {uploadIsOpen && (\r\n              <div>\r\n                <FileUpload\r\n                  ref={this.uploadModal}\r\n                  user={this.props.user}\r\n                  restrictPdf={true}\r\n                  onUpload={this.openMessageModal.bind(this)}\r\n                  onClose={this.closeUploadModal.bind(this)}\r\n                ></FileUpload>\r\n              </div>\r\n            )}\r\n            {loadingHistory && (\r\n              <div className=\"d-flex justify-content-center\">\r\n                <Spinner\r\n                  className=\"mb-3\"\r\n                  animation=\"border\"\r\n                  variant=\"secondary\"\r\n                />\r\n              </div>\r\n            )}\r\n            {!loadingHistory && historyIsOpen && (\r\n              <div className=\"\">\r\n                <FileHistory\r\n                  user={user}\r\n                  history={history}\r\n                  onClose={this.closeHistoryModal.bind(this)}\r\n                ></FileHistory>\r\n              </div>\r\n            )}\r\n            {(loadingHistory || historyIsOpen) && <div className=\"mb-5\"></div>}*/}\r\n            {!uploadIsOpen && !historyIsOpen && (\r\n              <div className=\"display-text d-flex text-white-50\">\r\n                <div className=\"flex-fill\">Letter Information</div>\r\n                {/* <div className=\"flex-fill\">\r\n                  Requested: {letter.requestedAt?.toString()}\r\n                </div>\r\n                {letter.uploadedAt && (\r\n                  <div className=\" flex-shrink-1 float-right\">\r\n                    Uploaded: {letter.uploadedAt?.toString()}\r\n                  </div>\r\n                )}\r\n                {!letter.uploadedAt && (\r\n                  <div className=\" flex-shrink-1 float-right\">Not Uploaded</div>\r\n                )} */}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Collapse>\r\n\r\n        <Modal\r\n          id=\"profile-modal\"\r\n          show={profileIsOpen}\r\n          onHide={this.closeProfileModal.bind(this)}\r\n          // backdrop=\"static\"\r\n          animation={false}\r\n          className=\"modal\"\r\n          scrollable={false}\r\n          // size=\"sm\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{this.state.selectedUserProfile?.name}</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Profile\r\n              user={this.state.selectedUserProfile}\r\n              onClose={this.closeProfileModal.bind(this)}\r\n            />\r\n          </Modal.Body>\r\n        </Modal>\r\n\r\n        {/* <Modal\r\n          id=\"confirm-modal\"\r\n          show={confirmIsOpen}\r\n          onHide={this.closeConfirmModal.bind(this)}\r\n          // backdrop=\"static\"\r\n          animation={false}\r\n          className=\"modal\"\r\n          scrollable={false}\r\n          // size=\"sm\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Please Confirm</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Confirm\r\n              user={this.props.user}\r\n              onConfirm={this.closeConfirmModal.bind(this)}\r\n              onClose={this.closeConfirmModal.bind(this)}\r\n            />\r\n          </Modal.Body>\r\n        </Modal> */}\r\n\r\n        <Modal\r\n          id=\"view-modal\"\r\n          show={viewIsOpen}\r\n          onHide={this.closeViewModal.bind(this)}\r\n          backdrop=\"static\"\r\n          animation={false}\r\n          className=\"modal view-modal\"\r\n          scrollable={false}\r\n          size=\"xl\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>For: {letter.letterRequestor?.name}</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <FileView\r\n              fileData={this.state.fileData}\r\n              ref={this.viewModal}\r\n              user={this.props.user}\r\n              onClose={this.closeViewModal.bind(this)}\r\n            ></FileView>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecipientLetterDisplay;\r\n","import React from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Spinner,\r\n  Modal,\r\n  Collapse,\r\n  Col,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport UserProfile from \"../common/UserProfile.interface\";\r\nimport UserAuth from \"../common/UserAuth.interface\";\r\nimport RequestBody from \"../common/RequestBody.interface\";\r\nimport ResponseBody from \"../common/ResponseBody.interface\";\r\nimport \"./RecipientUserDisplay.css\";\r\n\r\nimport FileView from \"../components/FileView/FileView\";\r\nimport Profile from \"../components/Profile\";\r\nimport User from \"../common/User.interface\";\r\n\r\ninterface RecipientUserDisplayProps {\r\n  user: UserAuth;\r\n  requestor: User;\r\n  selected: boolean;\r\n  onView: (user: User) => void;\r\n}\r\ninterface RecipientUserDisplayState {\r\n  profileIsOpen: boolean;\r\n  viewIsOpen: boolean;\r\n  collapseIsOpen: boolean;\r\n  selectedUserProfile?: UserProfile;\r\n}\r\n\r\nclass RecipientUserDisplay extends React.Component<\r\n  RecipientUserDisplayProps,\r\n  RecipientUserDisplayState\r\n> {\r\n  // private viewModal = React.createRef<FileView>();\r\n  private userProfiles: Map<string, UserProfile>;\r\n\r\n  constructor(props: RecipientUserDisplayProps) {\r\n    super(props);\r\n    this.state = {\r\n      profileIsOpen: false,\r\n      viewIsOpen: false,\r\n      collapseIsOpen: false,\r\n    };\r\n\r\n    this.userProfiles = new Map<string, UserProfile>();\r\n  }\r\n\r\n  async openMessageModal() {}\r\n\r\n  async closeMessageModal() {}\r\n\r\n  async closeProfileModal() {\r\n    console.log(\"closing profile modal\");\r\n    this.setState({ profileIsOpen: false, selectedUserProfile: undefined });\r\n  }\r\n\r\n  async openProfileModal(publicAddress: string) {\r\n    console.log(\"opening profile modal\");\r\n    const userProfile = this.userProfiles.get(publicAddress);\r\n    console.log(userProfile);\r\n    if (userProfile === undefined) {\r\n      this.setState({ profileIsOpen: true });\r\n      const fetchUrl = `/api/v1/users/${publicAddress}/profile`;\r\n      this.retrieveProfileFromServer(fetchUrl);\r\n    } else {\r\n      this.setState({ selectedUserProfile: userProfile, profileIsOpen: true });\r\n    }\r\n  }\r\n\r\n  async retrieveProfileFromServer(fetchUrl: string) {\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n\r\n    try {\r\n      let response = await fetch(\r\n        `${process.env.REACT_APP_BACKEND_URL}${fetchUrl}`,\r\n        init\r\n      );\r\n\r\n      if (response.status === 400) {\r\n        console.log(response.status);\r\n        // this.setState({\r\n        //   profileIsOpen: false,\r\n        // });\r\n      } else {\r\n        let body = await response.json();\r\n        const data: UserProfile[] = body.data;\r\n        console.log(response);\r\n        console.log(data);\r\n        if (data && data.length !== 0) {\r\n          this.userProfiles.set(data[0].publicAddress, data[0]);\r\n          this.setState({\r\n            selectedUserProfile: data[0],\r\n          });\r\n        } else {\r\n          // this.setState({\r\n          //   profileIsOpen: false,\r\n          // });\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      // this.setState({\r\n      //   profileIsOpen: false,\r\n      // });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { user, requestor, selected } = this.props;\r\n    const { profileIsOpen, viewIsOpen, collapseIsOpen } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Card className=\"full-width opacity-0\">\r\n          <Card.Header\r\n            className=\"d-flex justify-content-between button-blur letter-entry\"\r\n            onClick={() => this.setState({ collapseIsOpen: !collapseIsOpen })}\r\n          >\r\n            <div className=\"flex-fill\">\r\n              <span className=\"mr-3\">For: </span>\r\n              <Button\r\n                variant=\"outline-light\"\r\n                onClick={(e: any) => {\r\n                  e.stopPropagation();\r\n                  this.openProfileModal(requestor?.publicAddress);\r\n                }}\r\n              >\r\n                {requestor?.name}\r\n              </Button>\r\n            </div>\r\n            <Button\r\n              // TODO: add Tooltip\r\n              variant=\"outline-light\"\r\n              className=\"flex-shrink-1 float-right ml-3\"\r\n              onClick={(e: any) => {\r\n                e.stopPropagation();\r\n                this.props.onView(requestor);\r\n              }}\r\n            >\r\n              {/* {selected ? \"Close\" : \"Letters\"} */}\r\n              Letters\r\n            </Button>\r\n            <Button\r\n              variant=\"outline-light\"\r\n              className=\"flex-shrink-1 float-right ml-3\"\r\n              onClick={(e: any) => {\r\n                e.stopPropagation();\r\n                this.setState({ collapseIsOpen: !collapseIsOpen });\r\n              }}\r\n              aria-controls=\"example-collapse-text\"\r\n              aria-expanded={collapseIsOpen}\r\n            >\r\n              *\r\n            </Button>\r\n          </Card.Header>\r\n        </Card>\r\n        <Collapse in={collapseIsOpen}>\r\n          <div className=\"collapse-body-select\">\r\n            <div className=\"display-text d-flex text-white-50\">\r\n              <div className=\"flex-fill\">Applicant Information</div>\r\n            </div>\r\n          </div>\r\n        </Collapse>\r\n\r\n        <Modal\r\n          id=\"profile-modal\"\r\n          show={profileIsOpen}\r\n          onHide={this.closeProfileModal.bind(this)}\r\n          // backdrop=\"static\"\r\n          animation={false}\r\n          className=\"modal\"\r\n          scrollable={false}\r\n          // size=\"sm\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{this.state.selectedUserProfile?.name}</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Profile\r\n              user={this.state.selectedUserProfile}\r\n              onClose={this.closeProfileModal.bind(this)}\r\n            />\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecipientUserDisplay;\r\n","import React from \"react\";\r\nimport { Spinner, Row, Col } from \"react-bootstrap\";\r\n\r\nimport UserAuth from \"../common/UserAuth.interface\";\r\nimport User from \"../common/User.interface\";\r\nimport LetterDetails from \"../common/LetterDetails.interface\";\r\nimport RequestBody from \"../common/RequestBody.interface\";\r\nimport ResponseBody from \"../common/ResponseBody.interface\";\r\nimport CacheService from \"../services/CacheService\";\r\n\r\nimport RecipientLetterDisplay from \"../RecipientLetterDisplay/RecipientLetterDisplay\";\r\nimport RecipientUserDisplay from \"../RecipientUserDisplay/RecipientUserDisplay\";\r\n\r\nimport \"./Recipient.css\";\r\nimport LetterHistory from \"../common/LetterHistory.interface\";\r\n\r\ninterface RecipientProps {\r\n  user: UserAuth;\r\n}\r\n\r\ninterface RecipientState {\r\n  requestors: User[];\r\n  letters: LetterHistory[];\r\n  numRecipients: Number[];\r\n  loadingRequestors: boolean;\r\n  loadingLetters: boolean;\r\n  dualMode: boolean;\r\n  selectedUser?: User;\r\n}\r\n\r\nclass Recipient extends React.Component<RecipientProps, RecipientState> {\r\n  private cacheService: CacheService<string, LetterHistory[]>;\r\n  constructor(props: RecipientProps) {\r\n    super(props);\r\n    this.state = {\r\n      requestors: [],\r\n      letters: [],\r\n      numRecipients: [],\r\n      loadingRequestors: true,\r\n      loadingLetters: false,\r\n      dualMode: false,\r\n    };\r\n    this.cacheService = new CacheService(1);\r\n  }\r\n\r\n  componentWillMount() {\r\n    const requestorFetchUrl = `/api/v1/letters/receivedRequestors`;\r\n    const init: RequestInit = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        auth: {\r\n          jwtToken: this.props.user.jwtToken,\r\n          publicAddress: this.props.user.publicAddress,\r\n        },\r\n        data: {},\r\n      }),\r\n    };\r\n\r\n    // get letters from server\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL}${requestorFetchUrl}`, init)\r\n      .then((response) => {\r\n        response\r\n          .json()\r\n          .then((body: ResponseBody) => {\r\n            const data: User[] = body.data;\r\n            console.log(data);\r\n            console.log(response);\r\n            if (data.length !== 0) {\r\n              this.setState({\r\n                requestors: data,\r\n                loadingRequestors: false,\r\n              });\r\n            } else {\r\n              this.setState({ loadingRequestors: false });\r\n            }\r\n          })\r\n          .catch((e: Error) => {\r\n            console.log(e);\r\n          });\r\n      })\r\n      .catch((e: Error) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  async toggleLetterModal(user: User) {\r\n    const selectedUser = this.state.selectedUser;\r\n    if (selectedUser && selectedUser.publicAddress === user.publicAddress) {\r\n      this.setState({ selectedUser: undefined, dualMode: false });\r\n    } else {\r\n      this.setState({\r\n        selectedUser: user,\r\n        dualMode: true,\r\n        loadingLetters: true,\r\n      });\r\n      this.loadLettersList(user.publicAddress);\r\n    }\r\n  }\r\n\r\n  async loadLettersList(publicAddress: string) {\r\n    const letterFetchUrl = `/api/v1/letters/received/${publicAddress}`;\r\n    const lettersList = await this.cacheService.get(publicAddress);\r\n\r\n    if (!lettersList) {\r\n      const init: RequestInit = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          auth: {\r\n            jwtToken: this.props.user.jwtToken,\r\n            publicAddress: this.props.user.publicAddress,\r\n          },\r\n          data: {},\r\n        }),\r\n      };\r\n\r\n      // get letters from server\r\n      fetch(`${process.env.REACT_APP_BACKEND_URL}${letterFetchUrl}`, init)\r\n        .then((response) => {\r\n          response\r\n            .json()\r\n            .then((body: ResponseBody) => {\r\n              const data: LetterHistory[] = body.data;\r\n\r\n              console.log(response);\r\n              if (data && data.length > 0) {\r\n                this.cacheService.put(publicAddress, data);\r\n                this.setState({\r\n                  letters: data,\r\n                  loadingLetters: false,\r\n                  dualMode: true,\r\n                });\r\n              } else {\r\n                this.setState({\r\n                  loadingLetters: false,\r\n                })\r\n              }\r\n            })\r\n            .catch((e: Error) => {\r\n              console.log(e);\r\n            });\r\n        })\r\n        .catch((e: Error) => {\r\n          console.log(e);\r\n        });\r\n    } else {\r\n      this.setState({\r\n        letters: lettersList,\r\n        loadingLetters: false,\r\n        dualMode: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n    const {\r\n      requestors,\r\n      letters,\r\n      numRecipients,\r\n      loadingRequestors,\r\n      loadingLetters,\r\n      dualMode,\r\n      selectedUser,\r\n    } = this.state;\r\n\r\n    const requestorList = requestors.map((r, k) => (\r\n      <RecipientUserDisplay\r\n        user={user}\r\n        requestor={r}\r\n        selected={r.publicAddress === selectedUser?.publicAddress}\r\n        onView={this.toggleLetterModal.bind(this)}\r\n      />\r\n    ));\r\n\r\n    const lettersList = letters.map((l, k) => (\r\n      <RecipientLetterDisplay\r\n        user={user}\r\n        letter={l}\r\n        numRecipients={numRecipients[k]}\r\n      />\r\n    ));\r\n\r\n    const recipientRequestors = (\r\n      <div className=\"recipient-letters\">\r\n        <div className=\"recipient-header mb-3\">\r\n          <h3> Users </h3>\r\n        </div>\r\n\r\n        <div className=\"recipient-letterdisplay\">\r\n          <div>{requestorList}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    const recipientLetters = (\r\n      <div className=\"recipient-letters\">\r\n        <div className=\"recipient-header mb-3\">\r\n          <h3> {selectedUser?.name} </h3>\r\n        </div>\r\n\r\n        <div className=\"recipient-letterdisplay\">\r\n          <div>{lettersList}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    const recipientFooter = (\r\n      <div className=\"recipient-footer\">\r\n        <span> Product of Team Gas</span>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <>\r\n        {!loadingRequestors && requestors.length === 0 && (\r\n          <div className=\"recipient-header absolute-center\">\r\n            <h3> No Letters Received </h3>\r\n          </div>\r\n        )}\r\n\r\n        {!loadingRequestors && !dualMode && requestors.length !== 0 && (\r\n          <Col className=\"recipient\">\r\n            <Row>{recipientRequestors}</Row>\r\n            {/* <Row>{requestorFooter}</Row> */}\r\n          </Col>\r\n        )}\r\n\r\n        {!loadingRequestors && dualMode && requestors.length !== 0 && (\r\n          <Col>\r\n            <Row className=\"recipient-dual\">\r\n              <Col className=\"ml-5 mr-5\">\r\n                <Row>{recipientRequestors}</Row>\r\n              </Col>\r\n              <Col className=\"mr-5 ml-5\">\r\n                {!loadingLetters && <Row>{recipientLetters}</Row>}\r\n                {loadingLetters && (\r\n                  <Row>\r\n                    <div className=\"d-flex justify-content-center absolute-center\">\r\n                      <Spinner\r\n                        className=\"\"\r\n                        animation=\"border\"\r\n                        variant=\"secondary\"\r\n                      />\r\n                    </div>\r\n                  </Row>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n            {/* <Row>{requestorFooter}</Row> */}\r\n          </Col>\r\n        )}\r\n\r\n        {loadingRequestors && (\r\n          <div className=\"d-flex justify-content-center absolute-center\">\r\n            <Spinner className=\"\" animation=\"border\" variant=\"secondary\" />\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Recipient;\r\n","import React from \"react\";\r\nimport { Button, InputGroup, FormControl, Form } from \"react-bootstrap\";\r\nimport UserAuth from \"../common/UserAuth.interface\";\r\nimport \"./Login.css\";\r\nimport CryptService from \"../services/CryptService\";\r\n\r\nimport RequestBody from \"../common/RequestBody.interface\";\r\nimport ResponseBody from \"../common/ResponseBody.interface\";\r\n\r\nimport { web3 } from \"../App\";\r\n\r\ninterface LoginProps {\r\n  user: UserAuth;\r\n  callback: (u: UserAuth) => void;\r\n}\r\ninterface LoginState {\r\n  inputEmail: string;\r\n  inputName: string;\r\n  // displayMessage: string;\r\n  loginMode: boolean;\r\n}\r\n\r\nclass Login extends React.Component<LoginProps, LoginState> {\r\n  private cryptService: CryptService;\r\n\r\n  constructor(props: LoginProps) {\r\n    super(props);\r\n    this.state = {\r\n      inputEmail: \"\",\r\n      inputName: \"\",\r\n      // displayMessage: \"\",\r\n      loginMode: true,\r\n    };\r\n    this.cryptService = new CryptService();\r\n\r\n    this.handleInputNameChange = this.handleInputNameChange.bind(this);\r\n    this.handleInputEmailChange = this.handleInputEmailChange.bind(this);\r\n\r\n    this.onLoginClick = this.onLoginClick.bind(this);\r\n    this.signMessage = this.signMessage.bind(this);\r\n    this.authenticate = this.authenticate.bind(this);\r\n  }\r\n\r\n  onSignupClick(/*event: React.MouseEvent<HTMLInputElement, MouseEvent>*/) {\r\n    const publicAddress = this.props.user.publicAddress;\r\n\r\n    // delete after implement router in which login will not be displayed unless connected to metamask\r\n    if (publicAddress === \"\") {\r\n      // comment out conditional for testing signup\r\n      console.log(\"Invalid public address. Connect to Metamask.\");\r\n      // this.setState({ displayMessage: \"Connect to Metamask.\" });\r\n      alert(\"Connect to Metamask\");\r\n      return;\r\n    }\r\n\r\n    if (this.state.inputName.length <= 1) {\r\n      console.log(this.state.inputName);\r\n      console.log(\"Enter a name.\");\r\n      alert(\"Please Enter Your Name\");\r\n      // this.setState({ displayMessage: \"Enter Your Name.\" });\r\n      return;\r\n    }\r\n\r\n    this.signup({\r\n      publicAddress: publicAddress,\r\n      inputName: this.state.inputName,\r\n    })\r\n      // metamask popup to sign\r\n      .then(this.signMessage)\r\n      // send signature to backend\r\n      .then(this.authenticate)\r\n      .catch((err: Error) => {\r\n        console.log(err);\r\n        // this.setState({ displayMessage: \"Error. Please Try Again Later.\" });\r\n        alert(\"Error. Please Try Again Later.\");\r\n      });\r\n\r\n    return;\r\n  }\r\n\r\n  onLoginClick(/*event: React.MouseEvent<HTMLInputElement, MouseEvent>*/) {\r\n    console.log(\"login clicked.\");\r\n    // event.preventDefault();\r\n\r\n    const publicAddress = this.props.user.publicAddress; // comment out for testing signup\r\n    // const publicAddress = \"newAddress\"; // uncomment for testing signup\r\n\r\n    // delete after implement router in which login will not be displayed unless connected to metamask\r\n    if (publicAddress === \"\") {\r\n      // comment out conditional for testing signup\r\n      console.log(\"Invalid public address. Connect to Metamask.\");\r\n      alert(\"Please Connect to Metamask\");\r\n      // this.setState({ displayMessage: \"Please Connect to Metamask.\" });\r\n      return;\r\n    }\r\n\r\n    console.log(\"public address:\", publicAddress);\r\n\r\n    const init: RequestInit = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    fetch(\r\n      `${process.env.REACT_APP_BACKEND_URL}/auth/users/${publicAddress}`,\r\n      init\r\n    )\r\n      .then((response) => {\r\n        console.log(\"logging nonce fetch response\");\r\n        console.log(response);\r\n        return response.json();\r\n      })\r\n      .then((users) => {\r\n        console.log(users);\r\n\r\n        if (users[0] == null) {\r\n          console.log(\"need to signup.\");\r\n          // this.setState({\r\n          //   displayMessage: \"No Existing Account. Sign Up Instead.\",\r\n          // });\r\n          alert(\"No Existing Account. Sign Up Instead.\");\r\n          return Promise.reject(\"no existing account\");\r\n        }\r\n        return users[0];\r\n      })\r\n      // metamask popup to sign\r\n      .then(this.signMessage)\r\n      // send signature to backend\r\n      .then(this.authenticate)\r\n      //.then(this.doStuffWithToken) // after receiving the token\r\n      .catch((err: Error) => {\r\n        console.log(err);\r\n        // this.setState({ displayMessage: \"Login Failed. Try Again Later.\" });\r\n        alert(\"Login Failed.\");\r\n      });\r\n\r\n    return;\r\n  }\r\n\r\n  async signup({\r\n    publicAddress,\r\n    inputName,\r\n  }: {\r\n    publicAddress: string;\r\n    inputName: string;\r\n  }) {\r\n    console.log(\"publicAddress:\", publicAddress, \"name:\", inputName);\r\n    // this.setState({ displayMessage: \"Signing You Up . . .\" });\r\n\r\n    const publicKey = await this.cryptService.getPublicKey(publicAddress);\r\n    if (!publicKey) Promise.reject();\r\n\r\n    return await fetch(\r\n      `${process.env.REACT_APP_BACKEND_URL}/auth/users/create`,\r\n      {\r\n        body: JSON.stringify({\r\n          publicAddress: publicAddress,\r\n          name: inputName,\r\n          email: \"placeholder@lehigh.edu\",\r\n          publicKey: publicKey,\r\n        }),\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        method: \"POST\",\r\n      }\r\n    )\r\n      .then((response) => {\r\n        console.log(\"logging signup response\");\r\n        console.log(response);\r\n        return response.json();\r\n      })\r\n      .then((users) => {\r\n        console.log(users);\r\n        console.log(\"signup finish\");\r\n        return users[0];\r\n      });\r\n    // .then((response) => response.json()) // needs to handle response in which user has existing account\r\n    // .catch((err: Error) => console.log(err));\r\n  }\r\n\r\n  async signMessage({\r\n    publicAddress,\r\n    nonce,\r\n  }: {\r\n    publicAddress: string;\r\n    nonce: string;\r\n  }): Promise<{ publicAddress: string; signature: string }> {\r\n    // this.setState({displayMessage: \"Sign the Message to Confirm Public Address.\"})\r\n    console.log(\"signing the nonce\");\r\n    console.log(nonce);\r\n    // const prefix = '\\x19Ethereum Signed Message:\\n' + String.fromCharCode(nonce.length);\r\n    // const message = web3.utils.keccak256(prefix + nonce);\r\n    const message = nonce;\r\n    // const message = web3.utils.keccak256(nonce);\r\n    console.log(message);\r\n    console.log(web3.utils.utf8ToHex(`${message}`));\r\n    console.log(publicAddress);\r\n    return new Promise((resolve, reject) => {\r\n      // web3.eth.sign doesn't seem to work (never finishes)\r\n      web3.eth.personal\r\n        .sign(\r\n          message,\r\n          // web3.utils.utf8ToHex(`${message}`),\r\n          publicAddress,\r\n          \"\",\r\n          (err, signature) => {\r\n            //console.log(web3.eth.accounts.recover(web3.utils.keccak256(nonce), signature));\r\n            //web3.eth.personal.ecRecover(message, signature).then((v) => console.log(v));\r\n            if (err) {\r\n              console.log(\"error when signing\");\r\n              return reject(err);\r\n            }\r\n            console.log(\"message signed\");\r\n            return resolve({ publicAddress, signature });\r\n          }\r\n        )\r\n        .then(console.log)\r\n        .catch((err: Error) => {\r\n          console.log();\r\n        });\r\n    });\r\n  }\r\n\r\n  async authenticate({\r\n    publicAddress,\r\n    signature,\r\n  }: {\r\n    publicAddress: string;\r\n    signature: string;\r\n  }) {\r\n    console.log(\"authenticating\");\r\n    // this.setState({\r\n    //   displayMessage: this.state.loginMode\r\n    //     ? \"Logging You In . . .\"\r\n    //     : \"Signing You Up . . .\",\r\n    // });\r\n    return fetch(`${process.env.REACT_APP_BACKEND_URL}/auth`, {\r\n      body: JSON.stringify({ publicAddress, signature }),\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"POST\",\r\n    })\r\n      .then((response) => {\r\n        console.log(\"received response\");\r\n        console.log(response);\r\n\r\n        response\r\n          .json()\r\n          .then((body: ResponseBody) => {\r\n            console.log(body);\r\n            const data = body.data;\r\n            const j = data.jwtToken;\r\n            console.log(\"jwtToken\", j);\r\n            let jwtToken = j ? j : undefined;\r\n            if (jwtToken) {\r\n              console.log(jwtToken);\r\n              this.props.callback({\r\n                publicAddress: this.props.user.publicAddress,\r\n                name: this.props.user.name,\r\n                jwtToken: jwtToken,\r\n              });\r\n            } else {\r\n              console.log(\"error with jwtToken\");\r\n            }\r\n          })\r\n          .catch((err: Error) => {\r\n            console.log(err);\r\n          });\r\n      })\r\n      .catch((err: Error) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  handleInputNameChange(event: any) {\r\n    console.log(event.target.value);\r\n    this.setState({ inputName: event.target.value });\r\n  }\r\n\r\n  handleInputEmailChange(event: any) {\r\n    console.log(event.target.value);\r\n    this.setState({ inputEmail: event.target.value });\r\n  }\r\n\r\n  toggleMode() {\r\n    this.setState({\r\n      loginMode: !this.state.loginMode,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const loginDisplay = (\r\n      <div className=\"button-blur\">\r\n        <Button\r\n          variant=\"outline-light\"\r\n          className=\"mr-3\"\r\n          onClick={() => {\r\n            this.toggleMode();\r\n          }}\r\n        >\r\n          Sign Up\r\n        </Button>\r\n        <Button\r\n          variant=\"outline-light\"\r\n          onClick={() => {\r\n            this.onLoginClick();\r\n          }}\r\n        >\r\n          Login\r\n        </Button>\r\n      </div>\r\n    );\r\n\r\n    const signupDisplay = (\r\n      <form className=\"justify-content-between\">\r\n        <InputGroup className=\"label-top border-radius\">\r\n          <Form.Group controlId=\"formEmail\">\r\n            {/* <Form.Label>Email address</Form.Label> */}\r\n            <Form.Control\r\n              type=\"email\"\r\n              className=\"w-100 mb-3\"\r\n              placeholder=\"Email\"\r\n              onChange={this.handleInputEmailChange}\r\n            />\r\n            {/* <Form.Text className=\"text-muted\">\r\n              We'll never share your email with anyone else.\r\n            </Form.Text> */}\r\n          </Form.Group>\r\n          {/* <InputGroup.Prepend className=\"m-2 flex-shrink-1\">\r\n              Sign Up\r\n            </InputGroup.Prepend> */}\r\n          <FormControl\r\n            type=\"text\"\r\n            className=\"w-100\"\r\n            placeholder=\"Name\"\r\n            value={this.state.inputName}\r\n            onChange={this.handleInputNameChange}\r\n          />\r\n        </InputGroup>\r\n        <div className=\"d-flex button-blur\">\r\n          <Button\r\n            variant=\"outline-light\"\r\n            className=\"float-right flex-fill\"\r\n            onClick={() => {\r\n              this.onSignupClick();\r\n            }}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Button\r\n            variant=\"outline-light\"\r\n            className=\"float-right flex-fill ml-3\"\r\n            onClick={() => {\r\n              this.toggleMode();\r\n              this.setState({ inputName: \"\" });\r\n            }}\r\n          >\r\n            Back\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    );\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"login-form\">\r\n          <div>{this.state.loginMode ? loginDisplay : signupDisplay}</div>\r\n          {/* <div className=\"alert\"> {this.state.displayMessage}</div> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Login;\r\n","import React from \"react\";\r\nimport UserAuth from \"../common/UserAuth.interface\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport \"./Dashboard.css\";\r\n\r\nconst headers = new Headers();\r\nheaders.set(\"Access-Control-Allow-Origin\", \"*\");\r\nheaders.set(\"Content-Type\", \"application/json\");\r\n\r\ninterface DashboardProps {\r\n  user: UserAuth;\r\n}\r\ninterface DashboardState {}\r\n\r\nclass Dashboard extends React.Component<DashboardProps, DashboardState> {\r\n  constructor(props: DashboardProps) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"dashboard\">\r\n        <div className=\"dashboard-header\">\r\n          <h1> Dashboard </h1>\r\n        </div>\r\n        {/* <hr></hr> */}\r\n        <Card.Header>\r\n          Notifications\r\n        </Card.Header>\r\n        {/* <hr></hr> */}\r\n        <Card.Header>\r\n          Pending\r\n        </Card.Header>\r\n        {/* <hr></hr> */}\r\n        <div className=\"dashboard-footer\">\r\n          <p> Product of Team Gas</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Dashboard;\r\n","import { TutorialToken } from \"./contract-types/TutorialToken\"; // import is correct\r\nimport React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport TutorialTokenContractData from \"./contract-data/TutorialToken.json\";\r\nimport BN from \"bn.js\";\r\n\r\nimport Nav from \"./nav/Nav\";\r\nimport HomePage from \"./home/Home\";\r\nimport WriterPage from \"./writer/Writer\";\r\nimport RequestorPage from \"./requestor/Requestor\";\r\nimport RecipientPage from \"./recipient/Recipient\";\r\nimport LoginPage from \"./login/Login\";\r\nimport DashboardPage from \"./dashboard/Dashboard\";\r\n\r\nimport UserAuth from \"./common/UserAuth.interface\";\r\nimport \"./App.css\";\r\nimport * as ROUTES from \"./routes\";\r\n\r\nimport Web3 from \"web3\";\r\nexport let web3: Web3;\r\nexport let ethereum: any;\r\n\r\nexport const GAS_LIMIT_STANDARD = 6000000;\r\nexport let accounts: string[];\r\nlet web3Provider;\r\n\r\nlet contract: any;\r\nconst ERC20_NETWORK = \"https://services.jade.builders/core-geth/kotti/1.11.2\";\r\nexport async function deployContract<T>(\r\n  contractName: string,\r\n  abi: any,\r\n  code: any,\r\n  ...args: any[]\r\n): Promise<T> {\r\n  const Contract = new web3.eth.Contract(abi);\r\n  const contractResult = await Contract.deploy({ data: code }).send({\r\n    from: accounts[0],\r\n  });\r\n  return contractResult as any;\r\n}\r\n\r\nexport async function deployTutorialToken(): Promise<TutorialToken> {\r\n  console.log(\"Deploying Contract from innner deploy tutorial token method: \");\r\n  var contract = await deployContract<TutorialToken>(\r\n    \"TutorialToken\",\r\n    TutorialTokenContractData.abi,\r\n    TutorialTokenContractData.bytecode,\r\n    0\r\n  );\r\n  console.log(\"Contract from innner deploy tutorial token method: \" + contract);\r\n  return contract;\r\n}\r\n\r\ntype MyProps = {};\r\ntype MyState = {\r\n  numErcBeingTraded: number;\r\n  contract: TutorialToken;\r\n  connectedTo: boolean; // metamask\r\n  loggedIn: boolean; // our app\r\n  user: UserAuth;\r\n};\r\n\r\nclass App extends React.Component<MyProps, MyState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      numErcBeingTraded: 0,\r\n      contract: {} as TutorialToken,\r\n      connectedTo: false,\r\n      loggedIn: false,\r\n      user: { publicAddress: \"\", name: \"\", jwtToken: \"\" },\r\n    };\r\n    this.onConnect = this.onConnect.bind(this);\r\n    this.onLogin = this.onLogin.bind(this);\r\n    //this.handleErcInputChange = this.handleErcInputChange.bind(this);\r\n  }\r\n\r\n  handleErcInputChange(event: any) {\r\n    this.setState({\r\n      numErcBeingTraded: event.target.value,\r\n    });\r\n    console.log(\"Num of ERC wanted to trade: \" + this.state.numErcBeingTraded);\r\n    var rate = this.state.contract.methods.rate().call();\r\n    var numErc = new BN(this.state.numErcBeingTraded);\r\n    //var numTokens = rate.mul(numErc);\r\n    //console.log(\"Num of Tutorial Tokens you can receive: \" + numTokens.toString());\r\n  }\r\n\r\n  async onConnect() {\r\n    const ethereum = (window as any).ethereum;\r\n    await ethereum.enable();\r\n    web3Provider = (window as any).web3.currentProvider;\r\n    // NOTE you might need this\r\n    //await ethereum.send('eth_requestAccounts')\r\n\r\n    web3 = new Web3(web3Provider);\r\n    accounts = await ethereum.request({ method: \"eth_accounts\" });\r\n    // contract = await deployTutorialToken(); // temporary disable\r\n    console.log(accounts);\r\n    // ethereum\r\n    //       .request({\r\n    //         method: \"eth_getEncryptionPublicKey\",\r\n    //         params: [accounts[0]], // you must have access to the specified account\r\n    //       })\r\n    //       .then((publicKey: string) => {\r\n    //         console.log(publicKey);\r\n    //       });\r\n\r\n    this.setState({\r\n      contract,\r\n      connectedTo: true,\r\n      user: { publicAddress: accounts[0], name: \"\", jwtToken: \"\" },\r\n      // loggedIn: true, // testing purposes only\r\n    });\r\n  }\r\n\r\n  onLogin(u: UserAuth) {\r\n    console.log(\"login complete\");\r\n    this.setState({ user: u, loggedIn: true });\r\n  }\r\n\r\n  render() {\r\n    const home = <HomePage user={this.state.user} />;\r\n    const login = (\r\n      <LoginPage callback={this.onLogin.bind(this)} user={this.state.user} />\r\n    );\r\n    const dashboard = <DashboardPage user={this.state.user} />;\r\n    const requestor = <RequestorPage user={this.state.user} />;\r\n    const writer = <WriterPage user={this.state.user} />;\r\n    const recipient = <RecipientPage user={this.state.user} />;\r\n\r\n    return (\r\n      <div>\r\n        <Nav\r\n          user={this.state.user}\r\n          connectedTo={this.state.connectedTo}\r\n          onConnect={this.onConnect}\r\n          loggedIn={this.state.loggedIn}\r\n        />\r\n        {this.state.loggedIn ? <Redirect to={ROUTES.REQUESTOR} /> : null}\r\n        <div className=\"application-body\">\r\n          <Route exact path={ROUTES.HOME} render={() => home} />\r\n          <Route exact path={ROUTES.LOGIN} render={() => login} />\r\n          <Route exact path={ROUTES.DASHBOARD} render={() => dashboard} />\r\n          <Route exact path={ROUTES.REQUESTOR} render={() => requestor} />\r\n          <Route exact path={ROUTES.WRITER} render={() => writer} />\r\n          <Route exact path={ROUTES.RECIPIENT} render={() => recipient} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n"],"sourceRoot":""}